{
  int i=0;
  if (seq.getObjectAt(0) instanceof ASN1Integer) {
    ASN1Integer encVersion=ASN1Integer.getInstance(seq.getObjectAt(i++));
    this.version=encVersion.getValue().intValue();
  }
 else {
    this.version=1;
  }
  this.service=ServiceType.getInstance(seq.getObjectAt(i++));
  while (i < seq.size()) {
    ASN1Encodable x=seq.getObjectAt(i);
    if (x instanceof ASN1Integer) {
      this.nonce=ASN1Integer.getInstance(x).getValue();
    }
 else     if (x instanceof ASN1GeneralizedTime) {
      this.requestTime=DVCSTime.getInstance(x);
    }
 else     if (x instanceof ASN1TaggedObject) {
      ASN1TaggedObject t=ASN1TaggedObject.getInstance(x);
      int tagNo=t.getTagNo();
switch (tagNo) {
case TAG_REQUESTER:
        this.requester=GeneralNames.getInstance(t,false);
      break;
case TAG_REQUEST_POLICY:
    this.requestPolicy=PolicyInformation.getInstance(ASN1Sequence.getInstance(t,false));
  break;
case TAG_DVCS:
this.dvcs=GeneralNames.getInstance(t,false);
break;
case TAG_DATA_LOCATIONS:
this.dataLocations=GeneralNames.getInstance(t,false);
break;
case TAG_EXTENSIONS:
this.extensions=Extensions.getInstance(t,false);
break;
}
}
 else {
this.requestTime=DVCSTime.getInstance(x);
}
i++;
}
}

{
  if (!typing.containsKey(peer)) {
    if (peer.getPeerType() == PeerType.PRIVATE) {
      UserTypingVM userTypingVM=context().getTypingModule().getTyping(peer.getPeerId());
      final JsBindedValue<JsTyping> value=new JsBindedValue<>();
      userTypingVM.getTyping().subscribe(new ValueChangedListener<Boolean>(){
        @Override public void onChanged(        Boolean val,        Value<Boolean> valueModel){
          String typingValue=null;
          if (val) {
            typingValue=messenger.getFormatter().formatTyping("");
          }
          value.changeValue(JsTyping.create(typingValue));
        }
      }
);
      typing.put(peer,value);
    }
 else     if (peer.getPeerType() == PeerType.GROUP) {
      GroupTypingVM groupTypingVM=context().getTypingModule().getGroupTyping(peer.getPeerId());
      final JsBindedValue<JsTyping> value=new JsBindedValue<>();
      groupTypingVM.getActive().subscribe(new ValueChangedListener<int[]>(){
        @Override public void onChanged(        int[] val,        Value<int[]> valueModel){
          String typingValue=null;
          if (val.length == 1) {
            typingValue=messenger.getFormatter().formatTyping(context().getUsersModule().getUsers().get(val[0]).getName().get());
          }
 else           if (val.length > 1) {
            typingValue=messenger.getFormatter().formatTyping(val.length);
          }
          value.changeValue(JsTyping.create(typingValue));
        }
      }
);
      typing.put(peer,value);
    }
 else {
      throw new RuntimeException();
    }
  }
  return typing.get(peer);
}

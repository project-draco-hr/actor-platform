{
  if (!calls.containsKey(id)) {
    final CallVM callModel=messenger.getCall(Long.parseLong(id));
    final JsBindedValue<JsCall> jsCall=new JsBindedValue<>(JsCall.create(messenger,callModel));
    callModel.getState().subscribe(new ValueChangedListener<CallState>(){
      @Override public void onChanged(      CallState val,      Value<CallState> valueModel){
        jsCall.changeValue(JsCall.create(messenger,callModel));
      }
    }
);
    callModel.getMembers().subscribe(new ValueChangedListener<ArrayList<CallMember>>(){
      @Override public void onChanged(      ArrayList<CallMember> val,      Value<ArrayList<CallMember>> valueModel){
        jsCall.changeValue(JsCall.create(messenger,callModel));
      }
    }
);
    calls.put(id,jsCall);
  }
  return calls.get(id);
}

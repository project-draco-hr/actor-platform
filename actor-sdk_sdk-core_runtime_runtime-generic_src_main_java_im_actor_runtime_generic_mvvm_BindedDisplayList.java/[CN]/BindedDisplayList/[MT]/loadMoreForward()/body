{
  im.actor.runtime.Runtime.checkMainThread();
  if (isLoadMoreForwardRequested) {
    return;
  }
  if (!window.startForwardLoading()) {
    return;
  }
  isLoadMoreForwardRequested=true;
  final int gen=currentGeneration;
  final long start=System.currentTimeMillis();
  ListEngineDisplayLoadCallback<T> callback=cover(new ListEngineDisplayLoadCallback<T>(){
    @Override public void onLoaded(    List<T> items,    long topSortKey,    long bottomSortKey){
      im.actor.runtime.Runtime.checkMainThread();
      window.completeForwardLoading();
      if (items.size() == 0) {
        window.onForwardCompleted();
        isLoadMoreForwardRequested=false;
      }
 else {
        window.onForwardSliceLoaded(bottomSortKey);
        if (linearLayoutCallback != null) {
          linearLayoutCallback.setStackFromEnd(false);
        }
        editList(Modifications.addLoadMore(items),new Runnable(){
          @Override public void run(){
            if (gen == currentGeneration) {
              isLoadMoreForwardRequested=false;
            }
          }
        }
,true);
      }
    }
  }
,currentGeneration);
  if (mode != ListMode.SEARCH) {
    listEngine.loadForward(window.getCurrentForwardHead(),pageSize,callback);
  }
 else {
    listEngine.loadForward(query,window.getCurrentForwardHead(),pageSize,callback);
  }
}

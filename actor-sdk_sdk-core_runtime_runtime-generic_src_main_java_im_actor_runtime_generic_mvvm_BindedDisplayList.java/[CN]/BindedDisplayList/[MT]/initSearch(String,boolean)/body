{
  im.actor.runtime.Runtime.checkMainThread();
  if (isGlobalList) {
    throw new RuntimeException("Global DisplayList can't perform search");
  }
  if (query == null || query.trim().length() == 0) {
    throw new RuntimeException("Query can't be null or empty");
  }
  if (mode != null && mode == ListMode.SEARCH && this.query.equals(query)) {
    return;
  }
  this.mode=ListMode.SEARCH;
  this.query=query;
  if (refresh) {
    editList((Modification)Modifications.clear(),true);
  }
  stateModel.change(State.LOADING_EMPTY);
  isLoadMoreBackwardRequested=false;
  isLoadMoreBackwardRequested=false;
  currentGeneration++;
  window.startInitForward();
  pendingModifications.clear();
  listEngine.loadForward(query,pageSize,cover(new ListEngineDisplayLoadCallback<T>(){
    @Override public void onLoaded(    List<T> items,    long topSortKey,    long bottomSortKey){
      im.actor.runtime.Runtime.checkMainThread();
      window.completeInitForward(bottomSortKey);
      editList(Modifications.replace(items),true);
      if (items.size() == 0) {
        window.onForwardCompleted();
      }
      for (      Modification<T> m : pendingModifications) {
        editList(m);
      }
      pendingModifications.clear();
    }
  }
,currentGeneration));
}

{
  long prev=0;
  long prevLong=0;
  int prevLongCount=0;
  ArrayList<SpanDescription> list=new ArrayList<SpanDescription>();
  for (int i=0; i < s.length(); i++) {
    long current=s.charAt(i);
    if (prevLongCount == 3) {
      long prevId=((prevLong & 0xFFFFFFFF) << 16) + current;
      if (Arrays.binarySearch(EMOJI_SORTED,prevId) >= 0) {
        list.add(new SpanDescription(prevId,i - 3,i + 1));
        prev=0;
        prevLong=0;
        prevLongCount=0;
        continue;
      }
    }
    if (prev != 0) {
      long prevId=((prev & 0xFFFF) << 16) + current;
      if (Arrays.binarySearch(EMOJI_SORTED,prevId) >= 0) {
        list.add(new SpanDescription(prevId,i - 1,i + 1));
        prev=0;
        prevLong=0;
        prevLongCount=0;
        continue;
      }
    }
    if (Arrays.binarySearch(EMOJI_SORTED,current) >= 0) {
      list.add(new SpanDescription(current,i,i + 1));
      prev=0;
      prevLong=0;
      prevLongCount=0;
    }
 else {
      prev=current;
      prevLong=((prevLong & 0xFFFFFFFF) << 16) + current;
      if (prevLongCount < 3) {
        prevLongCount++;
      }
    }
  }
  Spannable spannable=spannableFactory.newSpannable(s);
  for (  SpanDescription description : list) {
    spannable.setSpan(new EmojiSpan(this,indexes.get(description.id),emojiSideSize,originalMetrics.get(mode)),description.start,description.end,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  }
  return spannable;
}

{
  ArrayList<Track> otherTracks=new ArrayList<Track>();
  int angle=0;
  if (sourceVideo != null) {
    MediaMetadataRetriever retriever=new MediaMetadataRetriever();
    retriever.setDataSource(sourceVideo);
    angle=Integer.parseInt(retriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_ROTATION));
    retriever.release();
    Movie m=new MovieCreator().build(sourceVideo);
    for (    Track track : m.getTracks()) {
      if (!track.getHandler().equals("vide")) {
        otherTracks.add(track);
      }
    }
  }
  H264TrackImpl h264Track=new H264TrackImpl(new FileDataSourceImpl(videoTrack));
  Movie m=new Movie();
  Matrix matrix;
switch (angle) {
default :
case 0:
    matrix=Matrix.ROTATE_0;
  break;
case 90:
matrix=Matrix.ROTATE_90;
break;
case 180:
matrix=Matrix.ROTATE_180;
break;
case 270:
matrix=Matrix.ROTATE_270;
break;
}
h264Track.getTrackMetaData().setMatrix(matrix);
m.addTrack(h264Track);
for (Track other : otherTracks) {
m.addTrack(other);
}
Container out=new DefaultMp4Builder().build(m);
FileOutputStream fos=new FileOutputStream(new File(destFile));
FileChannel fc=fos.getChannel();
out.writeContainer(fc);
fos.close();
}

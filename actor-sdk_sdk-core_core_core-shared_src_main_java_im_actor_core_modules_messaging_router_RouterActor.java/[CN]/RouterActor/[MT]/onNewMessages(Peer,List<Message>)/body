{
  assertTrue(messages.size() != 0);
  boolean isConversationVisible=isConversationVisible(peer);
  ConversationState state=conversationStates.getValue(peer.getUnuqueId());
  Message topMessage=null;
  int unreadCount=0;
  long maxInReadDate=0;
  long maxInDate=0;
  for (  Message m : messages) {
    if (topMessage == null || topMessage.getSortDate() < m.getSortDate()) {
      topMessage=m;
    }
    if (m.getSenderId() != myUid()) {
      if (m.getSortDate() > state.getInReadDate()) {
        unreadCount++;
        maxInReadDate=Math.max(maxInReadDate,m.getSortDate());
      }
      if (m.getSortDate() > state.getInMaxMessageDate()) {
        maxInDate=Math.max(maxInDate,m.getSortDate());
      }
    }
  }
  conversation(peer).addOrUpdateItems(messages);
  updateChatState(peer);
  boolean isRead=false;
  if (unreadCount != 0) {
    if (isConversationVisible) {
      boolean needUpdateState=false;
      if (maxInReadDate > 0) {
        if (state.getInReadDate() < maxInReadDate) {
          state=state.changeInReadDate(maxInReadDate);
        }
        state=state.changeCounter(0);
        context().getMessagesModule().getPlainReadActor().send(new CursorReaderActor.MarkRead(peer,maxInReadDate));
        context().getNotificationsModule().onOwnRead(peer,maxInReadDate);
        isRead=true;
        needUpdateState=true;
      }
      if (state.getInMaxMessageDate() < maxInDate) {
        state.changeInMaxDate(maxInDate);
        needUpdateState=true;
      }
      if (needUpdateState) {
        conversationStates.addOrUpdateItem(state);
      }
    }
 else {
      state=state.changeCounter(state.getUnreadCount() + unreadCount);
      if (state.getInMaxMessageDate() < maxInDate) {
        state=state.changeInMaxDate(maxInDate);
      }
      conversationStates.addOrUpdateItem(state);
      notifyActiveDialogsVM();
    }
  }
  if (maxInReadDate > 0 && !isRead) {
    context().getMessagesModule().getPlainReceiverActor().send(new CursorReceiverActor.MarkReceived(peer,maxInReadDate));
  }
  Promise<Void> res=getDialogsRouter().onMessage(peer,topMessage,state.getUnreadCount());
  if (!isConversationVisible) {
    for (    Message m : messages) {
      if (m.getSenderId() != myUid()) {
        boolean hasCurrentMention=false;
        if (m.getContent() instanceof TextContent) {
          if (((TextContent)m.getContent()).getMentions().contains(myUid())) {
            hasCurrentMention=true;
          }
        }
        int messagesCount=0;
        int dialogsCount=0;
        for (        Peer activePeer : activeDialogStorage.getAllPeers()) {
          int activeDialogueUnreadCount=conversationStates.getValue(activePeer.getUnuqueId()).getUnreadCount();
          if (activeDialogueUnreadCount > 0) {
            dialogsCount++;
            messagesCount+=activeDialogueUnreadCount;
          }
        }
        context().getNotificationsModule().onInMessage(peer,m.getSenderId(),m.getSortDate(),ContentDescription.fromContent(m.getContent()),hasCurrentMention,messagesCount,dialogsCount);
      }
    }
  }
  return res;
}

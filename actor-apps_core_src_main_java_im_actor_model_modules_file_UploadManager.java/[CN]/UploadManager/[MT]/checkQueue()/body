{
  if (LOG) {
    Log.d(TAG,"- Checking queue");
  }
  int activeUploads=0;
  for (  QueueItem queueItem : queue) {
    if (queueItem.isStarted) {
      activeUploads++;
    }
  }
  if (activeUploads >= SIM_MAX_UPLOADS) {
    if (LOG) {
      Log.d(TAG,"- Already have max number of simultaneous uploads");
    }
    return;
  }
  QueueItem pendingQueue=null;
  for (  QueueItem queueItem : queue) {
    if (!queueItem.isStarted && !queueItem.isStopped) {
      pendingQueue=queueItem;
      break;
    }
  }
  if (pendingQueue == null) {
    if (LOG) {
      Log.d(TAG,"- No work for downloading");
    }
    return;
  }
  if (LOG) {
    Log.d(TAG,"- Starting upload file #" + pendingQueue.fileDescriptor);
  }
  pendingQueue.isStarted=true;
  final QueueItem finalPendingQueue=pendingQueue;
  pendingQueue.taskRef=system().actorOf(Props.create(UploadTask.class,new ActorCreator<UploadTask>(){
    @Override public UploadTask create(){
      return new UploadTask(finalPendingQueue.rid,finalPendingQueue.fileDescriptor,finalPendingQueue.fileName,self(),modules());
    }
  }
).changeDispatcher("heavy"),"actor/upload/task_" + RandomUtils.nextRid());
}

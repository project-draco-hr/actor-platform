{
  if (currentConnection != null && currentConnection.isClosed()) {
    currentConnection=null;
    currentConnectionId=0;
    outSeq=0;
    inSeq=0;
    checkConnection();
  }
  try {
    if (currentConnection != null) {
      if (authKey != null) {
        int seq=outSeq++;
        byte[] ruIv=new byte[16];
        Crypto.nextBytes(ruIv);
        byte[] usIv=new byte[16];
        Crypto.nextBytes(usIv);
        byte[] ruCipherText=clientRUEncryptor.encryptPackage(ByteStrings.longToBytes(seq),ruIv,ByteStrings.substring(data,offset,len));
        byte[] ruPackage=new EncryptedCBCPackage(ruIv,ruCipherText).toByteArray();
        byte[] usCipherText=clientUSEncryptor.encryptPackage(ByteStrings.longToBytes(seq),usIv,ruPackage);
        byte[] usPackage=new EncryptedCBCPackage(usIv,usCipherText).toByteArray();
        EncryptedPackage encryptedPackage=new EncryptedPackage(seq,usPackage);
        byte[] cipherData=encryptedPackage.toByteArray();
        DataOutput bos=new DataOutput();
        bos.writeLong(authId);
        bos.writeLong(sessionId);
        bos.writeBytes(cipherData,0,cipherData.length);
        byte[] pkg=bos.toByteArray();
        currentConnection.post(pkg,0,pkg.length);
      }
 else {
        DataOutput bos=new DataOutput();
        bos.writeLong(authId);
        bos.writeLong(sessionId);
        bos.writeBytes(data,offset,len);
        byte[] pkg=bos.toByteArray();
        currentConnection.post(pkg,0,pkg.length);
      }
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Closing connection: exception during push");
    Log.e(TAG,e);
    if (currentConnection != null) {
      try {
        currentConnection.close();
      }
 catch (      Exception e2) {
        e2.printStackTrace();
      }
      currentConnection=null;
      currentConnectionId=0;
      outSeq=0;
      inSeq=0;
    }
    checkConnection();
  }
}

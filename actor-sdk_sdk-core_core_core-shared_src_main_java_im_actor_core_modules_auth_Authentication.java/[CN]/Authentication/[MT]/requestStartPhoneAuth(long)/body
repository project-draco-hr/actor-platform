{
  return new Command<AuthState>(){
    @Override public void start(    final CommandCallback<AuthState> callback){
      ArrayList<String> langs=new ArrayList<>();
      for (      String s : modules.getConfiguration().getPreferredLanguages()) {
        langs.add(s);
      }
      request(new RequestStartPhoneAuth(phone,apiConfiguration.getAppId(),apiConfiguration.getAppKey(),deviceHash,apiConfiguration.getDeviceTitle(),modules.getConfiguration().getTimeZone(),langs),new RpcCallback<ResponseStartPhoneAuth>(){
        @Override public void onResult(        ResponseStartPhoneAuth response){
          modules.getPreferences().putLong(KEY_PHONE,phone);
          modules.getPreferences().putString(KEY_TRANSACTION_HASH,response.getTransactionHash());
          if (response.getActivationType() == ApiPhoneActivationType.CODE) {
            state=AuthState.CODE_VALIDATION_PHONE;
          }
 else           if (response.getActivationType() == ApiPhoneActivationType.PASSWORD) {
            state=AuthState.PASSWORD_VALIDATION;
          }
 else {
            state=AuthState.CODE_VALIDATION_PHONE;
          }
          im.actor.runtime.Runtime.postToMainThread(new Runnable(){
            @Override public void run(){
              callback.onResult(state);
            }
          }
);
        }
        @Override public void onError(        final RpcException e){
          im.actor.runtime.Runtime.postToMainThread(new Runnable(){
            @Override public void run(){
              Log.e(TAG,e);
              callback.onError(e);
            }
          }
);
        }
      }
);
    }
  }
;
}

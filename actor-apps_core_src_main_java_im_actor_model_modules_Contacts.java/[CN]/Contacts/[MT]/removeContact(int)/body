{
  return new Command<Boolean>(){
    @Override public void start(    final CommandCallback<Boolean> callback){
      im.actor.model.entity.User user=users().getValue(uid);
      if (user == null) {
        runOnUiThread(new Runnable(){
          @Override public void run(){
            callback.onError(new RpcInternalException());
          }
        }
);
        return;
      }
      request(new RequestRemoveContact(uid,user.getAccessHash()),new RpcCallback<ResponseSeq>(){
        @Override public void onResult(        ResponseSeq response){
          ArrayList<Integer> uids=new ArrayList<Integer>();
          uids.add(uid);
          SeqUpdate update=new SeqUpdate(response.getSeq(),response.getState(),UpdateContactsRemoved.HEADER,new UpdateContactsRemoved(uids).toByteArray());
          updates().onUpdateReceived(update);
          runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onResult(true);
            }
          }
);
        }
        @Override public void onError(        RpcException e){
          runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onError(new RpcInternalException());
            }
          }
);
        }
      }
);
    }
  }
;
}

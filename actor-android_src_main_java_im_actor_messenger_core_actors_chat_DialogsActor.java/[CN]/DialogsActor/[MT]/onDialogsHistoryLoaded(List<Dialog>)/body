{
  ArrayList<DialogItem> updated=new ArrayList<DialogItem>();
  for (  Dialog d : dialogs) {
    int chatId=d.getPeer().getId();
    int chatType;
    String title;
    Avatar avatar;
    if (d.getPeer().getType() == PeerType.GROUP) {
      chatType=DialogType.TYPE_GROUP;
      GroupModel groupModel=groups().get(chatId);
      title=groupModel.getTitle();
      avatar=groupModel.getAvatarModel().getValue();
    }
 else     if (d.getPeer().getType() == PeerType.PRIVATE) {
      chatType=DialogType.TYPE_USER;
      UserModel userModel=users().get(chatId);
      title=userModel.getName();
      avatar=userModel.getAvatar().getValue();
    }
 else {
      continue;
    }
    DialogItem item=listEngine.getValue(DialogUids.getDialogUid(chatType,chatId));
    if (item == null) {
      MessageDesc desc=createDesc(d.getMessage());
      DialogItem dialogItem=new DialogItemBuilder().setType(chatType).setId(chatId).setDialogTitle(title).setAvatar(avatar).setUnreadCount(d.getUnreadCount()).setRid(d.getRid()).setSortKey(d.getSortDate()).setTime(d.getDate()).setMessageType(desc.getType()).setText(desc.getText()).setStatus(MessageState.SENT).setSenderId(d.getSenderUid()).setRelatedUid(desc.getRelatedUid()).createDialogItem();
      searchEngine.index(DialogUids.getDialogUid(chatType,chatId),d.getSortDate(),title,new GlobalSearch(chatType,chatId,title,avatar));
      updated.add(dialogItem);
    }
  }
  listEngine.addOrUpdateItems(updated);
}

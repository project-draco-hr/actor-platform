{
  MessageDesc desc=createDesc(conversationMessage);
  String name;
  Avatar avatar;
  if (type == DialogType.TYPE_USER) {
    UserModel u=users().get(id);
    if (u == null) {
      return;
    }
    name=u.getName();
    avatar=u.getAvatar().getValue();
  }
 else   if (type == DialogType.TYPE_GROUP) {
    GroupModel info=groups().get(id);
    if (info == null) {
      return;
    }
    name=info.getTitle();
    avatar=null;
  }
 else {
    return;
  }
  DialogItem item=listEngine.getValue(DialogUids.getDialogUid(type,id));
  DialogItem dialogItem;
  if (item == null) {
    if (desc.isSilent) {
      return;
    }
    dialogItem=new DialogItemBuilder().setType(type).setId(id).setDialogTitle(name).setAvatar(avatar).setUnreadCount(0).setRid(conversationMessage.getRid()).setSortKey(conversationMessage.getSortKey()).setTime(conversationMessage.getTime()).setMessageType(desc.type).setText(desc.text).setStatus(conversationMessage.getMessageState()).setSenderId(conversationMessage.getSenderId()).setRelatedUid(desc.getRelatedUid()).createDialogItem();
  }
 else   if (item.getSortKey() <= conversationMessage.getSortKey()) {
    long sKey=desc.isSilent ? item.getSortKey() : conversationMessage.getSortKey();
    dialogItem=new DialogItemBuilder(item).setRid(conversationMessage.getRid()).setSortKey(sKey).setTime(conversationMessage.getTime()).setMessageType(desc.type).setText(desc.text).setStatus(conversationMessage.getMessageState()).setSenderId(conversationMessage.getSenderId()).setRelatedUid(desc.getRelatedUid()).createDialogItem();
  }
 else {
    return;
  }
  listEngine.addOrUpdateItem(dialogItem);
  searchEngine.index(DialogUids.getDialogUid(type,id),conversationMessage.getSortKey(),name,new GlobalSearch(type,id,name,avatar));
  ProfileSyncState.onDialogsNotEmpty();
}

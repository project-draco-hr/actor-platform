{
  super(modules);
  collection=new MVVMCollection<Group,GroupVM>(modules.getConfiguration().getStorageProvider().createKeyValue(STORAGE_GROUPS)){
    @Override protected GroupVM createNew(    Group raw){
      return new GroupVM(raw);
    }
    @Override protected byte[] serialize(    Group raw){
      return raw.toByteArray();
    }
    @Override protected Group deserialize(    byte[] raw){
      try {
        return new Group(raw);
      }
 catch (      IOException e) {
        e.printStackTrace();
        return null;
      }
    }
  }
;
  groups=collection.getEngine();
  avatarVMs=new HashMap<Integer,GroupAvatarVM>();
  avatarChangeActor=system().actorOf(Props.create(GroupAvatarChangeActor.class,new ActorCreator<GroupAvatarChangeActor>(){
    @Override public GroupAvatarChangeActor create(){
      return new GroupAvatarChangeActor(modules);
    }
  }
),"actor/avatar/group");
}

{
  return new Command<Boolean>(){
    @Override public void start(    final CommandCallback<Boolean> callback){
      User user=getUsers().getValue(uid);
      if (user == null) {
        mainThread.runOnUiThread(new Runnable(){
          @Override public void run(){
            callback.onError(new RpcInternalException());
          }
        }
);
        return;
      }
      messenger.getActorApi().request(new RequestEditUserLocalName(user.getUid(),user.getAccessHash(),name),new RpcCallback<ResponseSeq>(){
        @Override public void onResult(        ResponseSeq response){
          SeqUpdate update=new SeqUpdate(response.getSeq(),response.getState(),UpdateUserLocalNameChanged.HEADER,new UpdateUserLocalNameChanged(uid,name).toByteArray());
          messenger.getUpdatesModule().onUpdateReceived(update);
          mainThread.runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onResult(true);
            }
          }
);
        }
        @Override public void onError(        RpcException e){
          mainThread.runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onError(new RpcInternalException());
            }
          }
);
        }
      }
);
    }
  }
;
}

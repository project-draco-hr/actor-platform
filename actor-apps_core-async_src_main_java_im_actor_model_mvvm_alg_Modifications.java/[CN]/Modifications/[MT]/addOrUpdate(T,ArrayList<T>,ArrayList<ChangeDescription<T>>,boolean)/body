{
  long id=item.getEngineId();
  long sortKey=item.getEngineSort();
  int removedIndex=-1;
  int addedIndex=-1;
  for (int i=0; i < sourceList.size(); i++) {
    T srcItem=sourceList.get(i);
    if (srcItem.getEngineId() == id) {
      if (isAddOnly) {
        return;
      }
      sourceList.remove(i);
      Log.d("Modifications","proc:remove: " + i);
      if (addedIndex >= 0) {
        removedIndex=i - 1;
      }
 else {
        removedIndex=i;
      }
      Log.d("Modifications","proc:remove_res: " + removedIndex);
      i--;
      continue;
    }
 else {
      if ((addedIndex < 0) && sortKey > srcItem.getEngineSort()) {
        Log.d("Modifications","proc:add: " + i);
        addedIndex=i;
        sourceList.add(i,item);
        i++;
      }
    }
    if (addedIndex >= 0 && removedIndex >= 0) {
      break;
    }
  }
  if (addedIndex < 0) {
    addedIndex=sourceList.size();
    sourceList.add(sourceList.size(),item);
  }
  if (addedIndex == removedIndex) {
    Log.d("Modifications","update: " + addedIndex);
    changes.add(ChangeDescription.update(addedIndex,item));
  }
 else   if (removedIndex >= 0) {
    Log.d("Modifications","update+move: " + removedIndex + "->"+ addedIndex);
    changes.add(ChangeDescription.update(removedIndex,item));
    changes.add(ChangeDescription.<T>move(removedIndex,addedIndex));
  }
 else {
    Log.d("Modifications","add: " + addedIndex);
    changes.add(ChangeDescription.add(addedIndex,item));
  }
}

{
  if (container instanceof ContentLocalContainer) {
    ContentLocalContainer localContainer=(ContentLocalContainer)container;
    AbsLocalContent content=((ContentLocalContainer)container).getContent();
    if (content instanceof LocalPhoto) {
      return new PhotoContent(localContainer);
    }
 else     if (content instanceof LocalVideo) {
      return new VideoContent(localContainer);
    }
 else     if (content instanceof LocalDocument) {
      return new DocumentContent(localContainer);
    }
 else {
      throw new IOException("Unknown type");
    }
  }
 else   if (container instanceof ContentRemoteContainer) {
    ContentRemoteContainer remoteContainer=(ContentRemoteContainer)container;
    Message content=((ContentRemoteContainer)container).getMessage();
    try {
      if (content instanceof DocumentMessage) {
        DocumentMessage d=(DocumentMessage)content;
        if (d.getExt() instanceof DocumentExPhoto) {
          return new PhotoContent(remoteContainer);
        }
 else         if (d.getExt() instanceof DocumentExVideo) {
          return new VideoContent(remoteContainer);
        }
 else {
          return new DocumentContent(remoteContainer);
        }
      }
 else       if (content instanceof TextMessage) {
        return new TextContent(remoteContainer);
      }
 else       if (content instanceof ServiceMessage) {
        ServiceEx ext=((ServiceMessage)content).getExt();
        if (ext instanceof ServiceExContactRegistered) {
          return new ServiceUserRegistered(remoteContainer);
        }
 else         if (ext instanceof ServiceExChangedTitle) {
          return new ServiceGroupTitleChanged(remoteContainer);
        }
 else         if (ext instanceof ServiceExChangedAvatar) {
          return new ServiceGroupAvatarChanged(remoteContainer);
        }
 else         if (ext instanceof ServiceExGroupCreated) {
          return new ServiceGroupCreated(remoteContainer);
        }
 else         if (ext instanceof ServiceExUserAdded) {
          return new ServiceGroupUserAdded(remoteContainer);
        }
 else         if (ext instanceof ServiceExUserKicked) {
          return new ServiceGroupUserKicked(remoteContainer);
        }
 else         if (ext instanceof ServiceExUserLeft) {
          return new ServiceGroupUserLeave(remoteContainer);
        }
 else {
          return new ServiceContent(remoteContainer);
        }
      }
 else       if (content instanceof JsonMessage) {
        JsonMessage json=(JsonMessage)content;
        JSONObject object=new JSONObject(json.getRawJson());
        if (object.getString("dataType").equals("banner")) {
          return new BannerContent(remoteContainer);
        }
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    return new UnsupportedContent(remoteContainer);
  }
 else {
    throw new IOException("Unknown type");
  }
}

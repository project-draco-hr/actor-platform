{
  mEGLDisplay=EGL14.eglGetDisplay(EGL14.EGL_DEFAULT_DISPLAY);
  if (mEGLDisplay == EGL14.EGL_NO_DISPLAY) {
    throw new RuntimeException("unable to get EGL14 display");
  }
  int[] version=new int[2];
  if (!EGL14.eglInitialize(mEGLDisplay,version,0,version,1)) {
    mEGLDisplay=null;
    throw new RuntimeException("unable to initialize EGL14");
  }
  int[] attribList={EGL14.EGL_RED_SIZE,8,EGL14.EGL_GREEN_SIZE,8,EGL14.EGL_BLUE_SIZE,8,EGL14.EGL_RENDERABLE_TYPE,EGL_OPENGL_ES2_BIT,EGL_RECORDABLE_ANDROID,1,EGL14.EGL_NONE};
  EGLConfig[] configs=new EGLConfig[1];
  int[] numConfigs=new int[1];
  if (!EGL14.eglChooseConfig(mEGLDisplay,attribList,0,configs,0,configs.length,numConfigs,0)) {
    throw new RuntimeException("unable to find RGB888+recordable ES2 EGL config");
  }
  int[] attrib_list={EGL14.EGL_CONTEXT_CLIENT_VERSION,2,EGL14.EGL_NONE};
  mEGLContext=EGL14.eglCreateContext(mEGLDisplay,configs[0],EGL14.EGL_NO_CONTEXT,attrib_list,0);
  checkEglError("eglCreateContext");
  if (mEGLContext == null) {
    throw new RuntimeException("null context");
  }
  int[] surfaceAttribs={EGL14.EGL_NONE};
  mEGLSurface=EGL14.eglCreateWindowSurface(mEGLDisplay,configs[0],mSurface,surfaceAttribs,0);
  checkEglError("eglCreateWindowSurface");
  if (mEGLSurface == null) {
    throw new RuntimeException("surface was null");
  }
}

{
  if (!isOverlaysSupported) {
    return false;
  }
  boolean isChanged=false;
  for (int i=0; i < values.size(); i++) {
    if (!isDirty(i)) {
      continue;
    }
    V prev=null;
    V current=values.get(i);
    V next=null;
    if (i - 1 >= 0) {
      prev=values.get(i - 1);
    }
    if (i + 1 < values.size()) {
      next=values.get(i + 1);
    }
    jsOverlays.update(i,entityConverter.buildOverlay(prev,current,next));
    markAsClean(i);
    isChanged=true;
  }
  return isChanged;
}

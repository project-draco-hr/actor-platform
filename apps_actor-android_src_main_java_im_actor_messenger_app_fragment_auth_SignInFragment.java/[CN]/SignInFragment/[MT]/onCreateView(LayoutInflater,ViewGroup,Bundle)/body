{
  keyboardHelper=new KeyboardHelper(getActivity());
  View v=inflater.inflate(R.layout.fragment_sign_in,container,false);
  ((TextView)v.findViewById(R.id.button_confirm_sms_code_text)).setTypeface(Fonts.medium());
  ((TextView)v.findViewById(R.id.button_edit_phone)).setTypeface(Fonts.medium());
  String phoneNumber="+" + messenger().getAuthPhone();
  try {
    Phonenumber.PhoneNumber number=PhoneNumberUtil.getInstance().parse(phoneNumber,null);
    phoneNumber=PhoneNumberUtil.getInstance().format(number,PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
  }
 catch (  NumberParseException e) {
    e.printStackTrace();
  }
  ((TextView)v.findViewById(R.id.sendHint)).setText(Html.fromHtml(getString(R.string.auth_code_hint).replace("{0}","<b>" + phoneNumber + "</b>")));
  smsCodeEnterEditText=(EditText)v.findViewById(R.id.et_sms_code_enter);
  smsCodeEnterEditText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
      if (s.length() == 6) {
        sendCode();
      }
    }
    @Override public void afterTextChanged(    Editable s){
    }
  }
);
  smsCodeEnterEditText.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_ACTION_GO) {
        sendCode();
        return true;
      }
      return false;
    }
  }
);
  onClick(v,R.id.button_confirm_sms_code,new View.OnClickListener(){
    @Override public void onClick(    View v){
      sendCode();
    }
  }
);
  onClick(v,R.id.button_edit_phone,new View.OnClickListener(){
    @Override public void onClick(    View v){
      new AlertDialog.Builder(getActivity()).setMessage(R.string.auth_code_change).setPositiveButton(R.string.auth_code_change_yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          messenger().resetAuth();
          updateState();
        }
      }
).setNegativeButton(R.string.dialog_cancel,null).show().setCanceledOnTouchOutside(true);
    }
  }
);
  return v;
}

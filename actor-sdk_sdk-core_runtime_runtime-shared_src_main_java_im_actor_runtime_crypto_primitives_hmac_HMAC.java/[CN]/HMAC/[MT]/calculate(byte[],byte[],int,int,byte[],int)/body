{
  byte[] fixedSecret=new byte[digest.getDigestSize()];
  if (secret.length > digest.getDigestSize()) {
    digest.reset();
    digest.update(secret,0,secret.length);
    digest.doFinal(fixedSecret,0);
  }
 else   if (secret.length < digest.getDigestSize()) {
    ByteStrings.write(fixedSecret,0,secret,0,secret.length);
    for (int i=secret.length; i < fixedSecret.length; i++) {
      fixedSecret[i]=0;
    }
  }
 else {
    fixedSecret=secret;
  }
  byte[] outerKeyPad=new byte[digest.getDigestSize()];
  byte[] innerKeyPad=new byte[digest.getDigestSize()];
  for (int i=0; i < outerKeyPad.length; i++) {
    outerKeyPad[i]=(byte)(0x5c ^ fixedSecret[i]);
    innerKeyPad[i]=(byte)(0x36 ^ fixedSecret[i]);
  }
  byte[] innnerHash=new byte[digest.getDigestSize()];
  digest.reset();
  digest.update(innerKeyPad,0,innerKeyPad.length);
  digest.update(message,offset,length);
  digest.doFinal(innnerHash,0);
  digest.reset();
  digest.update(outerKeyPad,0,outerKeyPad.length);
  digest.update(innnerHash,0,innnerHash.length);
  digest.doFinal(dest,destOffset);
}

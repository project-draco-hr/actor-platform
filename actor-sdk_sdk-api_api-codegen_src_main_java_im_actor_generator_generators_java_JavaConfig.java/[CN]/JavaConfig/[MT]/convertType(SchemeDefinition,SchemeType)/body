{
  type=reduceAlias(type,definition);
  if (type instanceof SchemePrimitiveType) {
    return JavaConfig.mapPrimitiveType((SchemePrimitiveType)type);
  }
 else   if (type instanceof SchemeStructType) {
    return getStructName(((SchemeStructType)type).getType());
  }
 else   if (type instanceof SchemeListType) {
    SchemeListType listType=(SchemeListType)type;
    SchemeType childType=reduceAlias(listType.getType(),definition);
    if (childType instanceof SchemePrimitiveType) {
      return "List<" + mapPrimitiveReferenceType((SchemePrimitiveType)childType) + ">";
    }
 else     if (childType instanceof SchemeStructType) {
      return "List<" + getStructName(((SchemeStructType)childType).getType()) + ">";
    }
 else     if (childType instanceof SchemeTraitType) {
      SchemeTraitType traitType=(SchemeTraitType)childType;
      if (!definition.getTrait(traitType.getTraitName()).isContainer()) {
        throw new IOException("List item type can't be trait");
      }
      return "List<" + getStructName(traitType.getTraitName()) + ">";
    }
 else     if (childType instanceof SchemeEnumType) {
      return "List<" + getEnumName(((SchemeEnumType)childType).getName()) + ">";
    }
 else {
      throw new IOException("Unsupported list item type: " + type);
    }
  }
 else   if (type instanceof SchemeOptionalType) {
    SchemeOptionalType optionalType=(SchemeOptionalType)type;
    SchemeType childType=reduceAlias(optionalType.getType(),definition);
    if (childType instanceof SchemePrimitiveType) {
      return mapPrimitiveReferenceType((SchemePrimitiveType)childType);
    }
 else     if (childType instanceof SchemeStructType) {
      return getStructName(((SchemeStructType)childType).getType());
    }
 else     if (childType instanceof SchemeEnumType) {
      return getEnumName(((SchemeEnumType)childType).getName());
    }
 else     if (childType instanceof SchemeTraitType) {
      return getStructName(((SchemeTraitType)childType).getTraitName());
    }
 else {
      throw new IOException();
    }
  }
 else   if (type instanceof SchemeEnumType) {
    return getEnumName(((SchemeEnumType)type).getName());
  }
 else   if (type instanceof SchemeTraitType) {
    return getStructName(((SchemeTraitType)type).getTraitName());
  }
 else {
    throw new IOException();
  }
}

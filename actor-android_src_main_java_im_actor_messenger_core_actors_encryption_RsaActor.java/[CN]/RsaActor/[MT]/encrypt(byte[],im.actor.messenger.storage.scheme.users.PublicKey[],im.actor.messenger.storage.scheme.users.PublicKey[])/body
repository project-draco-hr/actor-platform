{
  ArrayList<RsaResult.RsaPart> myParts=new ArrayList<RsaResult.RsaPart>();
  ArrayList<RsaResult.RsaPart> foreignParts=new ArrayList<RsaResult.RsaPart>();
  for (  im.actor.messenger.storage.scheme.users.PublicKey k : myKeys) {
    PublicKey pk=KeyTools.decodeRsaPublicKey(k.getKey());
    try {
      cipher.init(Cipher.ENCRYPT_MODE,pk);
      byte[] encrypted=cipher.doFinal(data);
      myParts.add(new RsaResult.RsaPart(encrypted,k.getKeyHash()));
    }
 catch (    Exception e) {
      e.printStackTrace();
      myParts.add(new RsaResult.RsaPart(k.getKeyHash()));
    }
  }
  for (  im.actor.messenger.storage.scheme.users.PublicKey k : foreign) {
    PublicKey pk=KeyTools.decodeRsaPublicKey(k.getKey());
    try {
      cipher.init(Cipher.ENCRYPT_MODE,pk);
      byte[] encrypted=cipher.doFinal(data);
      foreignParts.add(new RsaResult.RsaPart(encrypted,k.getKeyHash()));
    }
 catch (    Exception e) {
      e.printStackTrace();
      foreignParts.add(new RsaResult.RsaPart(k.getKeyHash()));
    }
  }
  return result(new RsaResult(myParts.toArray(new RsaResult.RsaPart[0]),foreignParts.toArray(new RsaResult.RsaPart[0])));
}

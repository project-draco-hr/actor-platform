{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.tour_activity);
  final VerticalViewPager viewPager=(VerticalViewPager)findViewById(R.id.viewpager);
  final View backToTopText=findViewById(R.id.back_to_top);
  final View backToTopArrow=findViewById(R.id.back_to_top_arrow);
  final View paralax=findViewById(R.id.paralax);
  final View paralaxImage=findViewById(R.id.paralax_image);
  final View background=findViewById(R.id.background);
  final View loginHolder=findViewById(R.id.login_holder);
  final View welcomeImage=findViewById(R.id.welcome_logo);
  final View welcomeText=findViewById(R.id.welcome_text);
  ((TextView)findViewById(R.id.signUpButtonText)).setTypeface(Fonts.medium());
  ((TextView)findViewById(R.id.signIn)).setTypeface(Fonts.medium());
  findViewById(R.id.signUpButton).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(TourActivity.this,AuthActivity.class));
      finish();
    }
  }
);
  findViewById(R.id.signIn).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(TourActivity.this,AuthActivity.class));
      finish();
    }
  }
);
  View.OnClickListener jumpToTopListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      backToTopArrow.animate().alpha(0).setDuration(0).start();
      backToTopText.animate().alpha(0).setDuration(0).start();
      viewPager.setCurrentItem(0,true);
    }
  }
;
  backToTopText.setOnClickListener(jumpToTopListener);
  backToTopArrow.setOnClickListener(jumpToTopListener);
  viewPager.setAdapter(new FragmentStatePagerAdapter(getSupportFragmentManager()){
    @Override public Fragment getItem(    int position){
      if (position == 0 || position == lastPageIndex + 1)       return new Fragment();
      return TourFragment.getInstance(position);
    }
    @Override public int getCount(){
      return 4;
    }
  }
);
  viewPager.setOffscreenPageLimit(3);
  viewPager.setPageMargin(-Screen.dp(165));
  viewPager.setClipChildren(false);
  viewPager.setOnScrollListener(new ScrollListener(){
    public static final int LOGINHOLDER_STATUS_OUT=1;
    public static final int LOGINHOLDER_STATUS_VISIBLE=2;
    public int loginHolderStatus;
    public boolean welcomeShowed=false;
    public boolean mainContentHidden=false;
    public boolean loginHolderBackgroundVisible=false;
    @Override public void onScroll(    int y,    float page){
      if (page < 1) {
        float alpha=1 - page * 2;
        backToTopArrow.animate().alpha(alpha).setDuration(0).start();
        if (loginHolder.getTop() != 0) {
          float loginY=(float)loginHolder.getTop() * ((float)1 - (page));
          loginHolder.animate().y(loginY).setDuration(0).setStartDelay(0).start();
          background.animate().y(loginY - background.getHeight() + loginHolder.getHeight() + Screen.dp(8)).setDuration(0).start();
          background.animate().alpha(page).setDuration(0).start();
          loginHolderStatus=LOGINHOLDER_STATUS_VISIBLE;
          float welcomeImageY=welcomeImage.getTop() - y / 2;
          float welcomeTextY=welcomeText.getTop() - y / 2;
          if (alpha > 0) {
            welcomeImage.animate().alpha(alpha).y(welcomeImageY).setDuration(0).start();
            welcomeText.animate().alpha(alpha).y(welcomeTextY).setDuration(0).start();
          }
 else {
            welcomeImage.animate().alpha(0).setDuration(0).start();
            welcomeText.animate().alpha(0).setDuration(0).start();
          }
        }
        mainContentHidden=false;
      }
 else {
        if (page >= 1 && page <= lastPageIndex) {
          if (!mainContentHidden) {
            mainContentHidden=true;
            loginHolderBackgroundVisible=true;
            loginHolder.animate().y(0).setDuration(0).start();
            background.animate().y(-loginHolder.getTop() + Screen.dp(8)).alpha(1).setDuration(0).start();
            welcomeImage.animate().alpha(0).setDuration(0).start();
            welcomeText.animate().alpha(0).setDuration(0).start();
            backToTopArrow.animate().alpha(0).setDuration(0).start();
            backToTopText.animate().alpha(0).setDuration(0).start();
          }
          if (page > lastPageIndex - 1) {
            float alpha=(page - (lastPageIndex - 1)) * 3 - 2;
            if (alpha > 0) {
              backToTopText.animate().scaleX(alpha).scaleY(alpha).alpha(alpha).setDuration(0).start();
            }
 else {
              backToTopText.animate().scaleX(0).scaleY(0).alpha(0).setDuration(0).start();
            }
          }
        }
 else {
          if (page > lastPageIndex) {
            float progress=page - lastPageIndex;
            if (progress > 0.5) {
              if (loginHolderStatus == LOGINHOLDER_STATUS_VISIBLE) {
                loginHolderStatus=LOGINHOLDER_STATUS_OUT;
                loginHolder.animate().y(-loginHolder.getHeight()).setDuration(200).setInterpolator(new AccelerateDecelerateInterpolator()).setStartDelay(0).start();
              }
              mainContentHidden=false;
            }
 else {
              if (loginHolderStatus == LOGINHOLDER_STATUS_OUT) {
                loginHolderStatus=LOGINHOLDER_STATUS_VISIBLE;
                loginHolder.animate().y(0).setInterpolator(new AccelerateDecelerateInterpolator()).setDuration(200).setStartDelay(0).start();
              }
              if (!mainContentHidden) {
                backToTopArrow.animate().alpha(0).setDuration(0).start();
                backToTopText.animate().alpha(0).setDuration(0).start();
              }
            }
          }
        }
      }
      int paralaxHolderHeight=paralax.getHeight();
      int paralaxImageHeight=paralaxImage.getHeight();
      float paralaxY=-(((float)paralaxImageHeight - paralaxHolderHeight) * ((float)page / (lastPageIndex)));
      paralaxImage.animate().y(paralaxY).setDuration(0).setStartDelay(0).start();
    }
  }
);
}

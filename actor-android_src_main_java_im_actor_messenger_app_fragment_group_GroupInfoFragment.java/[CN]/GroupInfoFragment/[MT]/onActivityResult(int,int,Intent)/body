{
  if (resultCode == Activity.RESULT_OK && requestCode == 0 && data != null && data.hasExtra(Intents.EXTRA_UID)) {
    final UserModel userModel=users().get(data.getIntExtra(Intents.EXTRA_UID,0));
    for (    GroupMember uid : groupInfo.getUsers()) {
      if (uid.getUid() == userModel.getId()) {
        Toast.makeText(getActivity(),R.string.toast_already_member,Toast.LENGTH_SHORT).show();
        return;
      }
    }
    new AlertDialog.Builder(getActivity()).setMessage(getString(R.string.alert_group_add_text).replace("{0}",userModel.getName())).setPositiveButton(R.string.alert_group_add_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog2,      int which){
        ask(GroupsActor.groupUpdates().addUser(chatId,userModel.getId()),getString(R.string.group_adding),new UiAskCallback<Boolean>(){
          @Override public void onPreStart(){
          }
          @Override public void onCompleted(          Boolean res){
            if (!res) {
              Toast.makeText(getActivity(),R.string.toast_unable_add,Toast.LENGTH_SHORT).show();
            }
          }
          @Override public void onError(          Throwable t){
            Toast.makeText(getActivity(),R.string.toast_unable_add,Toast.LENGTH_SHORT).show();
          }
        }
);
      }
    }
).setNegativeButton(R.string.dialog_cancel,null).show().setCanceledOnTouchOutside(true);
  }
 else {
    super.onActivityResult(requestCode,resultCode,data);
  }
}

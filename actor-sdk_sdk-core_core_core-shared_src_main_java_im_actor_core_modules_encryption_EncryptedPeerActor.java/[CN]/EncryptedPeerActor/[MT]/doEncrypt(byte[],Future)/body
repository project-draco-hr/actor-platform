{
  Log.d(TAG,"doEncrypt");
  final byte[] encKey=Crypto.randomBytes(128);
  final ArrayList<EncryptedBoxKey> encryptedKeys=new ArrayList<EncryptedBoxKey>();
  for (  final Integer keyGroup : sessions.keySet()) {
    ask(sessions.get(keyGroup),new EncryptedSessionActor.EncryptPackage(encKey),new AskCallback(){
      @Override public void onResult(      Object obj){
        EncryptedSessionActor.EncryptedPackageRes res=(EncryptedSessionActor.EncryptedPackageRes)obj;
        encryptedKeys.add(new EncryptedBoxKey(uid,keyGroup,res.getData()));
        if (encryptedKeys.size() == sessions.size()) {
          doEncrypt(encKey,data,encryptedKeys,future);
        }
      }
      @Override public void onError(      Exception e){
        future.onError(e);
      }
    }
);
  }
}

{
  Log.w(TAG,"Groups ready #" + keyGroups.size());
  for (  final ApiEncryptionKeyGroup g : keyGroups) {
    sessions.put(g.getKeyGroupId(),system().actorOf(Props.create(EncryptionSessionActor.class,new ActorCreator<EncryptionSessionActor>(){
      @Override public EncryptionSessionActor create(){
        return new EncryptionSessionActor(context(),uid,g);
      }
    }
),getPath() + "/k_" + g.getKeyGroupId()));
  }
  ask(context().getEncryption().getKeyManager(),new KeyManagerActor.FetchOwnKeyGroup(),new AskCallback(){
    @Override public void onResult(    Object obj){
      KeyManagerActor.FetchOwnKeyGroupResult res=(KeyManagerActor.FetchOwnKeyGroupResult)obj;
      ownKeyGroupId=res.getKeyGroupId();
      onOwnKeysReady();
    }
    @Override public void onError(    Exception e){
    }
  }
);
}

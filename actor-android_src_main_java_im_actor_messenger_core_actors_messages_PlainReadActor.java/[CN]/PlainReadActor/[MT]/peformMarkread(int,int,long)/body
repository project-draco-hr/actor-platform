{
  final long pendingUid=DialogUids.getDialogUid(chatType,chatId);
  if (chatType == DialogType.TYPE_USER) {
    UserModel userModel=users().get(chatId);
    if (userModel == null) {
      pending.remove(pendingUid);
      return;
    }
    ask(requests().messageRead(new OutPeer(PeerType.PRIVATE,chatId,userModel.getAccessHash()),date),new FutureCallback<ResponseVoid>(){
      @Override public void onResult(      ResponseVoid result){
        Long pendingDate=pending.get(pendingUid);
        if (pendingDate != null && pendingDate == date) {
          pending.remove(pendingUid);
        }
      }
      @Override public void onError(      Throwable throwable){
      }
    }
);
  }
 else   if (chatType == DialogType.TYPE_GROUP) {
    GroupModel groupModel=groups().get(chatId);
    if (groupModel == null) {
      pending.remove(pendingUid);
      return;
    }
    ask(requests().messageRead(new OutPeer(PeerType.GROUP,chatId,groupModel.getAccessHash()),date),new FutureCallback<ResponseVoid>(){
      @Override public void onResult(      ResponseVoid result){
        Long pendingDate=pending.get(pendingUid);
        if (pendingDate != null && pendingDate == date) {
          pending.remove(pendingUid);
        }
      }
      @Override public void onError(      Throwable throwable){
      }
    }
);
  }
}

{
  final View emojiPagerView=LayoutInflater.from(activity).inflate(R.layout.emoji_smiles_pager,null);
  final ViewPager emojiPager=(ViewPager)emojiPagerView.findViewById(R.id.emoji_pager);
  final PagerSlidingTabStrip emojiPagerIndicator=(PagerSlidingTabStrip)emojiPagerView.findViewById(R.id.emoji_pager_indicator);
  View backspace=emojiPagerView.findViewById(R.id.backspace);
  final View backToSmiles=emojiPagerView.findViewById(R.id.back_to_smiles);
  final View indicatorContainer=emojiPagerView.findViewById(R.id.indicator_container);
  stickerIndicatorContainer=emojiPagerView.findViewById(R.id.sticker_indicator_container);
  stickerSwitchContainer=emojiPagerView.findViewById(R.id.sticker_switch_container);
  emojiPagerIndicator.setTabBackground(R.drawable.clickable_background);
  emojiPagerIndicator.setIndicatorColorResource(R.color.primary);
  emojiPagerIndicator.setIndicatorHeight(Screen.dp(2));
  emojiPagerIndicator.setDividerColor(0x00000000);
  emojiPagerIndicator.setUnderlineHeight(0);
  emojiPagerIndicator.setTabLayoutParams(new LinearLayout.LayoutParams(Screen.dp(48),Screen.dp(48)));
  backspace.setOnTouchListener(new RepeatListener(500,100,new OnClickListener(){
    @Override public void onClick(    View v){
      onBackspaceClick(v);
    }
  }
));
  final SmilePagerAdapter mEmojisAdapter=new SmilePagerAdapter(this);
  emojiPager.setAdapter(mEmojisAdapter);
  emojiPagerIndicator.setViewPager(emojiPager);
  backToSmiles.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      emojiPager.setCurrentItem(3,false);
      ObjectAnimator oa=ObjectAnimator.ofFloat(indicatorContainer,"translationX",0,0);
      oa.setDuration(0);
      oa.start();
      if (stickerIndicatorContainer.getVisibility() == View.INVISIBLE) {
        stickerIndicatorContainer.setVisibility(View.VISIBLE);
      }
      ObjectAnimator oas=ObjectAnimator.ofFloat(stickerIndicatorContainer,"translationX",Screen.getWidth(),Screen.getWidth());
      oas.setDuration(0);
      oas.start();
      emojiPager.setCurrentItem(1,true);
    }
  }
);
  final FrameLayout.LayoutParams lp=(FrameLayout.LayoutParams)stickerIndicatorContainer.getLayoutParams();
  emojiPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener(){
    @Override public void onPageScrolled(    int position,    float positionOffset,    int positionOffsetPixels){
      if (position == 4) {
        ObjectAnimator oa=ObjectAnimator.ofFloat(indicatorContainer,"translationX",indicatorContainer.getX(),-positionOffsetPixels);
        oa.setDuration(0);
        oa.start();
        if (stickerIndicatorContainer.getVisibility() == View.INVISIBLE) {
          stickerIndicatorContainer.setVisibility(View.VISIBLE);
        }
        ObjectAnimator oas=ObjectAnimator.ofFloat(stickerIndicatorContainer,"translationX",stickerIndicatorContainer.getX() + Screen.getWidth(),-positionOffsetPixels + Screen.getWidth());
        oas.setDuration(0);
        oas.start();
      }
    }
    @Override public void onPageSelected(    int position){
    }
    @Override public void onPageScrollStateChanged(    int state){
    }
  }
);
  if (SmilesPack.getRecent().size() == 0) {
    emojiPager.setCurrentItem(1);
  }
  return emojiPagerView;
}

{
  MVVMEngine.checkMainThread();
  if (isLoadMoreBackwardRequested) {
    return;
  }
  isLoadMoreBackwardRequested=true;
  if (!window.startBackwardLoading()) {
    return;
  }
  final int gen=currentGeneration;
  ListEngineCallback<T> callback=cover(new ListEngineCallback<T>(){
    @Override public void onLoaded(    List<T> items,    long topSortKey,    long bottomSortKey){
      MVVMEngine.checkMainThread();
      window.endBackwardLoading();
      if (items.size() == 0) {
        window.onBackwardCompleted();
        isLoadMoreBackwardRequested=false;
      }
 else {
        window.onBackwardSliceLoaded(bottomSortKey);
        editList(DisplayModifications.addOrUpdate(items),new Runnable(){
          @Override public void run(){
            if (gen == currentGeneration) {
              isLoadMoreBackwardRequested=false;
            }
          }
        }
);
      }
    }
  }
,currentGeneration);
  if (mode != ListMode.SEARCH) {
    listEngine.loadBackward(window.getCurrentBackwardHead(),pageSize,callback);
  }
 else {
    listEngine.loadBackward(query,window.getCurrentBackwardHead(),pageSize,callback);
  }
}

{
  MVVMEngine.checkMainThread();
  if (isGlobalList) {
    throw new RuntimeException("Global DisplayList can't grow from bottom");
  }
  if (mode != null && mode == ListMode.BACKWARD) {
    return;
  }
  mode=ListMode.BACKWARD;
  if (refresh) {
    editList((Modification)DisplayModifications.clear());
  }
  stateModel.change(State.LOADING_EMPTY);
  isLoadMoreBackwardRequested=false;
  isLoadMoreBackwardRequested=false;
  currentGeneration++;
  window.startInitBackward();
  listEngine.loadBackward(pageSize,cover(new ListEngineCallback<T>(){
    @Override public void onLoaded(    List<T> items,    long topSortKey,    long bottomSortKey){
      MVVMEngine.checkMainThread();
      window.completeInitBackward(topSortKey);
      if (items.size() != 0) {
        editList(DisplayModifications.replace(items));
      }
 else {
        window.onBackwardCompleted();
      }
    }
  }
,currentGeneration));
}

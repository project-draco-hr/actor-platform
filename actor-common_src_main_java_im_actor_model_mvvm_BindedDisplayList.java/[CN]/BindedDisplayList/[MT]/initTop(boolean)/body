{
  MVVMEngine.checkMainThread();
  Log.d(TAG,"initTop(:" + refresh + ")");
  if (mode != null && mode == ListMode.FORWARD) {
    Log.d(TAG,"Already loaded forward: exiting");
    return;
  }
  mode=ListMode.FORWARD;
  query=null;
  if (refresh) {
    Log.d(TAG,"Clearing list");
    editList((Modification)DisplayModifications.clear());
  }
  stateModel.change(State.LOADING_EMPTY);
  currentGeneration++;
  window.startInitForward();
  Log.d(TAG,"Starting load generation " + currentGeneration);
  listEngine.loadForward(pageSize,cover(new ListEngineCallback<T>(){
    @Override public void onLoaded(    List<T> items,    long topSortKey,    long bottomSortKey){
      MVVMEngine.checkMainThread();
      Log.d(TAG,"Loaded initial data at generation " + currentGeneration + " items "+ items.size());
      window.completeInitForward(bottomSortKey);
      if (items.size() != 0) {
        editList(DisplayModifications.replace(items));
      }
 else {
        window.onForwardCompleted();
      }
    }
  }
,currentGeneration));
}

{
synchronized (conversationActors) {
    if (!conversationActors.containsKey(peer)) {
      conversationActors.put(peer,system().actorOf(Props.create(ConversationActor.class,new ActorCreator<ConversationActor>(){
        @Override public ConversationActor create(){
          return new ConversationActor(peer,modules());
        }
      }
),"actor/conv_" + peer.getPeerType() + "_"+ peer.getPeerId()));
      conversationHistoryActors.put(peer,system().actorOf(Props.create(ConversationHistoryActor.class,new ActorCreator<ConversationHistoryActor>(){
        @Override public ConversationHistoryActor create(){
          return new ConversationHistoryActor(peer,modules());
        }
      }
),"actor/conv_" + peer.getPeerType() + "_"+ peer.getPeerId()+ "/history"));
    }
  }
}

{
  if (BuildConfig.MINT != null) {
    Mint.initAndStartSession(application,BuildConfig.MINT);
  }
  Fresco.initialize(application);
  application.startService(new Intent(application,KeepAliveService.class));
  AppContext.setContext(application);
  ActivityManager activityManager=(ActivityManager)AppContext.getContext().getSystemService(Context.ACTIVITY_SERVICE);
  int memoryInMB=Math.min(activityManager.getMemoryClass(),32);
  long totalAppHeap=memoryInMB * 1024 * 1024;
  int cacheLimit=(int)totalAppHeap / 4;
  int freeCacheLimit=cacheLimit / 2;
  BitmapClasificator clasificator=new BitmapClasificator.Builder().startExactSize(100,100).setFreeSize(2).setLruSize(15).endFilter().startLessOrEqSize(90,90).setFreeSize(10).useSizeInAmount().endFilter().startAny().useSizeInBytes().setLruSize(cacheLimit).setFreeSize(freeCacheLimit).endFilter().build();
  this.emojiProcessor=new EmojiProcessor(application);
  this.emojiProcessor.loadEmoji();
  this.imageLoader=new ImageLoader(clasificator,application);
  this.imageLoader.getTaskResolver().register(FullAvatarTask.class,FullAvatarActor.class);
  AndroidConfigurationBuilder builder=new AndroidConfigurationBuilder(application.getResources().getString(R.string.app_locale),application);
  if (BuildConfig.ENABLE_PHONE_BOOK) {
    builder.setPhoneBookProvider(new AndroidPhoneBook());
  }
 else {
    builder.setPhoneBookProvider(new EmptyPhoneProvider());
  }
  builder.setNotificationProvider(new AndroidNotifications(AppContext.getContext()));
  builder.addEndpoint(BuildConfig.API_URL);
  builder.setEnableContactsLogging(true);
  builder.setEnableNetworkLogging(true);
  builder.setApiConfiguration(new ApiConfiguration(BuildConfig.VERSION_TITLE,BuildConfig.API_ID,BuildConfig.API_KEY,"Android Device",AppContext.getContext().getPackageName() + ":" + Build.SERIAL));
  this.messenger=new AndroidMessenger(AppContext.getContext(),builder.build());
}

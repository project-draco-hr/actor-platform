{
  super(fl);
  this.context=context;
  final int paddingH=Screen.dp(11);
  final int paddingV=Screen.dp(9);
  pendingColor=style.getDialogsStatePendingColor();
  sentColor=style.getDialogsStateSentColor();
  receivedColor=style.getDialogsStateDeliveredColor();
  readColor=style.getDialogsStateReadColor();
  errorColor=style.getDialogsStateErrorColor();
  fl.setLayoutParams(new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,Screen.dp(73)));
  fl.setBackgroundColor(style.getMainBackgroundColor());
  FrameLayout background=new FrameLayout(context);
  background.setBackgroundResource(R.drawable.selector_fill);
  fl.addView(background,new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));
  avatar=new AvatarView(context);
  avatar.init(Screen.dp(52),24);
{
    FrameLayout.LayoutParams avatarLayoutParams=new FrameLayout.LayoutParams(Screen.dp(52),Screen.dp(52));
    avatarLayoutParams.gravity=Gravity.CENTER_VERTICAL | Gravity.LEFT;
    avatarLayoutParams.leftMargin=paddingH;
    avatar.setLayoutParams(avatarLayoutParams);
  }
  fl.addView(avatar);
  LinearLayout linearLayout=new LinearLayout(context);
  linearLayout.setOrientation(LinearLayout.VERTICAL);
  linearLayout.setGravity(Gravity.TOP);
{
    FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT);
    layoutParams.rightMargin=paddingH;
    layoutParams.leftMargin=Screen.dp(79);
    layoutParams.topMargin=paddingV;
    layoutParams.bottomMargin=paddingV;
    linearLayout.setLayoutParams(layoutParams);
  }
  LinearLayout firstRow=new LinearLayout(context);
  firstRow.setOrientation(LinearLayout.HORIZONTAL);
{
    LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
    firstRow.setLayoutParams(params);
  }
  title=new TextView(context);
  title.setTextColor(ActorSDK.sharedActor().style.getDialogsTitleColor());
  title.setTypeface(Fonts.medium());
  title.setTextSize(17);
  title.setPadding(0,Screen.dp(2),0,0);
  title.setSingleLine();
  title.setCompoundDrawablePadding(Screen.dp(4));
  title.setEllipsize(TextUtils.TruncateAt.END);
{
    LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(0,ViewGroup.LayoutParams.WRAP_CONTENT);
    params.weight=1;
    title.setLayoutParams(params);
  }
  firstRow.addView(title);
  time=new TextView(context);
  time.setTextColor(ActorSDK.sharedActor().style.getDialogsTimeColor());
  time.setTypeface(Fonts.regular());
  time.setTextSize(13);
  time.setPadding(Screen.dp(6),0,0,0);
  time.setSingleLine();
  firstRow.addView(time);
  linearLayout.addView(firstRow);
  text=new TextView(context);
  text.setTypeface(Fonts.regular());
  text.setTextColor(style.getDialogsTextColor());
  text.setTextSize(15);
  text.setPadding(0,Screen.dp(5),Screen.dp(28),0);
  text.setSingleLine();
  text.setEllipsize(TextUtils.TruncateAt.END);
  linearLayout.addView(text);
  fl.addView(linearLayout);
  separator=new View(context);
  separator.setBackgroundColor(style.getDialogsDividerColor());
  FrameLayout.LayoutParams divLayoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,context.getResources().getDimensionPixelSize(R.dimen.div_size));
  divLayoutParams.leftMargin=Screen.dp(76);
  divLayoutParams.gravity=Gravity.BOTTOM;
  fl.addView(separator,divLayoutParams);
  state=new TintImageView(context);
{
    FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(Screen.dp(28),Screen.dp(12),Gravity.BOTTOM | Gravity.RIGHT);
    params.bottomMargin=Screen.dp(16);
    params.rightMargin=Screen.dp(9);
    state.setLayoutParams(params);
    fl.addView(state);
  }
  onCreateCounter(context,style);
{
    FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT,Gravity.BOTTOM | Gravity.RIGHT);
    params.bottomMargin=Screen.dp(12);
    params.rightMargin=Screen.dp(10);
    counter.setLayoutParams(params);
    fl.addView(counter);
  }
  fl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (bindedItem != null) {
        onClickListener.onClicked(bindedItem);
      }
    }
  }
);
  fl.setOnLongClickListener(new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      if (bindedItem != null) {
        return onClickListener.onLongClicked(bindedItem);
      }
      return false;
    }
  }
);
}

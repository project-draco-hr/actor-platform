{
  FileInputStream inputStream=null;
  FileOutputStream outputStream=null;
  try {
    inputStream=new FileInputStream(srcFile);
    outputStream=new FileOutputStream(destFile);
    cipher.init(Cipher.ENCRYPT_MODE,cipherKeySpec);
    mac.init(macKeySpec);
    byte[] iv=cipher.getIV();
    mac.update(iv);
    outputStream.write(iv);
    byte[] buffer=new byte[1024];
    byte[] out=new byte[cipher.getOutputSize(1024)];
    int count;
    while ((count=inputStream.read(buffer)) > 0) {
      byte[] oB;
      int obSize;
      try {
        obSize=cipher.update(buffer,0,count,out,0);
        oB=out;
      }
 catch (      ShortBufferException e) {
        e.printStackTrace();
        oB=cipher.update(buffer,0,count);
        obSize=oB.length;
      }
      mac.update(oB,0,obSize);
      outputStream.write(oB,0,obSize);
    }
    out=cipher.doFinal();
    mac.update(out);
    outputStream.write(out);
    byte[] macValue=mac.doFinal();
    outputStream.write(macValue);
  }
 catch (  IllegalBlockSizeException e) {
    throw new RuntimeException(e);
  }
catch (  BadPaddingException e) {
    throw new RuntimeException(e);
  }
catch (  InvalidKeyException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      IOException e) {
      }
    }
    if (outputStream != null) {
      try {
        outputStream.close();
      }
 catch (      IOException e) {
      }
    }
  }
}

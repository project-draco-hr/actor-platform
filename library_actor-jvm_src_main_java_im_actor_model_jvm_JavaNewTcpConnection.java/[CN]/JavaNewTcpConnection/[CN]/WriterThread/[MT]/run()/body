{
  try {
    while (!isClosed()) {
      WritePackage p;
synchronized (packages) {
        p=packages.poll();
        if (p == null) {
          try {
            packages.wait();
          }
 catch (          final InterruptedException e) {
            return;
          }
          p=packages.poll();
        }
      }
      if (p == null) {
        continue;
      }
      Log.d(TAG,"Sending frame #" + sentPackets);
      final int packageId=sentPackets++;
      DataOutput dataOutput=new DataOutput();
      dataOutput.writeInt(packageId);
      dataOutput.writeByte(p.getHeader());
      dataOutput.writeInt(p.getContent().length);
      dataOutput.writeBytes(p.getContent(),p.getOffset(),p.getLen());
      crc32Engine.reset();
      crc32Engine.update(p.getContent(),p.getOffset(),p.getLen());
      dataOutput.writeInt((int)crc32Engine.getValue());
      byte[] destPackage=dataOutput.toByteArray();
      outputStream.write(destPackage);
      outputStream.flush();
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
    close();
  }
}

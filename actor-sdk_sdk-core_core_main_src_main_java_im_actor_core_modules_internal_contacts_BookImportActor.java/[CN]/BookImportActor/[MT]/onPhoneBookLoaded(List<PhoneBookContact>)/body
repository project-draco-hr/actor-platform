{
  isSyncInProgress=false;
  if (ENABLE_LOG) {
    Log.d(TAG,"Book load completed");
  }
  ArrayList<ApiPhoneToImport> phoneToImports=new ArrayList<ApiPhoneToImport>();
  ArrayList<ApiEmailToImport> emailToImports=new ArrayList<ApiEmailToImport>();
  for (  PhoneBookContact record : phoneBook) {
    for (    PhoneBookPhone phone : record.getPhones()) {
      if (isImported(phone.getNumber())) {
        continue;
      }
      if (importingPhones.contains(phone.getNumber())) {
        continue;
      }
      importingPhones.add(phone.getNumber());
      phoneToImports.add(new ApiPhoneToImport(phone.getNumber(),record.getName()));
    }
    for (    PhoneBookEmail email : record.getEmails()) {
      if (isImported(email.getEmail().toLowerCase())) {
        continue;
      }
      if (importingEmails.contains(email.getEmail().toLowerCase())) {
        continue;
      }
      importingEmails.add(email.getEmail().toLowerCase());
      emailToImports.add(new ApiEmailToImport(email.getEmail().toLowerCase(),record.getName()));
    }
  }
  if (phoneToImports.size() == 0 && emailToImports.size() == 0) {
    if (ENABLE_LOG) {
      Log.d(TAG,"No new contacts found");
    }
    markImported();
    return;
  }
 else {
    if (ENABLE_LOG) {
      Log.d(TAG,"Founded new " + (phoneToImports.size() + emailToImports.size()) + " contact records");
    }
  }
  ArrayList<ApiPhoneToImport> phoneToImportsPart=new ArrayList<ApiPhoneToImport>();
  ArrayList<ApiEmailToImport> emailToImportsPart=new ArrayList<ApiEmailToImport>();
  int count=0;
  for (  ApiPhoneToImport phoneToImport : phoneToImports) {
    phoneToImportsPart.add(phoneToImport);
    count++;
    if (count >= MAX_IMPORT_SIZE) {
      performImport(phoneToImportsPart,emailToImportsPart);
      phoneToImportsPart.clear();
      emailToImportsPart.clear();
      count=0;
    }
  }
  for (  ApiEmailToImport emailToImport : emailToImports) {
    emailToImportsPart.add(emailToImport);
    count++;
    if (count >= MAX_IMPORT_SIZE) {
      performImport(phoneToImportsPart,emailToImportsPart);
      phoneToImportsPart.clear();
      emailToImportsPart.clear();
      count=0;
    }
  }
  if (count > 0) {
    performImport(phoneToImportsPart,emailToImportsPart);
  }
}

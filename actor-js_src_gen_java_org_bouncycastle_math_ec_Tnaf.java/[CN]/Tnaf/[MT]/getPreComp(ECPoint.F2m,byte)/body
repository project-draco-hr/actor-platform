{
  ECPoint.F2m[] pu;
  pu=new ECPoint.F2m[16];
  pu[1]=p;
  byte[][] alphaTnaf;
  if (a == 0) {
    alphaTnaf=Tnaf.alpha0Tnaf;
  }
 else {
    alphaTnaf=Tnaf.alpha1Tnaf;
  }
  int precompLen=alphaTnaf.length;
  for (int i=3; i < precompLen; i=i + 2) {
    pu[i]=Tnaf.multiplyFromTnaf(p,alphaTnaf[i]);
  }
  p.getCurve().normalizeAll(pu);
  return pu;
}

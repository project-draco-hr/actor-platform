{
  ActorScope scope=envelope.getScope();
  if (actorSystem.getTraceInterface() != null) {
    actorSystem.getTraceInterface().onEnvelopeDelivered(envelope);
  }
  long start=ActorTime.currentTime();
  boolean isDisconnected=false;
  if (scope.getActor() == null) {
    if (envelope.getMessage() == PoisonPill.INSTANCE) {
      return;
    }
    try {
      Actor actor=scope.getProps().create();
      CurrentActor.setCurrentActor(actor);
      actor.initActor(scope.getUuid(),scope.getPath(),new ActorContext(scope),scope.getMailbox());
      for (      ActorExtension e : actor.getExtensions()) {
        e.preStart();
      }
      actor.preStart();
      scope.onActorCreated(actor);
    }
 catch (    Exception e) {
      e.printStackTrace();
      if (envelope.getSender() != null) {
        envelope.getSender().send(new DeadLetter("Unable to create actor"));
      }
      return;
    }
  }
  try {
    if (envelope.getMessage() == StartActor.INSTANCE) {
      return;
    }
 else     if (envelope.getMessage() == Ping.INSTANCE) {
      return;
    }
 else     if (envelope.getMessage() == PoisonPill.INSTANCE) {
      isDisconnected=true;
      for (      ActorExtension e : scope.getActor().getExtensions()) {
        e.postStop();
      }
      scope.getActor().postStop();
      scope.onActorDie();
      for (      Envelope e : scope.getMailbox().allEnvelopes()) {
        if (e.getSender() != null) {
          e.getSender().send(new DeadLetter(e.getMessage()));
        }
      }
      scope.getMailbox().clear();
synchronized (LOCK) {
        scopes.remove(scope.getPath());
        endpoints.remove(scope.getPath());
        dispatcher.getQueue().disconnectMailbox(scope.getMailbox());
      }
    }
 else {
      CurrentActor.setCurrentActor(scope.getActor());
      scope.setSender(envelope.getSender());
      for (      ActorExtension e : scope.getActor().getExtensions()) {
        if (e.onReceive(envelope.getMessage())) {
          return;
        }
      }
      scope.getActor().onReceive(envelope.getMessage());
    }
  }
 catch (  Exception e) {
    if (actorSystem.getTraceInterface() != null) {
      actorSystem.getTraceInterface().onActorDie(scope.getActorRef(),e);
    }
    scope.onActorDie();
    isDisconnected=true;
synchronized (LOCK) {
      scopes.remove(scope.getPath());
      endpoints.remove(scope.getPath());
      dispatcher.getQueue().disconnectMailbox(scope.getMailbox());
    }
  }
 finally {
    if (actorSystem.getTraceInterface() != null) {
      actorSystem.getTraceInterface().onEnvelopeProcessed(envelope,ActorTime.currentTime() - start);
    }
    CurrentActor.setCurrentActor(null);
    if (!isDisconnected) {
      dispatcher.getQueue().unlockMailbox(envelope.getMailbox());
    }
  }
}

{
  if (message instanceof UserGoesOnline) {
    UserGoesOnline online=(UserGoesOnline)message;
    UserModel model=users().get(online.uid);
    if (model != null) {
      model.getPresence().change(new UserPresence(UserPresence.State.ONLINE));
    }
    self().sendOnce(new UserGoesOffline(online.uid),ONLINE_TIMEOUT);
  }
 else   if (message instanceof UserGoesOffline) {
    UserGoesOffline online=(UserGoesOffline)message;
    UserModel model=users().get(online.uid);
    if (model != null) {
switch (model.getPresence().getValue().getState()) {
case OFFLINE:
case UNKNOWN:
        return;
    }
    model.getPresence().change(new UserPresence(UserPresence.State.OFFLINE,0));
  }
}
 else if (message instanceof UserLastSeen) {
  UserLastSeen lastSeen=(UserLastSeen)message;
  UserModel model=users().get(lastSeen.uid);
  if (model != null) {
    model.getPresence().change(new UserPresence(UserPresence.State.OFFLINE,lastSeen.lastSeen));
  }
}
 else if (message instanceof ConversationOpen) {
  ConversationOpen conv=(ConversationOpen)message;
  if (conv.getType() != DialogType.TYPE_USER) {
    return;
  }
  if (presence.contains(conv.getId())) {
    return;
  }
  UserModel user=users().get(conv.getId());
  if (user == null) {
    return;
  }
  presence.add(conv.getId());
  List<UserOutPeer> peers=new ArrayList<UserOutPeer>();
  peers.add(new UserOutPeer(user.getId(),user.getAccessHash()));
  requests().subscribeToOnline(peers);
}
 else if (message instanceof NewSessionCreated) {
  List<UserOutPeer> peers=new ArrayList<UserOutPeer>();
  for (  Integer uid : presence) {
    UserModel user=users().get(uid);
    if (user == null) {
      continue;
    }
    peers.add(new UserOutPeer(user.getId(),user.getAccessHash()));
  }
  if (peers.size() > 0) {
    requests().subscribeToOnline(peers);
  }
}
}

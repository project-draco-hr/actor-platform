{
  ActorBoxKey ratchetMessageKey=RatchetMessageKey.buildKey(rootChainKey,0);
  byte[] header=ByteStrings.merge(ByteStrings.intToBytes(encryptionKeyGroup.getKeyGroupId()),ByteStrings.longToBytes(ownEphermalKey0.getKeyId()),ByteStrings.longToBytes(theirEphermalKey0.getKeyId()),currentOwnKey.getPublicKey(),currentTheirKey.getPublicKey(),ByteStrings.intToBytes(outIndex++));
  byte[] encrypted;
  try {
    encrypted=ActorBox.closeBox(header,data,Crypto.randomBytes(32),ratchetMessageKey);
  }
 catch (  IntegrityException e) {
    e.printStackTrace();
    future.onError(e);
    return;
  }
  byte[] pkg=ByteStrings.merge(header,encrypted);
  int keyGroupId=ByteStrings.bytesToInt(pkg,0);
  long ownEphermalKey0Id=ByteStrings.bytesToLong(pkg,4);
  long theirEphermalKey0Id=ByteStrings.bytesToLong(pkg,12);
  byte[] ownEphermalKey=ByteStrings.substring(pkg,20,32);
  byte[] theirEphermalKey=ByteStrings.substring(pkg,52,32);
  int messageIndex=ByteStrings.bytesToInt(pkg,84);
  Log.d(TAG,"onEncrypt: " + Hex.toHex(pkg));
  Log.d(TAG,"onEncrypt:key group id: " + encryptionKeyGroup.getKeyGroupId());
  Log.d(TAG,"onEncrypt:ownEphermalKey0Id: " + ownEphermalKey0.getKeyId());
  Log.d(TAG,"onEncrypt:theirEphermalKey0Id: " + theirEphermalKey0.getKeyId());
  Log.d(TAG,"onEncrypt:messageIndex: " + outIndex);
  Log.d(TAG,"onEncrypt:2key group id: " + keyGroupId);
  Log.d(TAG,"onEncrypt:2ownEphermalKey0Id: " + ownEphermalKey0Id);
  Log.d(TAG,"onEncrypt:2theirEphermalKey0Id: " + theirEphermalKey0Id);
  Log.d(TAG,"onEncrypt:2messageIndex: " + messageIndex);
  future.onResult(new EncryptedPackageRes(pkg));
}

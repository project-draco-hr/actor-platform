{
  FileGenerator generator=new FileGenerator(fileName);
  for (  SchemeSection section : definition.getSections()) {
    generator.appendLn("//////////////////////////////////////////////////////");
    generator.appendLn("// " + section.getName());
    generator.appendLn("//////////////////////////////////////////////////////");
    for (    String s : section.getDocs()) {
      generator.appendLn("//" + s);
    }
    generator.appendLn();
    for (    SchemeRecord record : section.getRecords()) {
      if (record instanceof SchemeEnum) {
        SchemeEnum sEnum=(SchemeEnum)record;
        generator.appendLn("enum " + sEnum.getName() + " {");
        generator.increaseDepth();
        for (        SchemeEnum.Record enrec : sEnum.getRecord()) {
          generator.appendLn(enrec.getName().toUpperCase() + " = " + enrec.getId()+ ";");
        }
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
      }
 else       if (record instanceof SchemeStruct) {
        SchemeStruct sEnum=(SchemeStruct)record;
        for (        SchemeDoc d : sEnum.getDocs()) {
          if (d instanceof SchemeDocComment) {
            generator.appendLn("// " + ((SchemeDocComment)d).getText());
          }
 else           if (d instanceof SchemeDocParameter) {
            generator.appendLn("// " + ((SchemeDocParameter)d).getArgument() + " "+ ((SchemeDocParameter)d).getDescription());
          }
        }
        generator.appendLn("message " + sEnum.getName() + " {");
        generator.increaseDepth();
        appendContents(definition,sEnum,generator);
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
      }
 else       if (record instanceof SchemeUpdate) {
        SchemeUpdate update=(SchemeUpdate)record;
        generator.appendLn("// API#0x" + toHex(update.getHeader()));
        for (        SchemeDoc d : update.getDocs()) {
          if (d instanceof SchemeDocComment) {
            generator.appendLn("// " + ((SchemeDocComment)d).getText());
          }
 else           if (d instanceof SchemeDocParameter) {
            generator.appendLn("// " + ((SchemeDocParameter)d).getArgument() + " "+ ((SchemeDocParameter)d).getDescription());
          }
        }
        generator.appendLn("message Update" + update.getName() + " {");
        generator.increaseDepth();
        appendContents(definition,update,generator);
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
      }
 else       if (record instanceof SchemeUpdateBox) {
        SchemeUpdateBox update=(SchemeUpdateBox)record;
        generator.appendLn("// API#0x" + toHex(update.getHeader()));
        for (        SchemeDoc d : update.getDocs()) {
          if (d instanceof SchemeDocComment) {
            generator.appendLn("// " + ((SchemeDocComment)d).getText());
          }
 else           if (d instanceof SchemeDocParameter) {
            generator.appendLn("// " + ((SchemeDocParameter)d).getArgument() + " "+ ((SchemeDocParameter)d).getDescription());
          }
        }
        generator.appendLn("message Update" + update.getName() + " {");
        generator.increaseDepth();
        appendContents(definition,update,generator);
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
      }
 else       if (record instanceof SchemeResponse) {
        SchemeResponse update=(SchemeResponse)record;
        generator.appendLn("// API#0x" + toHex(update.getHeader()));
        for (        SchemeDoc d : update.getDocs()) {
          if (d instanceof SchemeDocComment) {
            generator.appendLn("// " + ((SchemeDocComment)d).getText());
          }
 else           if (d instanceof SchemeDocParameter) {
            generator.appendLn("// " + ((SchemeDocParameter)d).getArgument() + " "+ ((SchemeDocParameter)d).getDescription());
          }
        }
        generator.appendLn("message Response" + update.getName() + " {");
        generator.increaseDepth();
        appendContents(definition,update,generator);
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
      }
 else       if (record instanceof SchemeRpc) {
        SchemeRpc rpc=(SchemeRpc)record;
        generator.appendLn("// API#0x" + toHex(rpc.getHeader()));
        if (rpc.getResponse() instanceof SchemeRpc.RefResponse) {
          SchemeRpc.RefResponse resp=(SchemeRpc.RefResponse)rpc.getResponse();
          generator.appendLn("// Response" + resp.getName());
        }
 else {
          generator.appendLn("// " + responseName(rpc.getName()));
        }
        for (        SchemeDoc d : rpc.getDocs()) {
          if (d instanceof SchemeDocComment) {
            generator.appendLn("// " + ((SchemeDocComment)d).getText());
          }
 else           if (d instanceof SchemeDocParameter) {
            generator.appendLn("// " + ((SchemeDocParameter)d).getArgument() + " "+ ((SchemeDocParameter)d).getDescription());
          }
        }
        generator.appendLn("message " + requestName(rpc.getName()) + " {");
        generator.increaseDepth();
        appendContents(definition,rpc,generator);
        generator.decreaseDepth();
        generator.appendLn("}");
        generator.appendLn();
        if (rpc.getResponse() instanceof SchemeRpc.AnonymousResponse) {
          SchemeRpc.AnonymousResponse resp=(SchemeRpc.AnonymousResponse)rpc.getResponse();
          generator.appendLn("// API#0x" + toHex(resp.getResponse().getHeader()));
          generator.appendLn("message " + responseName(rpc.getName()) + " {");
          generator.increaseDepth();
          appendContents(definition,resp.getResponse(),generator);
          generator.decreaseDepth();
          generator.appendLn("}");
          generator.appendLn();
        }
      }
    }
  }
  generator.close();
}

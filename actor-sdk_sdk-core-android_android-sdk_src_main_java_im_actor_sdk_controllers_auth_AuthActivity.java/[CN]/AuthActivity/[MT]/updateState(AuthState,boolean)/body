{
  if (this.state != null && (this.state == state && !force)) {
    return;
  }
  PreferencesStorage preferences=messenger().getPreferences();
  preferences.putLong("currentPhone",currentPhone);
  preferences.putString("currentEmail",currentEmail);
  preferences.putString("transactionHash",transactionHash);
  preferences.putBool("isRegistered",isRegistered);
  preferences.putBool("codeValidated",codeValidated);
  preferences.putString("currentName",currentName);
  preferences.putInt("signType",signType);
  preferences.putString("auth_state",state.toString());
  if (state != AuthState.LOGGED_IN && getIsResumed() == false) {
    return;
  }
  this.state=state;
switch (state) {
case AUTH_START:
    if (signType == SIGN_TYPE_UP) {
      updateState(AuthState.SIGN_UP);
    }
 else     if (signType == SIGN_TYPE_IN) {
      showFragment(new SignInFragment(),false,false);
    }
  break;
case SIGN_UP:
if (currentName != null && !currentName.isEmpty()) {
  startAuth(currentName);
}
 else {
  showFragment(new SignUpFragment(),false,false);
}
break;
case AUTH_PHONE:
currentAuthType=AUTH_TYPE_PHONE;
currentCode="";
showFragment(ActorSDK.sharedActor().getDelegatedFragment(ActorSDK.sharedActor().getDelegate().getAuthStartIntent(),new SignPhoneFragment(),BaseAuthFragment.class),false,false);
break;
case AUTH_EMAIL:
currentCode="";
currentAuthType=AUTH_TYPE_EMAIL;
showFragment(ActorSDK.sharedActor().getDelegatedFragment(ActorSDK.sharedActor().getDelegate().getAuthStartIntent(),new SignEmailFragment(),BaseAuthFragment.class),false,false);
break;
case CODE_VALIDATION_PHONE:
case CODE_VALIDATION_EMAIL:
Fragment signInFragment=new ValidateCodeFragment();
Bundle args=new Bundle();
args.putString("authType",state == AuthState.CODE_VALIDATION_EMAIL ? ValidateCodeFragment.AUTH_TYPE_EMAIL : ValidateCodeFragment.AUTH_TYPE_PHONE);
args.putBoolean(ValidateCodeFragment.AUTH_TYPE_SIGN,signType == SIGN_TYPE_IN);
args.putString("authId",state == AuthState.CODE_VALIDATION_EMAIL ? currentEmail : Long.toString(currentPhone));
signInFragment.setArguments(args);
showFragment(signInFragment,false,false);
break;
case LOGGED_IN:
finish();
startActivity(new Intent(this,RootActivity.class));
break;
}
}

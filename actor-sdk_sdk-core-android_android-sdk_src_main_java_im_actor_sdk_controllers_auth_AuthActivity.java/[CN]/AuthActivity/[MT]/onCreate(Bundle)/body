{
  super.onCreate(savedInstanceState);
  authActor=ActorSystem.system().actorOf(Props.create(new ActorCreator(){
    @Override public Actor create(){
      return new Actor();
    }
  }
),"actor/auth_promises_actor");
  signType=getIntent().getIntExtra(SIGN_TYPE_KEY,SIGN_TYPE_IN);
  PreferencesStorage preferences=messenger().getPreferences();
  currentPhone=preferences.getLong("currentPhone",0);
  currentEmail=preferences.getString("currentEmail");
  transactionHash=preferences.getString("transactionHash");
  currentCode=preferences.getString("currentCode");
  isRegistered=preferences.getBool("isRegistered",false);
  currentName=preferences.getString("currentName");
  signType=preferences.getInt("signType",signType);
  String savedState=preferences.getString("auth_state");
  state=Enum.valueOf(AuthState.class,savedState != null ? savedState : "AUTH_START");
  updateState(state,true);
}

{
  ASN1Primitive root=ASN1.readObject(data);
  if (!(root instanceof ASN1Sequence)) {
    throw new IOException("Incorrect type of sequence");
  }
  ASN1Sequence rootSequence=(ASN1Sequence)ASN1.readObject(data);
  if (rootSequence.size() != 2) {
    throw new IOException("Incorrect type of sequence");
  }
  if (!(rootSequence.get(0) instanceof ASN1Sequence)) {
    throw new IOException("Incorrect type of sequence");
  }
  if (!(rootSequence.get(1) instanceof ASN1BitString)) {
    throw new IOException("Incorrect type of sequence");
  }
  ASN1Sequence algoHeader=(ASN1Sequence)rootSequence.get(0);
  if (!(algoHeader.get(0) instanceof ASN1ObjectIdentifier)) {
    throw new IOException("Incorrect type of sequence");
  }
  ASN1ObjectIdentifier algo=(ASN1ObjectIdentifier)algoHeader.get(0);
  if (!algo.getIdentifier().equals(ALGO_TYPE)) {
    throw new IOException("Incorrect type of header: " + algo.getIdentifier());
  }
  ASN1BitString bitString=(ASN1BitString)rootSequence.get(1);
  ASN1Primitive keyRoot=ASN1.readObject(bitString.getContent());
  if (!(keyRoot instanceof ASN1Sequence)) {
    throw new IOException("Incorrect type of sequence");
  }
  ASN1Sequence keySequence=(ASN1Sequence)keyRoot;
  if (keySequence.size() != 2) {
    throw new IOException("Incorrect type of sequence");
  }
  if (!(keySequence.get(0) instanceof ASN1Integer)) {
    throw new IOException("Incorrect type of sequence");
  }
  if (!(keySequence.get(1) instanceof ASN1Integer)) {
    throw new IOException("Incorrect type of sequence");
  }
  ASN1Integer modulus=(ASN1Integer)keySequence.get(0);
  ASN1Integer exponent=(ASN1Integer)keySequence.get(1);
  this.modulus=new BigInteger(1,modulus.getData());
  this.exponent=new BigInteger(1,exponent.getData());
}

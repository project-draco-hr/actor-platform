{
  if (ENABLE_LOG) {
    Log.d(TAG,"Checking sync");
  }
  if (isInProgress) {
    if (ENABLE_LOG) {
      Log.d(TAG,"Sync in progress, invalidating current sync");
    }
    isInvalidated=true;
    return;
  }
  isInProgress=true;
  isInvalidated=false;
  if (ENABLE_LOG) {
    Log.d(TAG,"Starting sync");
  }
  Integer[] uids=contacts.toArray(new Integer[contacts.size()]);
  Arrays.sort(uids);
  String hash="";
  for (  long u : uids) {
    if (hash.length() != 0) {
      hash+=",";
    }
    hash+=u;
  }
  byte[] hashData;
  try {
    hashData=hash.getBytes("UTF-8");
  }
 catch (  UnsupportedEncodingException e) {
    e.printStackTrace();
    return;
  }
  String hashValue=Crypto.hex(Crypto.SHA256(hashData));
  Log.d(TAG,"Performing sync with hash: " + hashValue);
  request(new RequestGetContacts(hashValue),new RpcCallback<ResponseGetContacts>(){
    @Override public void onResult(    ResponseGetContacts response){
      updates().onUpdateReceived(new im.actor.core.modules.updates.internal.ContactsLoaded(response));
    }
    @Override public void onError(    RpcException e){
      isInProgress=false;
      e.printStackTrace();
    }
  }
);
}

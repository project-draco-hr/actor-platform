{
  JSONObject config=new JSONObject(new String(readAll(application.getAssets().open("app.json"))));
  hockeyToken=config.optString("hockeyapp");
  if (config.optString("mint") != null && !config.optString("mint").equals("null")) {
    Mint.disableNetworkMonitoring();
    Mint.initAndStartSession(application,config.getString("mint"));
  }
  Fresco.initialize(application);
  application.startService(new Intent(application,KeepAliveService.class));
  AppContext.setContext(application);
  ActivityManager activityManager=(ActivityManager)AppContext.getContext().getSystemService(Context.ACTIVITY_SERVICE);
  int memoryInMB=Math.min(activityManager.getMemoryClass(),32);
  long totalAppHeap=memoryInMB * 1024 * 1024;
  int cacheLimit=(int)totalAppHeap / 4;
  int freeCacheLimit=cacheLimit / 2;
  BitmapClasificator clasificator=new BitmapClasificator.Builder().startExactSize(100,100).setFreeSize(2).setLruSize(15).endFilter().startLessOrEqSize(90,90).setFreeSize(10).useSizeInAmount().endFilter().startAny().useSizeInBytes().setLruSize(cacheLimit).setFreeSize(freeCacheLimit).endFilter().build();
  this.smileProcessor=new SmileProcessor(application);
  this.smileProcessor.loadEmoji();
  this.imageLoader=new ImageLoader(clasificator,application);
  this.imageLoader.getTaskResolver().register(FullAvatarTask.class,FullAvatarActor.class);
  AndroidConfigurationBuilder builder=new AndroidConfigurationBuilder(application.getResources().getString(R.string.app_locale),application);
  builder.setPhoneBookProvider(new AndroidPhoneBook());
  builder.setNotificationProvider(new AndroidNotifications(AppContext.getContext()));
  JSONArray endpoints=config.getJSONArray("endpoints");
  for (int i=0; i < endpoints.length(); i++) {
    builder.addEndpoint(endpoints.getString(i));
  }
  builder.setEnableContactsLogging(true);
  builder.setEnableNetworkLogging(true);
  builder.setEnableFilesLogging(true);
  if (config.optString("mixpanel") != null) {
    builder.setAnalyticsProvider(new AndroidMixpanelAnalytics(AppContext.getContext(),config.getString("mixpanel")));
  }
  builder.setDeviceCategory(DeviceCategory.MOBILE);
  builder.setAppCategory(AppCategory.ANDROID);
  builder.setApiConfiguration(new ApiConfiguration(BuildConfig.VERSION_TITLE,API_ID,API_KEY,getDeviceName(),AppContext.getContext().getPackageName() + ":" + Build.SERIAL));
  this.messenger=new AndroidMessenger(AppContext.getContext(),builder.build());
  IntentFilter screenFilter=new IntentFilter();
  screenFilter.addAction(Intent.ACTION_SCREEN_OFF);
  screenFilter.addAction(Intent.ACTION_SCREEN_ON);
  application.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      if (intent.getAction().equals(Intent.ACTION_SCREEN_ON)) {
        AppStateBroker.stateBroker().onScreenOn();
      }
 else       if (intent.getAction().equals(Intent.ACTION_SCREEN_OFF)) {
        AppStateBroker.stateBroker().onScreenOff();
      }
    }
  }
,screenFilter);
  if (isScreenOn(application)) {
    AppStateBroker.stateBroker().onScreenOn();
  }
 else {
    AppStateBroker.stateBroker().onScreenOff();
  }
}

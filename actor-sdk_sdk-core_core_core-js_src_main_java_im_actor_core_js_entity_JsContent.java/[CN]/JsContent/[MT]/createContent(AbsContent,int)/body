{
  JsMessenger messenger=JsMessenger.getInstance();
  JsContent content;
  if (src instanceof TextContent) {
    TextContent textContent=(TextContent)src;
    if (textContent.getTextMessageEx() instanceof ApiTextModernMessage) {
      ApiTextModernMessage modernMessage=(ApiTextModernMessage)textContent.getTextMessageEx();
      String text=modernMessage.getText();
      JsParagraphStyle paragraphStyle=JsParagraphStyle.create(modernMessage.getStyle());
      JsArray<JsAttach> attaches=JsArray.createArray().cast();
      for (      ApiTextModernAttach srcAttach : modernMessage.getAttaches()) {
        JsArray<JsAttachField> fields=JsArray.createArray().cast();
        for (        ApiTextModernField f : srcAttach.getFields()) {
          boolean isShort=f.isShort() != null ? f.isShort() : true;
          fields.push(JsAttachField.create(f.getTitle(),f.getValue(),isShort));
        }
        attaches.push(JsAttach.create(srcAttach.getTitle(),srcAttach.getTitleUrl(),srcAttach.getText(),JsParagraphStyle.create(srcAttach.getStyle()),fields));
      }
      content=JsContentTextModern.create(text,paragraphStyle,attaches);
    }
 else {
      content=JsContentText.create(((TextContent)src).getText());
    }
  }
 else   if (src instanceof ServiceContent) {
    content=JsContentService.create(messenger.getFormatter().formatFullServiceMessage(sender,(ServiceContent)src));
  }
 else   if (src instanceof DocumentContent) {
    DocumentContent doc=(DocumentContent)src;
    String fileName=doc.getName();
    String fileExtension=doc.getExt();
    String fileSize=messenger.getFormatter().formatFileSize(doc.getSource().getSize());
    String fileUrl=null;
    if (doc.getSource() instanceof FileRemoteSource) {
      fileUrl=messenger.getFileUrl(((FileRemoteSource)doc.getSource()).getFileReference());
    }
    boolean isUploading=doc.getSource() instanceof FileLocalSource;
    String thumb=null;
    if (doc.getFastThumb() != null) {
      String thumbBase64=Base64Utils.toBase64(doc.getFastThumb().getImage());
      thumb="data:image/jpg;base64," + thumbBase64;
    }
    if (src instanceof PhotoContent && thumb != null) {
      PhotoContent photoContent=(PhotoContent)src;
      content=JsContentPhoto.create(fileName,fileExtension,fileSize,photoContent.getW(),photoContent.getH(),thumb,fileUrl,isUploading);
    }
 else     if (src instanceof VoiceContent) {
      VoiceContent voiceContent=(VoiceContent)src;
      content=JsContentVoice.create(fileName,fileExtension,fileSize,fileUrl,isUploading,voiceContent.getDuration());
    }
 else {
      content=JsContentDocument.create(fileName,fileExtension,fileSize,thumb,fileUrl,isUploading);
    }
  }
 else   if (src instanceof ContactContent) {
    ContactContent contactContent=(ContactContent)src;
    JsArrayString phones=JsArray.createArray().cast();
    JsArrayString emails=JsArray.createArray().cast();
    for (    String s : contactContent.getEmails()) {
      emails.push(s);
    }
    for (    String s : contactContent.getPhones()) {
      phones.push(s);
    }
    content=JsContentContact.create(contactContent.getName(),contactContent.getPhoto64(),phones,emails);
  }
 else   if (src instanceof LocationContent) {
    LocationContent locationContent=(LocationContent)src;
    content=JsContentLocation.create(locationContent.getLongitude(),locationContent.getLatitude(),locationContent.getStreet(),locationContent.getPlace());
  }
 else {
    content=JsContentUnsupported.create();
  }
  return content;
}

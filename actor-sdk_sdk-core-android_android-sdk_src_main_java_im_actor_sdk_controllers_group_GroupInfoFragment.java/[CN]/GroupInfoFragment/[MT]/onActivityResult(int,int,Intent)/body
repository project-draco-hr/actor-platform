{
  if (resultCode == Activity.RESULT_OK && requestCode == 0 && data != null && data.hasExtra(Intents.EXTRA_UID)) {
    final UserVM userModel=users().get(data.getIntExtra(Intents.EXTRA_UID,0));
    for (    GroupMember uid : groupInfo.getMembers().get()) {
      if (uid.getUid() == userModel.getId()) {
        Toast.makeText(getActivity(),R.string.toast_already_member,Toast.LENGTH_SHORT).show();
        return;
      }
    }
    new AlertDialog.Builder(getActivity()).setMessage(getString(R.string.alert_group_add_text).replace("{0}",userModel.getName().get())).setPositiveButton(R.string.alert_group_add_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog2,      int which){
        execute(messenger().inviteMember(chatId,userModel.getId()),R.string.progress_common,new CommandCallback<Void>(){
          @Override public void onResult(          Void res){
          }
          @Override public void onError(          Exception e){
            Toast.makeText(getActivity(),R.string.toast_unable_add,Toast.LENGTH_SHORT).show();
          }
        }
);
      }
    }
).setNegativeButton(R.string.dialog_cancel,null).show().setCanceledOnTouchOutside(true);
  }
 else {
    super.onActivityResult(requestCode,resultCode,data);
  }
}

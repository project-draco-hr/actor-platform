{
  ArrayList<MessageModel> updated=new ArrayList<MessageModel>();
  for (  HistoryMessage message : history) {
    MessageModel model=listEngine.getValue(message.getRid());
    if (model == null) {
      AbsMessage content=null;
      if (message.getMessage().getType() == 1) {
        try {
          im.actor.api.scheme.TextMessage textMessage=Bser.parse(im.actor.api.scheme.TextMessage.class,message.getMessage().getContent());
          content=new TextMessage(textMessage.getText(),textMessage.getText(),false);
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
 else       if (message.getMessage().getType() == 2) {
        try {
          ServiceMessage serviceMessage=Bser.parse(im.actor.api.scheme.ServiceMessage.class,message.getMessage().getContent());
          if (serviceMessage.getExtType() == 1) {
            ServiceExUserAdded added=Bser.parse(ServiceExUserAdded.class,serviceMessage.getExt());
            content=new GroupAdd(added.getAddedUid());
          }
 else           if (serviceMessage.getExtType() == 2) {
            ServiceExUserKicked kicked=Bser.parse(ServiceExUserKicked.class,serviceMessage.getExt());
            content=new GroupKick(kicked.getKickedUid());
          }
 else           if (serviceMessage.getExtType() == 3) {
            content=new GroupLeave();
          }
 else           if (serviceMessage.getExtType() == 4) {
            content=new GroupCreated("??");
          }
 else           if (serviceMessage.getExtType() == 5) {
            ServiceExChangedTitle title=Bser.parse(ServiceExChangedTitle.class,serviceMessage.getExt());
            content=new GroupTitle(title.getTitle());
          }
 else           if (serviceMessage.getExtType() == 6) {
            ServiceExChangedAvatar avatar=Bser.parse(ServiceExChangedAvatar.class,serviceMessage.getExt());
            content=new GroupAvatar(ApiConversion.convert(avatar.getAvatar()));
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
 else       if (message.getMessage().getType() == 3) {
        try {
          FileMessage fileMessage=Bser.parse(FileMessage.class,message.getMessage().getContent());
          if (fileMessage.getExtType() == 0x01) {
            FileExPhoto photo=Bser.parse(FileExPhoto.class,fileMessage.getExt());
            content=new PhotoMessage(new FileLocation(fileMessage.getFileId(),fileMessage.getAccessHash(),fileMessage.getFileSize()),false,photo.getW(),photo.getH(),new FastThumb(fileMessage.getThumb().getW(),fileMessage.getThumb().getH(),fileMessage.getThumb().getThumb()),false);
          }
 else           if (fileMessage.getExtType() == 0x02) {
            FileExVideo video=Bser.parse(FileExVideo.class,fileMessage.getExt());
            FastThumb fastThumb=null;
            if (fileMessage.getThumb() != null) {
              fastThumb=new FastThumb(fileMessage.getThumb().getW(),fileMessage.getThumb().getH(),fileMessage.getThumb().getThumb());
            }
            content=new VideoMessage(new FileLocation(fileMessage.getFileId(),fileMessage.getAccessHash(),fileMessage.getFileSize()),false,video.getDuration(),video.getW(),video.getH(),fastThumb,false);
          }
 else {
            content=new DocumentMessage(new FileLocation(fileMessage.getFileId(),fileMessage.getAccessHash(),fileMessage.getFileSize()),false,fileMessage.getName(),fileMessage.getFileSize(),false,null);
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
      if (content != null) {
        updated.add(new MessageModel(new ConversationMessage(message.getRid(),message.getDate(),message.getDate(),message.getSenderUid(),MessageState.SENT,content)));
      }
    }
  }
  listEngine.addOrUpdateItems(updated);
}

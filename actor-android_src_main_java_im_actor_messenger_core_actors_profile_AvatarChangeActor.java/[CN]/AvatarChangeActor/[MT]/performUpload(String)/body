{
  AvatarChangeState.setFileName(fileName);
  AvatarChangeState.uploadingState().change(AvatarChangeState.State.UPLOADING);
  ask(UploadActor.upload(fileName,false),new AskCallback<FileLocation>(){
    @Override public void onResult(    FileLocation result){
      if (isCanceled) {
        return;
      }
      ask(requests().editAvatar(new im.actor.api.scheme.FileLocation(result.getFileId(),result.getAccessHash())),new FutureCallback<ResponseEditAvatar>(){
        @Override public void onResult(        ResponseEditAvatar result){
          DiskCache diskCache=Core.core().getImageLoader().getInternalDiskCache();
          try {
            String fullKey=FileKeys.avatarKey(result.getAvatar().getFullImage().getFileLocation().getFileId());
            String file=diskCache.startWriteFile(fullKey);
            IOUtils.copy(new File(fileName),new File(file));
            diskCache.commitFile(fullKey);
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
          system().actorOf(SequenceActor.sequence()).send(new SequenceActor.SeqUpdate(result.getSeq(),result.getState(),new UpdateUserAvatarChanged(myUid(),result.getAvatar())));
          system().actorOf(SequenceActor.sequence()).send(new Runnable(){
            @Override public void run(){
              AvatarChangeState.uploadingState().change(AvatarChangeState.State.NONE);
            }
          }
);
        }
        @Override public void onError(        Throwable throwable){
          AvatarChangeState.uploadingState().change(AvatarChangeState.State.ERROR);
          ToastActor.get().show("Unable to change avatar");
        }
      }
);
    }
    @Override public void onError(    Throwable throwable){
      ToastActor.get().show("Unable to change avatar");
      AvatarChangeState.uploadingState().change(AvatarChangeState.State.ERROR);
    }
  }
);
}

{
  Log.d(TAG,"doEncrypt");
  try {
    ask(context().getEncryption().getEncryptedChatManager(uid),new EncryptedPeerActor.EncryptBox(message.buildContainer()),new AskCallback(){
      @Override public void onResult(      Object obj){
        Log.d(TAG,"doEncrypt:onResult");
        EncryptedPeerActor.EncryptBoxResponse encryptedBox=(EncryptedPeerActor.EncryptBoxResponse)obj;
        ArrayList<ApiEncyptedBoxKey> boxKeys=new ArrayList<ApiEncyptedBoxKey>();
        for (        EncryptedBoxKey b : encryptedBox.getBox().getKeys()) {
          boxKeys.add(new ApiEncyptedBoxKey(b.getUid(),b.getKeyGroupId(),"curve25519",b.getEncryptedKey()));
        }
        ApiEncryptedBox apiEncryptedBox=new ApiEncryptedBox(0,boxKeys,"aes-kuznechik",encryptedBox.getBox().getEncryptedPackage(),new ArrayList<ApiEncryptedBoxSignature>());
        ApiEncryptedMessage apiEncryptedMessage=new ApiEncryptedMessage(apiEncryptedBox);
        future.result(new EncryptedMessage(apiEncryptedMessage));
      }
      @Override public void onError(      Exception e){
        Log.d(TAG,"doEncrypt:onError");
        e.printStackTrace();
        future.error(e);
      }
    }
);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}

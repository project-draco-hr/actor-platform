{
  Log.d(TAG,"doEncrypt");
  try {
    ask(context().getEncryption().getEncryptedChatManager(uid),new EncryptedPeerActor.EncryptPackage(message.buildContainer()),new AskCallback(){
      @Override public void onResult(      Object obj){
        Log.d(TAG,"doEncrypt:onResult");
        EncryptedBox encryptedBox=(EncryptedBox)obj;
        ArrayList<ApiEncyptedBoxKey> boxKeys=new ArrayList<ApiEncyptedBoxKey>();
        for (        EncryptedBoxKey b : encryptedBox.getKeys()) {
          boxKeys.add(new ApiEncyptedBoxKey(b.getUid(),b.getKeyGroupId(),"curve25519",b.getEncryptedKey()));
        }
        ApiEncryptedBox apiEncryptedBox=new ApiEncryptedBox(boxKeys,"aes-kuznechik",encryptedBox.getEncryptedPackage());
        ApiEncryptedMessage apiEncryptedMessage=new ApiEncryptedMessage(apiEncryptedBox);
        future.result(new EncryptedMessage(apiEncryptedMessage));
      }
      @Override public void onError(      Exception e){
        Log.d(TAG,"doEncrypt:onError");
        future.error(e);
      }
    }
);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}

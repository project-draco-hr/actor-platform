{
  StickerContent content=(StickerContent)message.getContent();
  ImageLocation image512=content.getImage512();
  if (image512 == null) {
    return;
  }
  FileReference fileReference=image512.getReference();
  sticker.bind(fileReference,StickerView.STICKER_FULL);
  int w=image512.getWidth();
  int h=image512.getHeight();
  int maxHeight=context.getResources().getDisplayMetrics().heightPixels - Screen.dp(96 + 32);
  maxHeight=Math.min(Screen.dp(200),maxHeight);
  int maxWidth=context.getResources().getDisplayMetrics().widthPixels - Screen.dp(32 + 48);
  maxWidth=Math.min(Screen.dp(200),maxWidth);
  float scale=Math.min(maxWidth / (float)w,maxHeight / (float)h);
  int bubbleW=(int)(scale * w);
  int bubbleH=(int)(scale * h);
  ViewGroup.LayoutParams params=sticker.getLayoutParams();
  params.height=bubbleH;
  params.width=bubbleW;
  if (message.getSenderId() == myUid()) {
    stateIcon.setVisibility(View.VISIBLE);
switch (message.getMessageState()) {
case ERROR:
      stateIcon.setResource(R.drawable.msg_error);
    stateIcon.setTint(COLOR_ERROR);
  break;
default :
case PENDING:
stateIcon.setResource(R.drawable.msg_clock);
stateIcon.setTint(COLOR_PENDING);
break;
case READ:
stateIcon.setResource(R.drawable.msg_check_2);
stateIcon.setTint(COLOR_READ);
break;
case RECEIVED:
stateIcon.setResource(R.drawable.msg_check_2);
stateIcon.setTint(COLOR_RECEIVED);
break;
case SENT:
stateIcon.setResource(R.drawable.msg_check_1);
stateIcon.setTint(COLOR_SENT);
break;
}
}
 else {
stateIcon.setVisibility(View.GONE);
}
time.setText(Strings.formatTime(message.getDate()));
}

{
  Log.d(TAG,"Binding file #" + fileReference.getFileId());
  Downloaded downloaded1=downloaded.getValue(fileReference.getFileId());
  if (downloaded1 != null) {
    FileSystemProvider provider=modules().getConfiguration().getFileSystemProvider();
    FileSystemReference reference=provider.fileFromDescriptor(downloaded1.getDescriptor());
    if (reference.isExist() && reference.getSize() == downloaded1.getFileSize()) {
      Log.d(TAG,"- Downloaded");
      callback.onDownloaded(modules().getConfiguration().getFileSystemProvider().fileFromDescriptor(downloaded1.getDescriptor()));
      return;
    }
 else {
      Log.d(TAG,"- File is corrupted");
      downloaded.removeItem(downloaded1.getFileId());
    }
  }
  QueueItem queueItem=findItem(fileReference.getFileId());
  if (queueItem == null) {
    Log.d(TAG,"- Adding to queue");
    queueItem=new QueueItem(fileReference);
    queueItem.callbacks.add(callback);
    if (autoStart) {
      queueItem.isStopped=false;
      callback.onDownloading(0);
    }
 else {
      queueItem.isStopped=true;
      callback.onNotDownloaded();
    }
    queue.add(0,queueItem);
  }
 else {
    Log.d(TAG,"- Promoting in queue");
    promote(fileReference.getFileId());
    if (!queueItem.callbacks.contains(callback)) {
      queueItem.callbacks.add(callback);
    }
    if (queueItem.isStopped) {
      callback.onNotDownloaded();
    }
 else {
      if (queueItem.isStarted) {
        callback.onDownloading(queueItem.progress);
      }
 else {
        callback.onDownloading(0);
      }
    }
  }
  checkQueue();
}

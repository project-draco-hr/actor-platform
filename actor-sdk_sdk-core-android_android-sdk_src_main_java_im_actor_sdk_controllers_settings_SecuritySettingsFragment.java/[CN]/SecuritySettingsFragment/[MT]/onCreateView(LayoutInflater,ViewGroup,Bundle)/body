{
  View res=inflater.inflate(R.layout.fr_settings_encryption,container,false);
  res.setBackgroundColor(ActorSDK.sharedActor().style.getMainBackgroundColor());
  res.findViewById(R.id.big_divider).setBackgroundColor(ActorSDK.sharedActor().style.getBackyardBackgroundColor());
  ((TextView)res.findViewById(R.id.security_settings_title)).setTextColor(ActorSDK.sharedActor().style.getSettingsMainTitleColor());
  loading=(TextView)res.findViewById(R.id.loading);
  loading.setTextColor(ActorSDK.sharedActor().style.getTextPrimaryColor());
  loading.setVisibility(View.GONE);
  loading.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      performLoad();
    }
  }
);
  authItems=(LinearLayout)res.findViewById(R.id.authItems);
  res.findViewById(R.id.divider).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  res.findViewById(R.id.terminateSessions).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      new AlertDialog.Builder(getActivity()).setMessage(R.string.security_terminate_message).setPositiveButton(R.string.dialog_yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          execute(messenger().terminateAllSessions(),R.string.progress_common,new CommandCallback<Void>(){
            @Override public void onResult(            Void res){
              performLoad();
            }
            @Override public void onError(            Exception e){
              performLoad();
              Toast.makeText(getActivity(),R.string.security_toast_unable_remove_auth,Toast.LENGTH_SHORT).show();
            }
          }
);
        }
      }
).setNegativeButton(R.string.dialog_no,null).show().setCanceledOnTouchOutside(true);
    }
  }
);
  ((TextView)res.findViewById(R.id.settings_terminate_sessions_title)).setTextColor(ActorSDK.sharedActor().style.getTextPrimaryColor());
  ((TextView)res.findViewById(R.id.settings_terminate_sessions_hint)).setTextColor(ActorSDK.sharedActor().style.getTextSecondaryColor());
  performLoad();
  return res;
}

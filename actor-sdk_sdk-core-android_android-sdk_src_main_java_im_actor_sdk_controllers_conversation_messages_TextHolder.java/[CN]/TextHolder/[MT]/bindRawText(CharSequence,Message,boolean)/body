{
  if (message.getSenderId() == myUid()) {
    messageBubble.setBackgroundResource(R.drawable.bubble_text_out);
  }
 else {
    messageBubble.setBackgroundResource(R.drawable.bubble_text_in);
  }
  if (isItalic) {
    text.setTypeface(Fonts.italic());
  }
 else {
    text.setTypeface(Fonts.regular());
  }
  text.setText(rawText);
  text.setMovementMethod(new CustomLinkMovementMethod());
  if (message.getSenderId() == myUid()) {
    status.setVisibility(View.VISIBLE);
switch (message.getMessageState()) {
case SENT:
      status.setResource(R.drawable.msg_check_1);
    status.setTint(sentColor);
  break;
case RECEIVED:
status.setResource(R.drawable.msg_check_2);
status.setTint(deliveredColor);
break;
case READ:
status.setResource(R.drawable.msg_check_2);
status.setTint(readColor);
break;
default :
case PENDING:
status.setResource(R.drawable.msg_clock);
status.setTint(waitColor);
break;
case ERROR:
status.setResource(R.drawable.msg_error);
status.setTint(errorColor);
break;
}
}
 else {
status.setVisibility(View.GONE);
}
boolean hasReactions=message.getReactions() != null && message.getReactions().size() > 0;
Spannable timeWithReactions=null;
if (hasReactions) {
SpannableStringBuilder builder=new SpannableStringBuilder();
SpannableString s;
boolean hasMyReaction=false;
for (Reaction r : message.getReactions()) {
s=new SpannableString(Integer.toString(r.getUids().size()).concat(r.getCode()).concat("  "));
for (Integer uid : r.getUids()) {
if (uid == myUid()) {
hasMyReaction=true;
break;
}
}
s.setSpan(new ForegroundColorSpan(hasMyReaction ? ActorSDK.sharedActor().style.getConvLikeColor() : ActorSDK.sharedActor().style.getConvTimeColor()),0,s.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
builder.append(s);
}
timeWithReactions=builder.append(Strings.formatTime(message.getDate()));
}
time.setText(hasReactions ? timeWithReactions : Strings.formatTime(message.getDate()));
}

{
  if (LOG) {
    Log.d(TAG,"onDownloaded file #" + fileId);
  }
  QueueItem queueItem=findItem(fileId);
  if (queueItem == null) {
    return;
  }
  if (!queueItem.isStarted) {
    return;
  }
  downloaded.addOrUpdateItem(new Downloaded(queueItem.fileReference.getFileId(),queueItem.fileReference.getFileSize(),reference.getDescriptor()));
  queue.remove(queueItem);
  queueItem.taskRef.send(PoisonPill.INSTANCE);
  for (  final WeakCallbackHolder weakReference : callbacks) {
    final FileEventCallback callback=weakReference.getCallbackWeakReference().get();
    if (callback != null) {
      im.actor.runtime.Runtime.dispatch(new Runnable(){
        @Override public void run(){
          callback.onDownloaded(fileId);
        }
      }
);
    }
  }
  for (  final FileCallback fileCallback : queueItem.callbacks) {
    im.actor.runtime.Runtime.dispatch(new Runnable(){
      @Override public void run(){
        fileCallback.onDownloaded(reference);
      }
    }
);
  }
  checkQueue();
}

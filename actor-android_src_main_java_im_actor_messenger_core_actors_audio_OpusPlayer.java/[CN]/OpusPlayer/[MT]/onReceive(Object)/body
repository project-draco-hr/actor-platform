{
  if (message instanceof StartPlay) {
    StartPlay start=(StartPlay)message;
    stopPlay();
    messageModel=ListEngines.getMessagesListEngine(DialogUids.getDialogUid(start.type,start.id)).getValue(start.rid);
    if (messageModel == null || messageModel.getAudioState() == null) {
      return;
    }
    Downloaded downloaded=downloaded().get(((AbsFileMessage)messageModel.getContent()).getLocation().getFileId());
    if (downloaded == null) {
      return;
    }
    currentFileName=downloaded.getDownloadedPath();
    try {
      bufferSize=AudioTrack.getMinBufferSize(48000,AudioFormat.CHANNEL_OUT_MONO,AudioFormat.ENCODING_PCM_16BIT);
      audioTrack=new AudioTrack(AudioManager.STREAM_MUSIC,48000,AudioFormat.CHANNEL_OUT_MONO,AudioFormat.ENCODING_PCM_16BIT,bufferSize,AudioTrack.MODE_STREAM);
      audioTrack.play();
    }
 catch (    Exception e) {
      e.printStackTrace();
      audioTrack=null;
      return;
    }
    int res=opusLib.openOpusFile(currentFileName);
    if (res == 0) {
      audioTrack.release();
      audioTrack=null;
      return;
    }
    duration=opusLib.getTotalPcmDuration();
    offset=0;
    isStarted=true;
    type=start.type;
    id=start.id;
    messageModel.getAudioState().change(new AudioState(AudioState.State.PLAYING));
    self().sendOnce(new Iterate());
  }
 else   if (message instanceof Iterate) {
    if (!isStarted) {
      return;
    }
    ByteBuffer buffer=ByteBuffer.allocateDirect(bufferSize);
    opusLib.readOpusFile(buffer,bufferSize);
    int size=opusLib.getSize();
    long pmcOffset=opusLib.getPcmOffset();
    boolean isFinished=opusLib.getFinished() == 1;
    if (size != 0) {
      buffer.rewind();
      byte[] data=new byte[size];
      buffer.get(data);
      audioTrack.write(data,0,size);
    }
    offset=pmcOffset;
    float scale=0;
    if (duration != 0) {
      scale=offset / (float)duration;
    }
    messageModel.getAudioState().change(new AudioState(AudioState.State.PLAYING,(int)(scale * 100)));
    if (!isFinished) {
      self().sendOnce(new Iterate());
    }
 else {
      self().send(new StopPlay(type,id,messageModel.getRid()));
    }
  }
 else   if (message instanceof StopPlay) {
    stopPlay();
  }
}

{
  if (this.isInfinity()) {
    return this;
  }
  ECCurve curve=this.getCurve();
  int coord=curve.getCoordinateSystem();
  ECFieldElement X1=this.x;
switch (coord) {
case ECCurve.COORD_AFFINE:
case ECCurve.COORD_LAMBDA_AFFINE:
{
      ECFieldElement Y1=this.y;
      return new ECPoint.F2m(curve,X1.square(),Y1.square(),this.withCompression);
    }
case ECCurve.COORD_HOMOGENEOUS:
case ECCurve.COORD_LAMBDA_PROJECTIVE:
{
    ECFieldElement Y1=this.y, Z1=this.zs[0];
    return new ECPoint.F2m(curve,X1.square(),Y1.square(),new ECFieldElement[]{Z1.square()},this.withCompression);
  }
default :
{
  throw new IllegalStateException("unsupported coordinate system");
}
}
}

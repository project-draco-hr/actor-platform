{
  if (state.getObj().isCompleted()) {
    return;
  }
  if (isLoading) {
    return;
  }
  isLoading=true;
  OutPeer peer;
  if (chatType == DialogType.TYPE_GROUP) {
    GroupModel model=groups().get(chatId);
    peer=new OutPeer(PeerType.GROUP,chatId,model.getAccessHash());
  }
 else   if (chatType == DialogType.TYPE_USER) {
    UserModel user=users().get(chatId);
    peer=new OutPeer(PeerType.PRIVATE,chatId,user.getAccessHash());
  }
 else {
    return;
  }
  ask(requests().loadHistory(peer,state.getObj().getMaxLoadedDate(),LIMIT),new FutureCallback<ResponseLoadHistory>(){
    @Override public void onResult(    final ResponseLoadHistory result){
      ask(UserActor.userActor().onUpdateUsers(result.getUsers()),new FutureCallback<Boolean>(){
        @Override public void onResult(        Boolean result2){
          long maxValue=state.getObj().getMaxLoadedDate();
          for (          HistoryMessage d : result.getHistory()) {
            maxValue=Math.max(maxValue,d.getDate());
          }
          state.setObj(new State(maxValue,result.getHistory().size() < LIMIT));
          ConversationActor.conv(chatType,chatId).onHistoryLoaded(result.getHistory());
          isLoading=false;
        }
        @Override public void onError(        Throwable throwable){
        }
      }
);
    }
    @Override public void onError(    Throwable throwable){
    }
  }
);
}

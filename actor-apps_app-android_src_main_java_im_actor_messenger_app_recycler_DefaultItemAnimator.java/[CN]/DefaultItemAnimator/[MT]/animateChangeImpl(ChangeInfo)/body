{
  final ViewHolder holder=changeInfo.oldHolder;
  final View view=holder == null ? null : holder.itemView;
  final ViewHolder newHolder=changeInfo.newHolder;
  final View newView=newHolder != null ? newHolder.itemView : null;
  if (view != null) {
    final ViewPropertyAnimatorCompat oldViewAnim=ViewCompat.animate(view).setDuration(getChangeDuration());
    mChangeAnimations.add(changeInfo.oldHolder);
    oldViewAnim.translationX(changeInfo.toX - changeInfo.fromX);
    oldViewAnim.translationY(changeInfo.toY - changeInfo.fromY);
    oldViewAnim.alpha(0).setListener(new VpaListenerAdapter(){
      @Override public void onAnimationStart(      View view){
        dispatchChangeStarting(changeInfo.oldHolder,true);
      }
      @Override public void onAnimationEnd(      View view){
        oldViewAnim.setListener(null);
        ViewCompat.setAlpha(view,1);
        ViewCompat.setTranslationX(view,0);
        ViewCompat.setTranslationY(view,0);
        dispatchChangeFinished(changeInfo.oldHolder,true);
        mChangeAnimations.remove(changeInfo.oldHolder);
        dispatchFinishedWhenDone();
      }
    }
).start();
  }
  if (newView != null) {
    final ViewPropertyAnimatorCompat newViewAnimation=ViewCompat.animate(newView);
    mChangeAnimations.add(changeInfo.newHolder);
    newViewAnimation.translationX(0).translationY(0).setDuration(getChangeDuration()).alpha(1).setListener(new VpaListenerAdapter(){
      @Override public void onAnimationStart(      View view){
        dispatchChangeStarting(changeInfo.newHolder,false);
      }
      @Override public void onAnimationEnd(      View view){
        newViewAnimation.setListener(null);
        ViewCompat.setAlpha(newView,1);
        ViewCompat.setTranslationX(newView,0);
        ViewCompat.setTranslationY(newView,0);
        dispatchChangeFinished(changeInfo.newHolder,false);
        mChangeAnimations.remove(changeInfo.newHolder);
        dispatchFinishedWhenDone();
      }
    }
).start();
  }
}

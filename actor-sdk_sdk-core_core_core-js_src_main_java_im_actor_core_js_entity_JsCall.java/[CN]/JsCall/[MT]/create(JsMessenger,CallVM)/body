{
  JsArray<JsPeerInfo> members=JsArray.createArray().cast();
  for (  CallMember member : model.getMembers().get()) {
    members.push(messenger.buildPeerInfo(Peer.user(member.getUid())));
  }
  String state;
switch (model.getState().get()) {
case RINGING:
    state="calling";
  break;
case CONNECTING:
state="connecting";
break;
case IN_PROGRESS:
state="in_progress";
break;
default :
case ENDED:
state="ended";
break;
}
JsArray<JsMediaStream> streams=JsArray.createArray().cast();
for (WebRTCMediaStream stream : model.getMediaStreams().get()) {
JsMediaStream stream1=((MediaStream)stream).getStream();
if (stream1 != null) {
streams.push(stream1);
}
}
MediaStream ownMediaStream=(MediaStream)model.getOwnMediaStream().get();
return create(JsPeer.create(model.getPeer()),model.isOutgoing(),members,state,model.getIsMuted().get(),ownMediaStream == null ? null : ownMediaStream.getStream(),streams);
}

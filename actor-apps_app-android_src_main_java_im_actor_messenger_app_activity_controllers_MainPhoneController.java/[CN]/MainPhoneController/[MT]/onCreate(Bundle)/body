{
  if (getIntent().getData() != null) {
    if (getIntent().getAction().equals(Intent.ACTION_VIEW)) {
      joinGroupUrl=getIntent().getData().toString();
    }
  }
  if (getIntent().getClipData() != null && getIntent().getAction().equals(Intent.ACTION_SEND)) {
    sendUri=getIntent().getClipData().getItemAt(0).getUri().toString();
  }
  if (getIntent().getClipData() != null && getIntent().getAction().equals(Intent.ACTION_SEND_MULTIPLE)) {
    ClipData clip=getIntent().getClipData();
    for (int i=0; i < clip.getItemCount(); i++) {
      sendUriMultiple.add(clip.getItemAt(i).getUri().toString());
    }
  }
  if (getIntent().getExtras() != null) {
    Bundle extras=getIntent().getExtras();
    if (extras.containsKey("share_user")) {
      shareUser=extras.getInt("share_user");
    }
 else     if (extras.containsKey("forward_text")) {
      forwardText=extras.getString("forward_text");
      forwardTextRaw=extras.getString("forward_text_raw");
    }
 else     if (extras.containsKey("forward_doc_descriptor")) {
      forwardDocDescriptor=extras.getString("forward_doc_descriptor");
      forwardDocIsDoc=extras.getBoolean("forward_doc_is_doc");
    }
  }
  setContentView(R.layout.activity_main);
  getActivity().setSupportActionBar(((Toolbar)findViewById(R.id.toolbar)));
  syncInProgressView=findViewById(R.id.syncInProgress);
  emptyContactsView=findViewById(R.id.emptyContacts);
  ((TextView)findViewById(R.id.addContactButtonText)).setTypeface(Fonts.medium());
  ((TextView)findViewById(R.id.inviteButtonText)).setTypeface(Fonts.medium());
  isFabVisible=false;
  fabContent=findViewById(R.id.fabContainer);
  fabRoot=findViewById(R.id.rootFab);
  fabRoot.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showFab();
    }
  }
);
  fabContent.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      goneFab();
    }
  }
);
  searchList=(RecyclerView)findViewById(R.id.searchList);
  searchList.setLayoutManager(new CustomLinearLayoutManager(getActivity()));
  searchContainer=findViewById(R.id.searchCont);
  searchEmptyView=findViewById(R.id.empty);
  searchHintView=findViewById(R.id.searchHint);
  searchHintView.setVisibility(View.GONE);
  searchEmptyView.setVisibility(View.GONE);
  pager=(ViewPager)findViewById(R.id.vp_pager);
  homePagerAdapter=new HomePagerAdapter(getFragmentManager());
  pager.setAdapter(homePagerAdapter);
  pager.setOnPageChangeListener(new ViewPager.OnPageChangeListener(){
    private int prevPage=-1;
    @Override public void onPageScrolled(    int position,    float positionOffset,    int positionOffsetPixels){
    }
    @Override public void onPageSelected(    int position){
      if (position == 0) {
        if (position != prevPage) {
          messenger().trackDialogsOpen();
        }
        if (prevPage == 1) {
          messenger().trackContactsClosed();
        }
        prevPage=position;
      }
 else       if (position == 1) {
        if (position != prevPage) {
          messenger().trackContactsOpen();
        }
        if (prevPage == 0) {
          messenger().trackDialogsClosed();
        }
        prevPage=position;
      }
    }
    @Override public void onPageScrollStateChanged(    int state){
    }
  }
);
  findViewById(R.id.composeContainer).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      goneFab();
      startActivity(new Intent(getActivity(),ComposeActivity.class));
    }
  }
);
  findViewById(R.id.createGroupContainer).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      goneFab();
      startActivity(new Intent(getActivity(),CreateGroupActivity.class));
    }
  }
);
  findViewById(R.id.addContactContainer).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      goneFab();
      startActivity(new Intent(getActivity(),AddContactActivity.class));
    }
  }
);
  findViewById(R.id.addContactButton).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),AddContactActivity.class));
    }
  }
);
  findViewById(R.id.inviteButton).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      String inviteMessage=getResources().getString(R.string.invite_message);
      Intent sendIntent=new Intent(Intent.ACTION_SEND);
      sendIntent.putExtra(Intent.EXTRA_TEXT,inviteMessage);
      sendIntent.setType("text/plain");
      startActivity(sendIntent);
    }
  }
);
}

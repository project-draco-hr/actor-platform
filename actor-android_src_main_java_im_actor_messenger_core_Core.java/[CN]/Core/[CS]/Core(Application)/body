{
  AppContext.setContext(application);
  Formatter.init(application);
  system().setClassLoader(AppContext.getContext().getClassLoader());
  system().addDispatcher("db",1);
  system().addDispatcher("contacts",1);
  system().addDispatcher("file_encryption",1);
  system().addDispatcher("rsa",1);
  system().addDispatcher("updates",1);
  system().addDispatcher("push",1);
  this.emojiProcessor=new EmojiProcessor(application);
  ActivityManager activityManager=(ActivityManager)AppContext.getContext().getSystemService(Context.ACTIVITY_SERVICE);
  int memoryInMB=Math.min(activityManager.getMemoryClass(),32);
  long totalAppHeap=memoryInMB * 1024 * 1024;
  int cacheLimit=(int)totalAppHeap / 4;
  int freeCacheLimit=cacheLimit / 2;
  BitmapClasificator clasificator=new BitmapClasificator.Builder().startExactSize(100,100).setFreeSize(2).setLruSize(15).endFilter().startAny().useSizeInBytes().setLruSize(cacheLimit).setFreeSize(freeCacheLimit).endFilter().build();
  this.imageLoader=new ImageLoader(clasificator,application);
  this.imageLoader.getTaskResolver().register(ImagePreviewTask.class,ImagePreviewActor.class);
  this.imageLoader.getTaskResolver().register(VideoPreviewTask.class,VideoPreviewActor.class);
  this.imageLoader.getTaskResolver().register(VideoTask.class,VideoActor.class);
  this.imageLoader.getTaskResolver().register(AvatarTask.class,AvatarActor.class);
  this.imageLoader.getTaskResolver().register(FullAvatarTask.class,FullAvatarActor.class);
  ConfigurationBuilder builder=new ConfigurationBuilder();
  builder.setThreading(new JavaThreading());
  builder.setNetworking(new JavaNetworking());
  builder.setMainThread(new AndroidMainThread());
  builder.setLog(new AndroidLog());
  builder.setStorage(new AppEngineFactory());
  if (BuildConfig.API_SSL) {
    builder.addEndpoint("tls://" + BuildConfig.API_HOST + ":"+ BuildConfig.API_PORT);
  }
 else {
    builder.addEndpoint("tcp://" + BuildConfig.API_HOST + ":"+ BuildConfig.API_PORT);
  }
  this.messenger=new im.actor.model.Messenger(builder.build());
}

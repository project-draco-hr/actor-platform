{
  chatId=getArguments().getInt(EXTRA_GROUP_ID);
  groupInfo=groups().get(chatId);
  isAdmin=groupInfo.getCreatorId() == myUid();
  Command<String> cmd=messenger().requestIntegrationToken(chatId);
  if (cmd != null)   cmd.start(new CommandCallback<String>(){
    @Override public void onResult(    String res){
      if (res != null && !res.isEmpty()) {
        integrationToken=res;
        adapter.notifyDataSetChanged();
        hideView(emptyView);
        showView(listView);
      }
    }
    @Override public void onError(    Exception e){
      Toast.makeText(getActivity(),getString(R.string.integration_token_error_get_token),Toast.LENGTH_SHORT).show();
      adapter.notifyDataSetChanged();
    }
  }
);
  final ClipboardManager clipboard=(ClipboardManager)getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
  View res=inflater.inflate(R.layout.fragment_list,container,false);
  listView=(ListView)res.findViewById(R.id.listView);
  emptyView=(TextView)res.findViewById(R.id.emptyView);
  emptyView.setText(getString(R.string.integration_token_empty_view));
  emptyView.setTextColor(ActorSDK.sharedActor().style.getTextSecondary());
  adapter=new IntegrationTokenActionsAdapter(getActivity());
  listView.setAdapter(adapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      if (integrationToken != null && !integrationToken.isEmpty()) {
switch (position) {
case 0:
          clipboard.setPrimaryClip(ClipData.newPlainText(null,integrationToken));
        Toast.makeText(getActivity(),getString(R.string.integration_token_copied),Toast.LENGTH_SHORT).show();
      break;
case 1:
    break;
case 2:
  clipboard.setPrimaryClip(ClipData.newPlainText(null,integrationToken));
Toast.makeText(getActivity(),getString(R.string.integration_token_copied),Toast.LENGTH_SHORT).show();
break;
case 3:
if (isAdmin) {
new AlertDialog.Builder(getActivity()).setMessage(R.string.alert_revoke_integration_token_message).setNegativeButton(R.string.dialog_cancel,null).setPositiveButton(R.string.alert_revoke_integration_token_yes,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface d,int which){
  execute(messenger().revokeIntegrationToken(chatId),R.string.integration_token_action_revoke,new CommandCallback<String>(){
    @Override public void onResult(    String res){
      integrationToken=res;
      adapter.notifyDataSetChanged();
    }
    @Override public void onError(    Exception e){
      Toast.makeText(getActivity(),getString(R.string.integration_token_error_revoke_link),Toast.LENGTH_SHORT).show();
    }
  }
);
}
}
).show();
}
 else {
Toast.makeText(getActivity(),getString(R.string.integration_token_error_revoke_link_not_admin),Toast.LENGTH_LONG).show();
}
break;
case 4:
Intent i=new Intent(Intent.ACTION_SEND);
i.setType("text/plain");
i.putExtra(Intent.EXTRA_TEXT,integrationToken);
Intent chooser=Intent.createChooser(i,getString(R.string.integration_token_chooser_title));
if (i.resolveActivity(getActivity().getPackageManager()) != null) {
startActivity(chooser);
}
break;
}
}
}
}
);
View footer=inflater.inflate(R.layout.fragment_link_item_footer,listView,false);
listView.addFooterView(footer,null,false);
return res;
}

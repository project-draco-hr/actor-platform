{
  if (usersProcessor.process(update)) {
    return;
  }
  if (encryptedProcessor.process(update)) {
    return;
  }
  if (callsProcessor.process(update)) {
    return;
  }
  if (eventBusProcessor.process(update)) {
    return;
  }
  if (contactsProcessor.process(update)) {
    return;
  }
  if (update instanceof UpdateMessage) {
    UpdateMessage message=(UpdateMessage)update;
    messagesProcessor.onMessage(message.getPeer(),message.getSenderUid(),message.getDate(),message.getRid(),message.getMessage());
    typingProcessor.onMessage(message.getPeer(),message.getSenderUid());
  }
 else   if (update instanceof UpdateMessageRead) {
    UpdateMessageRead messageRead=(UpdateMessageRead)update;
    messagesProcessor.onMessageRead(messageRead.getPeer(),messageRead.getStartDate());
  }
 else   if (update instanceof UpdateMessageReadByMe) {
    UpdateMessageReadByMe messageReadByMe=(UpdateMessageReadByMe)update;
    messagesProcessor.onMessageReadByMe(messageReadByMe.getPeer(),messageReadByMe.getStartDate());
  }
 else   if (update instanceof UpdateMessageReceived) {
    UpdateMessageReceived received=(UpdateMessageReceived)update;
    messagesProcessor.onMessageReceived(received.getPeer(),received.getStartDate());
  }
 else   if (update instanceof UpdateMessageDelete) {
    UpdateMessageDelete messageDelete=(UpdateMessageDelete)update;
    messagesProcessor.onMessageDelete(messageDelete.getPeer(),messageDelete.getRids());
  }
 else   if (update instanceof UpdateMessageSent) {
    UpdateMessageSent messageSent=(UpdateMessageSent)update;
    messagesProcessor.onMessageSent(messageSent.getPeer(),messageSent.getRid(),messageSent.getDate());
  }
 else   if (update instanceof UpdateMessageContentChanged) {
    UpdateMessageContentChanged contentChanged=(UpdateMessageContentChanged)update;
    messagesProcessor.onMessageContentChanged(contentChanged.getPeer(),contentChanged.getRid(),contentChanged.getMessage());
  }
 else   if (update instanceof UpdateChatClear) {
    UpdateChatClear chatClear=(UpdateChatClear)update;
    messagesProcessor.onChatClear(chatClear.getPeer());
  }
 else   if (update instanceof UpdateChatDelete) {
    UpdateChatDelete chatDelete=(UpdateChatDelete)update;
    messagesProcessor.onChatDelete(chatDelete.getPeer());
  }
 else   if (update instanceof UpdateContactRegistered) {
    UpdateContactRegistered registered=(UpdateContactRegistered)update;
    if (!registered.isSilent()) {
      messagesProcessor.onUserRegistered(registered.getRid(),registered.getUid(),registered.getDate());
    }
  }
 else   if (update instanceof UpdateGroupTitleChanged) {
    UpdateGroupTitleChanged titleChanged=(UpdateGroupTitleChanged)update;
    groupsProcessor.onTitleChanged(titleChanged.getGroupId(),titleChanged.getRid(),titleChanged.getUid(),titleChanged.getTitle(),titleChanged.getDate(),false);
  }
 else   if (update instanceof UpdateGroupTopicChanged) {
    UpdateGroupTopicChanged topicChanged=(UpdateGroupTopicChanged)update;
    groupsProcessor.onTopicChanged(topicChanged.getGroupId(),topicChanged.getTopic());
  }
 else   if (update instanceof UpdateGroupAboutChanged) {
    UpdateGroupAboutChanged aboutChanged=(UpdateGroupAboutChanged)update;
    groupsProcessor.onAboutChanged(aboutChanged.getGroupId(),aboutChanged.getAbout());
  }
 else   if (update instanceof UpdateGroupAvatarChanged) {
    UpdateGroupAvatarChanged avatarChanged=(UpdateGroupAvatarChanged)update;
    groupsProcessor.onAvatarChanged(avatarChanged.getGroupId(),avatarChanged.getRid(),avatarChanged.getUid(),avatarChanged.getAvatar(),avatarChanged.getDate(),false);
  }
 else   if (update instanceof UpdateGroupInvite) {
    UpdateGroupInvite groupInvite=(UpdateGroupInvite)update;
    groupsProcessor.onGroupInvite(groupInvite.getGroupId(),groupInvite.getRid(),groupInvite.getInviteUid(),groupInvite.getDate(),false);
  }
 else   if (update instanceof UpdateGroupUserLeave) {
    UpdateGroupUserLeave leave=(UpdateGroupUserLeave)update;
    groupsProcessor.onUserLeave(leave.getGroupId(),leave.getRid(),leave.getUid(),leave.getDate(),false);
  }
 else   if (update instanceof UpdateGroupUserKick) {
    UpdateGroupUserKick userKick=(UpdateGroupUserKick)update;
    groupsProcessor.onUserKicked(userKick.getGroupId(),userKick.getRid(),userKick.getUid(),userKick.getKickerUid(),userKick.getDate(),false);
  }
 else   if (update instanceof UpdateGroupUserInvited) {
    UpdateGroupUserInvited userInvited=(UpdateGroupUserInvited)update;
    groupsProcessor.onUserAdded(userInvited.getGroupId(),userInvited.getRid(),userInvited.getUid(),userInvited.getInviterUid(),userInvited.getDate(),false);
  }
 else   if (update instanceof UpdateGroupMembersUpdate) {
    groupsProcessor.onMembersUpdated(((UpdateGroupMembersUpdate)update).getGroupId(),((UpdateGroupMembersUpdate)update).getMembers());
  }
 else   if (update instanceof UpdateParameterChanged) {
    settingsProcessor.onSettingsChanged(((UpdateParameterChanged)update).getKey(),((UpdateParameterChanged)update).getValue());
  }
 else   if (update instanceof UpdateCountersChanged) {
    messagesProcessor.onCountersChanged(((UpdateCountersChanged)update).getCounters());
  }
 else   if (update instanceof UpdateChatGroupsChanged) {
    messagesProcessor.onChatGroupsChanged(((UpdateChatGroupsChanged)update).getDialogs());
  }
 else   if (update instanceof UpdateReactionsUpdate) {
    messagesProcessor.onReactionsChanged(((UpdateReactionsUpdate)update).getPeer(),((UpdateReactionsUpdate)update).getRid(),((UpdateReactionsUpdate)update).getReactions());
  }
 else   if (update instanceof UpdateOwnStickersChanged) {
    stickersProcessor.onOwnStickerCollectionsChanged(((UpdateOwnStickersChanged)update).getCollections());
  }
 else   if (update instanceof UpdateStickerCollectionsChanged) {
    stickersProcessor.onStickerCollectionsChanged(((UpdateStickerCollectionsChanged)update).getCollections());
  }
}

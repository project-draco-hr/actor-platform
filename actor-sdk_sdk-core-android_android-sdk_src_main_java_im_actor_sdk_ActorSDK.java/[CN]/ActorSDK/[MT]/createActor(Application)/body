{
  this.application=application;
  ImagePipelineConfig config=ImagePipelineConfig.newBuilder(application).setDownsampleEnabled(true).build();
  Fresco.initialize(application,config);
  new SmileProcessor(application).loadEmoji();
  ActorSystem.system().addDispatcher("voice_capture_dispatcher",1);
  ConfigurationBuilder builder=new ConfigurationBuilder();
  for (  String s : endpoints) {
    builder.addEndpoint(s);
  }
  for (  String t : trustedKeys) {
    builder.addTrustedKey(t);
  }
  builder.setPhoneBookProvider(new AndroidPhoneBook());
  builder.setNotificationProvider(new AndroidNotifications(AndroidContext.getContext()));
  builder.setDeviceCategory(DeviceCategory.MOBILE);
  builder.setPlatformType(PlatformType.ANDROID);
  builder.setIsEnabledGroupedChatList(false);
  builder.setApiConfiguration(new ApiConfiguration(appName,apiAppId,apiAppKey,Devices.getDeviceName(),AndroidContext.getContext().getPackageName() + ":" + Build.SERIAL));
  Locale defaultLocale=Locale.getDefault();
  Log.d(TAG,"Found Locale: " + defaultLocale.getLanguage() + "-"+ defaultLocale.getCountry());
  Log.d(TAG,"Found Locale: " + defaultLocale.getLanguage());
  builder.addPreferredLanguage(defaultLocale.getLanguage() + "-" + defaultLocale.getCountry());
  builder.addPreferredLanguage(defaultLocale.getLanguage());
  String timeZone=TimeZone.getDefault().getID();
  Log.d(TAG,"Found TimeZone: " + timeZone);
  builder.setTimeZone(timeZone);
  if (customApplicationName != null) {
    builder.setCustomAppName(customApplicationName);
  }
  builder.setCallsProvider(new AndroidCallProvider());
  this.messenger=new AndroidMessenger(AndroidContext.getContext(),builder.build());
  if (isKeepAliveEnabled) {
    Intent keepAliveService=new Intent(application,KeepAliveService.class);
    PendingIntent pendingIntent=PendingIntent.getService(application,0,keepAliveService,0);
    AlarmManager alarm=(AlarmManager)application.getSystemService(Context.ALARM_SERVICE);
    alarm.setRepeating(AlarmManager.RTC,System.currentTimeMillis(),30 * 1000,pendingIntent);
  }
  try {
    if (pushId != 0) {
      final ActorPushManager pushManager=(ActorPushManager)Class.forName("im.actor.push.PushManager").newInstance();
      pushManager.registerPush(application);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

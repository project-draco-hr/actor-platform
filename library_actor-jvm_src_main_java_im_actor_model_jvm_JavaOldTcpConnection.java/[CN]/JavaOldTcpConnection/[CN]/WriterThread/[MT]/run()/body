{
  while (!isClosed && !isInterrupted()) {
    Package p;
synchronized (packages) {
      p=packages.poll();
      if (p == null) {
        try {
          packages.wait();
        }
 catch (        final InterruptedException e) {
          return;
        }
        p=packages.poll();
      }
    }
    if (p == null) {
      continue;
    }
    try {
      byte[] data=p.data;
      int length=data.length + 8;
      ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
      writeInt(length,outputStream);
      writeInt(sentPackets,outputStream);
      writeBytes(data,outputStream);
      crc32.reset();
      crc32.update(outputStream.toByteArray());
      writeInt((int)crc32.getValue(),outputStream);
      socket.getOutputStream().write(outputStream.toByteArray());
      socket.getOutputStream().flush();
      sentPackets++;
    }
 catch (    final Exception e) {
      Log.e(TAG,e);
      breakConnection();
    }
  }
}

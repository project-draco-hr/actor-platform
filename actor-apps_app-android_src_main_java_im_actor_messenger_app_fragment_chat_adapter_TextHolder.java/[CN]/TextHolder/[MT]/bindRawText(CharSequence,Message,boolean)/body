{
  if (message.getSenderId() == myUid()) {
    messageBubble.setBackgroundResource(R.drawable.bubble_text_out);
  }
 else {
    messageBubble.setBackgroundResource(R.drawable.bubble_text_in);
  }
  if (isItalic) {
    text.setTypeface(Fonts.italic());
  }
 else {
    text.setTypeface(Fonts.regular());
  }
  text.setText(rawText);
  text.setMovementMethod(new CustomLinkMovementMethod());
  if (rawText instanceof Spannable) {
    Spannable s=(Spannable)rawText;
    QuoteSpan[] qSpans=s.getSpans(0,s.length(),QuoteSpan.class);
    text.setMinimumWidth(0);
    if (qSpans.length > 0) {
      text.measure(0,0);
      text.setMinimumWidth(text.getMeasuredWidth() + qSpans[0].getLeadingMargin(true));
    }
  }
  if (message.getSenderId() == myUid()) {
    status.setVisibility(View.VISIBLE);
switch (message.getMessageState()) {
case SENT:
      status.setResource(R.drawable.msg_check_1);
    status.setTint(sentColor);
  break;
case RECEIVED:
status.setResource(R.drawable.msg_check_2);
status.setTint(deliveredColor);
break;
case READ:
status.setResource(R.drawable.msg_check_2);
status.setTint(readColor);
break;
default :
case PENDING:
status.setResource(R.drawable.msg_clock);
status.setTint(waitColor);
break;
case ERROR:
status.setResource(R.drawable.msg_error);
status.setTint(errorColor);
break;
}
}
 else {
status.setVisibility(View.GONE);
}
time.setText(TextUtils.formatTime(message.getDate()));
}

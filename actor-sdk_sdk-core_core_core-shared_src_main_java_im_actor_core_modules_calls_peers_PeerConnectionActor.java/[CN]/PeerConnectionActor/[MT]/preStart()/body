{
  isReady=false;
  WebRTCIceServer[] iceServers=config().getWebRTCIceServers();
  WebRTCSettings settings=new WebRTCSettings(false,false);
  WebRTC.createPeerConnection(iceServers,settings).then(new Consumer<WebRTCPeerConnection>(){
    @Override public void apply(    WebRTCPeerConnection webRTCPeerConnection){
      PeerConnectionActor.this.peerConnection=webRTCPeerConnection;
      PeerConnectionActor.this.peerConnection.addOwnStream(stream);
      PeerConnectionActor.this.peerConnection.addCallback(new WebRTCPeerConnectionCallback(){
        @Override public void onCandidate(        int label,        String id,        String candidate){
          callback.onCandidate(label,id,candidate);
        }
        @Override public void onStreamAdded(        WebRTCMediaStream stream){
          stream.setEnabled(false);
          callback.onStreamAdded(stream);
        }
        @Override public void onStreamRemoved(        WebRTCMediaStream stream){
          callback.onStreamRemoved(stream);
        }
        @Override public void onRenegotiationNeeded(){
        }
      }
);
      state=PeerConnectionState.WAITING_HANDSHAKE;
      isReady=true;
      unstashAll();
    }
  }
).failure(new Consumer<Exception>(){
    @Override public void apply(    Exception e){
      Log.d(TAG,"preStart:error");
      e.printStackTrace();
      onHandshakeFailure();
    }
  }
).done(self());
}

{
  pickSession(uid,keyGroupId,ownKeyId,theirKeyId).then(new Consumer<PeerSession>(){
    @Override public void apply(    PeerSession session){
      srcResolver.result(new PickSessionResp(session));
    }
  }
).failure(new Consumer<Exception>(){
    @Override public void apply(    Exception e){
      keyManager.getOwnGroup().then(new Consumer<KeyManagerActor.FetchOwnKeyGroupResult>(){
        @Override public void apply(        KeyManagerActor.FetchOwnKeyGroupResult fetchOwnKeyGroupResult){
          spawnSession(uid,fetchOwnKeyGroupResult.getKeyGroupId(),keyGroupId,ownKeyId,theirKeyId);
          pickSession(uid,keyGroupId,keyGroupId,theirKeyId).map(new Function<PeerSession,PickSessionResp>(){
            @Override public PickSessionResp apply(            PeerSession session){
              return new PickSessionResp(session);
            }
          }
).pipeTo(srcResolver).done(self());
        }
      }
).failure(new Consumer<Exception>(){
        @Override public void apply(        Exception e){
          srcResolver.tryError(e);
        }
      }
).done(self());
    }
  }
).done(self());
}

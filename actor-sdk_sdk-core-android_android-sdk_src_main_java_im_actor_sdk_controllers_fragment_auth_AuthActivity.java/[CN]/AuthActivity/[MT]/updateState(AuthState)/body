{
  if (this.state != null && this.state == state) {
    return;
  }
  this.state=state;
switch (state) {
case AUTH_START:
    signFragment=ActorSDK.sharedActor().getDelegate().getSignFragment();
  if (signFragment instanceof SignEmailFragment) {
    authType=AUTH_TYPE_EMAIL;
  }
 else   if (signFragment instanceof SignPhoneFragment) {
    authType=AUTH_TYPE_PHONE;
  }
 else {
    authType=AUTH_TYPE_CUSTOM;
  }
showFragment(signFragment,false,false);
break;
case AUTH_EMAIL:
signFragment=new SignEmailFragment();
showFragment(signFragment,false,false);
authType=AUTH_TYPE_EMAIL;
break;
case AUTH_PHONE:
signFragment=new SignPhoneFragment();
showFragment(signFragment,false,false);
authType=AUTH_TYPE_PHONE;
break;
case CODE_VALIDATION_CUSTOM:
case CODE_VALIDATION_PHONE:
case CODE_VALIDATION_EMAIL:
if ((state == AuthState.CODE_VALIDATION_EMAIL && authType == AUTH_TYPE_PHONE) || (state == AuthState.CODE_VALIDATION_PHONE && authType == AUTH_TYPE_EMAIL)) {
updateState(AuthState.AUTH_START);
break;
}
Fragment signInFragment=new SignInFragment();
Bundle args=new Bundle();
args.putString("authType",state == AuthState.CODE_VALIDATION_EMAIL ? SignInFragment.AUTH_TYPE_EMAIL : SignInFragment.AUTH_TYPE_PHONE);
if (state == AuthState.CODE_VALIDATION_CUSTOM) {
args.putString("authType",SignInFragment.AUTH_TYPE_CUSTOM);
args.putString("authId",signFragment.getAuthId());
args.putString("authHint",signFragment.getHintText());
}
signInFragment.setArguments(args);
showFragment(signInFragment,false,false);
break;
case SIGN_UP:
showFragment(new SignUpFragment(),false,false);
break;
case LOGGED_IN:
finish();
startActivity(new Intent(this,ActorMainActivity.class));
break;
}
}

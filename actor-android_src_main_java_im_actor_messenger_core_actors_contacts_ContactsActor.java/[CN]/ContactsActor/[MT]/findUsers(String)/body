{
  final TypedFuture<UserModel[]> res=future();
  ask(requests().searchContacts(query),new FutureCallback<ResponseSearchContacts>(){
    @Override public void onResult(    final ResponseSearchContacts result){
      if (result.getUsers().size() == 0) {
        res.doComplete(new UserModel[0]);
        return;
      }
      ask(userActor().onUpdateUsers(result.getUsers()),new FutureCallback<Boolean>(){
        @Override public void onResult(        Boolean result2){
          UserModel[] users=new UserModel[result.getUsers().size()];
          for (int i=0; i < users.length; i++) {
            users[i]=users().get(result.getUsers().get(i).getId());
          }
          res.doComplete(users);
        }
        @Override public void onError(        Throwable throwable){
          throwable.printStackTrace();
          res.doComplete(new UserModel[0]);
        }
      }
);
    }
    @Override public void onError(    Throwable throwable){
      throwable.printStackTrace();
      res.doComplete(new UserModel[0]);
    }
  }
);
  return res;
}

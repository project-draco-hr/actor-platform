{
  if (isInvalidated) {
    return;
  }
  isInvalidated=true;
  if (updateState.getState().getSeq() < 0) {
    Logger.w(TAG,TAG_PREFIX + "Loading initial sequence state");
    ask(requests().getState(),new FutureCallback<ResponseSeq>(){
      @Override public void onResult(      ResponseSeq result){
        if (!isInvalidated) {
          return;
        }
        Logger.w(TAG,TAG_PREFIX + "State received {seq:" + result.getSeq()+ "}");
        updateState.setState(result.getSeq(),result.getState());
        validated();
      }
      @Override public void onError(      Throwable throwable){
        if (!isInvalidated) {
          return;
        }
        Logger.w(TAG,TAG_PREFIX + "State load error: trying again");
        reinvalidate();
      }
    }
);
  }
 else {
    Logger.w(TAG,TAG_PREFIX + "Performing get difference {seq:" + updateState.getState().getSeq()+ "}");
    ask(requests().getDifference(updateState.getState().getSeq(),updateState.getState().getState()),new FutureCallback<ResponseGetDifference>(){
      @Override public void onResult(      ResponseGetDifference result){
        if (!isInvalidated) {
          return;
        }
        Logger.w(TAG,TAG_PREFIX + "Diff received");
        onDifference(result);
        if (result.needMore()) {
          reinvalidate();
        }
 else {
          validated();
        }
      }
      @Override public void onError(      Throwable throwable){
        if (!isInvalidated) {
          return;
        }
        Logger.w(TAG,TAG_PREFIX + "Diff load error: trying again");
        reinvalidate();
      }
    }
);
  }
}

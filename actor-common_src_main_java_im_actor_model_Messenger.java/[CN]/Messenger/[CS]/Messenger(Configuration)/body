{
  Log.setLog(configuration.getLog());
  long start=configuration.getThreading().getActorTime();
  Environment.setThreading(configuration.getThreading());
  Log.d(TAG,"Loading stage1 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
  CryptoUtils.init(configuration.getCryptoProvider());
  Log.d(TAG,"Loading stage2 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
  MVVMEngine.init(configuration.getMainThread());
  Log.d(TAG,"Loading stage3 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
  ActorSystem.system().setTraceInterface(new TraceInterface(){
    @Override public void onEnvelopeDelivered(    Envelope envelope){
    }
    @Override public void onEnvelopeProcessed(    Envelope envelope,    long duration){
      if (duration > 300) {
        Log.w("ACTOR_SYSTEM","Too long " + envelope.getScope().getPath() + " {"+ envelope.getMessage()+ "}");
      }
    }
    @Override public void onDrop(    ActorRef sender,    Object message,    Actor actor){
      Log.w("ACTOR_SYSTEM","Drop: " + message);
    }
    @Override public void onDeadLetter(    ActorRef receiver,    Object message){
      Log.w("ACTOR_SYSTEM","Dead Letter: " + message);
    }
    @Override public void onActorDie(    ActorRef ref,    Exception e){
      Log.w("ACTOR_SYSTEM","Die: " + e);
      e.printStackTrace();
    }
  }
);
  ActorSystem.system().addDispatcher("db",1);
  Log.d(TAG,"Loading stage4 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
  this.modules=new Modules(configuration);
  Log.d(TAG,"Loading stage5 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
  this.modules.run();
  Log.d(TAG,"Loading stage6 in " + (configuration.getThreading().getActorTime() - start) + " ms");
  start=configuration.getThreading().getActorTime();
}

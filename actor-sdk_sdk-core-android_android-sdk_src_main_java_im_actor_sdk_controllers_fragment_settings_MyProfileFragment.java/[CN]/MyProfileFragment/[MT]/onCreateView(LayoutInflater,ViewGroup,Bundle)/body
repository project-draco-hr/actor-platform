{
  View view=inflater.inflate(R.layout.fragment_settings,container,false);
  baseColor=getResources().getColor(R.color.primary);
  final ActorStyle style=ActorSDK.sharedActor().style;
  final UserVM userModel=users().get(myUid());
  final TextView nameView=(TextView)view.findViewById(R.id.name);
  nameView.setShadowLayer(1,1,1,style.getDividerColor());
  nameView.setTextColor(style.getProfileTitleColor());
  bind(nameView,userModel.getName());
  view.findViewById(R.id.notifications).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),NotificationsActivity.class));
    }
  }
);
  view.findViewById(R.id.helpSettings).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),HelpActivity.class));
    }
  }
);
  final LinearLayout nickContainer=(LinearLayout)view.findViewById(R.id.nickContainer);
  final LinearLayout contactsContainer=(LinearLayout)view.findViewById(R.id.phoneContainer);
  final FrameLayout about=(FrameLayout)view.findViewById(R.id.about);
  bind(userModel.getNick(),new ValueChangedListener<String>(){
    @Override public void onChanged(    final String val,    Value<String> Value){
      final View recordView=inflater.inflate(R.layout.contact_record,nickContainer,false);
      recordView.findViewById(R.id.divider).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
      TintImageView tintImageView=(TintImageView)recordView.findViewById(R.id.recordIcon);
      tintImageView.setVisibility(View.INVISIBLE);
      String value=(val != null && !val.isEmpty()) ? val : getString(R.string.nickname_empty);
      String title=getString(R.string.nickname);
      TextView nickValue=(TextView)recordView.findViewById(R.id.value);
      nickValue.setText(value);
      nickValue.setTextColor(style.getTextPrimaryColor());
      TextView nickTitle=(TextView)recordView.findViewById(R.id.title);
      nickTitle.setText(title);
      nickTitle.setTextColor(style.getTextSecondaryColor());
      nickContainer.removeAllViews();
      nickContainer.addView(recordView,new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,Screen.dp(72)));
      recordView.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View v){
          getActivity().startActivity(Intents.editUserNick(getActivity()));
        }
      }
);
    }
  }
);
  TextView aboutTitle=(TextView)about.findViewById(R.id.title);
  aboutTitle.setTextColor(style.getTextSecondaryColor());
  aboutTitle.setVisibility(View.GONE);
  about.findViewById(R.id.recordIcon).setVisibility(View.INVISIBLE);
  TextView aboutValue=(TextView)about.findViewById(R.id.value);
  aboutValue.setTextColor(style.getTextPrimaryColor());
  aboutValue.setText(getString(R.string.about_user_me));
  about.findViewById(R.id.divider).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  about.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      getActivity().startActivity(Intents.editUserAbout(getActivity()));
    }
  }
);
  bind(userModel.getPhones(),new ValueChangedListener<ArrayListUserPhone>(){
    @Override public void onChanged(    ArrayListUserPhone val,    Value<ArrayListUserPhone> Value){
      if (val.size() == 0) {
        contactsContainer.setVisibility(View.GONE);
      }
 else {
        contactsContainer.setVisibility(View.VISIBLE);
        for (int i=0; i < val.size(); i++) {
          final UserPhone record=val.get(i);
          View recordView=inflater.inflate(R.layout.contact_record,contactsContainer,false);
          TintImageView tintImageView=(TintImageView)recordView.findViewById(R.id.recordIcon);
          tintImageView.setTint(ActorSDK.sharedActor().style.getSettingsCategoryTextColor());
          if (i == 0) {
            tintImageView.setResource(R.drawable.ic_call_white_36dp);
            tintImageView.setVisibility(View.VISIBLE);
          }
 else {
            tintImageView.setVisibility(View.INVISIBLE);
          }
          View divider=recordView.findViewById(R.id.divider);
          if (i != val.size() - 1) {
            divider.setVisibility(View.VISIBLE);
          }
 else {
            divider.setVisibility(View.GONE);
          }
          divider.setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
          String _phoneNumber;
          try {
            Phonenumber.PhoneNumber number=PhoneNumberUtil.getInstance().parse("+" + record.getPhone(),"us");
            _phoneNumber=PhoneNumberUtil.getInstance().format(number,PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
          }
 catch (          NumberParseException e) {
            e.printStackTrace();
            _phoneNumber="+" + record.getPhone();
          }
          final String phoneNumber=_phoneNumber;
          TextView value=(TextView)recordView.findViewById(R.id.value);
          value.setTextColor(style.getTextPrimaryColor());
          value.setText(phoneNumber);
          TextView title=(TextView)recordView.findViewById(R.id.title);
          title.setTextColor(style.getTextSecondaryColor());
          title.setText(record.getTitle());
          contactsContainer.addView(recordView,new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,Screen.dp(72)));
          recordView.setOnClickListener(new View.OnClickListener(){
            @Override public void onClick(            View v){
              new AlertDialog.Builder(getActivity()).setItems(new CharSequence[]{getString(R.string.phone_menu_call).replace("{0}",phoneNumber),getString(R.string.phone_menu_sms).replace("{0}",phoneNumber),getString(R.string.phone_menu_share).replace("{0}",phoneNumber),getString(R.string.phone_menu_copy)},new DialogInterface.OnClickListener(){
                @Override public void onClick(                DialogInterface dialog,                int which){
                  if (which == 0) {
                    startActivity(new Intent(Intent.ACTION_DIAL).setData(Uri.parse("tel:+" + record.getPhone())));
                  }
 else                   if (which == 1) {
                    startActivity(new Intent(Intent.ACTION_VIEW).setData(Uri.parse("sms:+" + record.getPhone())));
                  }
 else                   if (which == 2) {
                    startActivity(new Intent(Intent.ACTION_SEND).setType("text/plain").putExtra(Intent.EXTRA_TEXT,getString(R.string.settings_share_text).replace("{0}",phoneNumber).replace("{1}",userModel.getName().get())));
                  }
 else                   if (which == 3) {
                    ClipboardManager clipboard=(ClipboardManager)getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                    ClipData clip=ClipData.newPlainText("Phone number",phoneNumber);
                    clipboard.setPrimaryClip(clip);
                    Toast.makeText(getActivity(),R.string.toast_phone_copied,Toast.LENGTH_SHORT).show();
                  }
                }
              }
).show().setCanceledOnTouchOutside(true);
            }
          }
);
          recordView.setOnLongClickListener(new View.OnLongClickListener(){
            @Override public boolean onLongClick(            View v){
              ClipboardManager clipboard=(ClipboardManager)getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
              ClipData clip=ClipData.newPlainText("Phone number","+" + record.getPhone());
              clipboard.setPrimaryClip(clip);
              Toast.makeText(getActivity(),R.string.toast_phone_copied,Toast.LENGTH_SHORT).show();
              return true;
            }
          }
);
        }
      }
    }
  }
);
  view.findViewById(R.id.chatSettings).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),ChatSettingsActivity.class));
    }
  }
);
  view.findViewById(R.id.encryption).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),SecuritySettingsActivity.class));
    }
  }
);
  view.findViewById(R.id.askQuestion).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      execute(messenger().findUsers("75551234567"),R.string.progress_common,new CommandCallback<UserVM[]>(){
        @Override public void onResult(        UserVM[] res){
          if (res.length >= 1) {
            startActivity(Intents.openPrivateDialog(res[0].getId(),true,getActivity()));
          }
        }
        @Override public void onError(        Exception e){
        }
      }
);
    }
  }
);
  TextView settingsHeaderText=(TextView)view.findViewById(R.id.settings_header_text);
  settingsHeaderText.setTextColor(ActorSDK.sharedActor().style.getSettingsCategoryTextColor());
  TextView settingsNotificationsTitle=(TextView)view.findViewById(R.id.settings_notifications_title);
  settingsNotificationsTitle.setTextColor(ActorSDK.sharedActor().style.getSettingsTitleColor());
  TextView settingsChatTitle=(TextView)view.findViewById(R.id.settings_chat_title);
  settingsChatTitle.setTextColor(ActorSDK.sharedActor().style.getSettingsTitleColor());
  TextView securityTitle=(TextView)view.findViewById(R.id.settings_security_title);
  securityTitle.setTextColor(ActorSDK.sharedActor().style.getSettingsTitleColor());
  TintImageView securityIcon=(TintImageView)view.findViewById(R.id.settings_security_icon);
  securityIcon.setTint(style.getSettingsIconColor());
  TextView helpTitle=(TextView)view.findViewById(R.id.settings_help_title);
  helpTitle.setTextColor(ActorSDK.sharedActor().style.getSettingsTitleColor());
  TintImageView helpIcon=(TintImageView)view.findViewById(R.id.settings_help_icon);
  helpIcon.setTint(style.getSettingsIconColor());
  TextView askTitle=(TextView)view.findViewById(R.id.settings_ask_title);
  askTitle.setTextColor(ActorSDK.sharedActor().style.getSettingsTitleColor());
  TintImageView askIcon=(TintImageView)view.findViewById(R.id.settings_ask_icon);
  askIcon.setTint(style.getSettingsIconColor());
  TintImageView notificationsSettingsIcon=(TintImageView)view.findViewById(R.id.settings_notification_icon);
  notificationsSettingsIcon.setTint(style.getSettingsIconColor());
  TintImageView chatSettingsIcon=(TintImageView)view.findViewById(R.id.settings_chat_icon);
  chatSettingsIcon.setTint(style.getSettingsIconColor());
  view.findViewById(R.id.after_phone_divider).setBackgroundColor(ActorSDK.sharedActor().style.getBackyardBackgroundColor());
  view.findViewById(R.id.bottom_divider).setBackgroundColor(ActorSDK.sharedActor().style.getBackyardBackgroundColor());
  view.findViewById(R.id.divider1).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  view.findViewById(R.id.divider2).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  view.findViewById(R.id.divider3).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  view.findViewById(R.id.divider4).setBackgroundColor(ActorSDK.sharedActor().style.getDividerColor());
  if (getBeforeNickSettingsView(getActivity()) != null) {
    FrameLayout beforeNick=(FrameLayout)view.findViewById(R.id.before_nick_container);
    beforeNick.addView(getBeforeNickSettingsView(getActivity()),FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT);
  }
  if (getBeforeNickSettingsView(getActivity()) != null) {
    FrameLayout afterPhone=(FrameLayout)view.findViewById(R.id.after_phone_container);
    afterPhone.addView(getAfterPhoneSettingsView(getActivity()),FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT);
  }
  if (getSettingsTopView(getActivity()) != null) {
    FrameLayout settingsTop=(FrameLayout)view.findViewById(R.id.settings_top_container);
    settingsTop.addView(getSettingsTopView(getActivity()),FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT);
  }
  if (getSettingsBottomView(getActivity()) != null) {
    FrameLayout settingsBot=(FrameLayout)view.findViewById(R.id.settings_bottom_container);
    settingsBot.addView(getSettingsBottomView(getActivity()),FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT);
  }
  if (getBeforeSettingsCategories() != null) {
    LinearLayout beforeSettings=(LinearLayout)view.findViewById(R.id.before_settings_container);
    addCategories(beforeSettings,getBeforeSettingsCategories(),inflater);
  }
  if (getAfterSettingsCategories() != null) {
    LinearLayout afterSettings=(LinearLayout)view.findViewById(R.id.after_settings_container);
    addCategories(afterSettings,getAfterSettingsCategories(),inflater);
  }
  avatarView=(CoverAvatarView)view.findViewById(R.id.avatar);
  ImageView avatarBkgrnd=(ImageView)view.findViewById(R.id.avatar_bgrnd);
  avatarBkgrnd.setBackgroundColor(ActorSDK.sharedActor().style.getAvatarBackgroundColor());
  avatarView.setBkgrnd(avatarBkgrnd);
  bind(avatarView,users().get(myUid()).getAvatar());
  view.findViewById(R.id.avatar).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(ViewAvatarActivity.viewAvatar(myUid(),getActivity()));
    }
  }
);
  final ScrollView scrollView=((ScrollView)view.findViewById(R.id.scrollContainer));
  scrollView.setBackgroundColor(ActorSDK.sharedActor().style.getMainBackgroundColor());
  scrollView.getViewTreeObserver().addOnScrollChangedListener(new ViewTreeObserver.OnScrollChangedListener(){
    @Override public void onScrollChanged(){
      updateActionBar(scrollView.getScrollY());
    }
  }
);
  updateActionBar(scrollView.getScrollY());
  return view;
}

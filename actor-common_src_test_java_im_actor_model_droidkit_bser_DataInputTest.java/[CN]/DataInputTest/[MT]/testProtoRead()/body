{
  try {
    DataInput dataInput=new DataInput(new byte[]{(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,0});
    dataInput.readProtoBytes();
    throw new AssertionError();
  }
 catch (  Exception e) {
  }
  try {
    DataInput dataInput=new DataInput(new byte[]{(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,0});
    dataInput.readProtoBytes();
    throw new AssertionError();
  }
 catch (  Exception e) {
  }
{
    DataInput dataInput=new DataInput(new byte[]{(byte)1,(byte)0xFF});
    dataInput.readProtoBytes();
  }
  try {
    DataInput dataInput=new DataInput(new byte[]{(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,0});
    dataInput.readProtoLongs();
    throw new AssertionError();
  }
 catch (  Exception e) {
  }
  try {
    DataInput dataInput=new DataInput(new byte[]{(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,0});
    dataInput.readProtoLongs();
    throw new AssertionError();
  }
 catch (  Exception e) {
  }
{
    DataInput dataInput=new DataInput(new byte[]{(byte)1,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF});
    dataInput.readProtoLongs();
  }
{
    DataInput dataInput=new DataInput(new byte[]{(byte)1});
    assertTrue(dataInput.readProtoBool());
  }
{
    DataInput dataInput=new DataInput(new byte[]{(byte)0});
    assertFalse(dataInput.readProtoBool());
  }
{
    String str="asda sdasasd";
    DataInput dataInput=new DataInput(concat(new byte[]{(byte)str.length()},str.getBytes("ASCII")));
    assertEquals(str,dataInput.readProtoString());
  }
}

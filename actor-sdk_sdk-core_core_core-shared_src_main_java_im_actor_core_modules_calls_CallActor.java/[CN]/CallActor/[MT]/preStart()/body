{
  super.preStart();
  if (isMaster) {
    api(new RequestDoCall(buidOutPeer(peer))).then(new Consumer<ResponseDoCall>(){
      @Override public void apply(      ResponseDoCall responseDoCall){
        callId=responseDoCall.getCallId();
        callBus.joinBus(responseDoCall.getEventBusId());
        callBus.startOwn();
        callVM=callViewModels.spawnNewOutgoingVM(responseDoCall.getCallId(),peer);
      }
    }
).failure(new Consumer<Exception>(){
      @Override public void apply(      Exception e){
        self().send(PoisonPill.INSTANCE);
      }
    }
).done(self());
  }
 else {
    api(new RequestGetCallInfo(callId)).then(new Consumer<ResponseGetCallInfo>(){
      @Override public void apply(      final ResponseGetCallInfo responseGetCallInfo){
        peer=convert(responseGetCallInfo.getPeer());
        callBus.joinBus(responseGetCallInfo.getEventBusId());
        callVM=callViewModels.spawnNewIncomingVM(callId,peer,CallState.RINGING);
      }
    }
).failure(new Consumer<Exception>(){
      @Override public void apply(      Exception e){
        self().send(PoisonPill.INSTANCE);
      }
    }
).done(self());
  }
}

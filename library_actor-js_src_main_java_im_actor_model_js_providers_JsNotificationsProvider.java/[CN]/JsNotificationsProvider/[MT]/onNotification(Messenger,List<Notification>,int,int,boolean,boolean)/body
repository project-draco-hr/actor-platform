{
  if (silentUpdate) {
    return;
  }
  String peerTitle=null;
  String peerAvatarUrl=null;
  String contentMessage="";
  Notification notification=topNotifications.get(0);
  if (conversationsCount == 1) {
    Avatar peerAvatar=null;
    if (notification.getPeer().getPeerType() == PeerType.PRIVATE) {
      UserVM userVM=messenger.getUsers().get(notification.getPeer().getPeerId());
      peerTitle=userVM.getName().get();
      peerAvatar=userVM.getAvatar().get();
    }
 else {
      GroupVM groupVM=messenger.getGroups().get(notification.getPeer().getPeerId());
      peerTitle=groupVM.getName().get();
      peerAvatar=groupVM.getAvatar().get();
    }
    if (peerAvatar != null && peerAvatar.getSmallImage() != null) {
      peerAvatarUrl=((JsMessenger)messenger).getFileUrl(peerAvatar.getSmallImage().getFileReference());
    }
  }
 else {
    peerTitle="New messages";
    peerAvatarUrl="assets/img/notification_icon_512.png";
  }
  if (conversationsCount == 1) {
    int nCount=Math.min(topNotifications.size(),5);
    boolean showCounters=false;
    if (topNotifications.size() > 5) {
      nCount--;
      showCounters=true;
    }
    for (int i=0; i < nCount; i++) {
      Notification n=topNotifications.get(i);
      if (contentMessage.length() > 0) {
        contentMessage+="\n";
      }
      if (notification.getPeer().getPeerType() == PeerType.GROUP) {
        contentMessage+=messenger.getUsers().get(notification.getSender()).getName().get() + ": ";
      }
      contentMessage+=messenger.getFormatter().formatContentDialogText(n.getSender(),n.getContentDescription().getContentType(),n.getContentDescription().getText(),n.getContentDescription().getRelatedUser());
    }
    if (showCounters) {
      contentMessage+="+" + (messagesCount - 4) + " new messages";
    }
  }
 else {
    contentMessage="\n" + messagesCount + " new messages from "+ conversationsCount+ " conversations";
  }
  if (currentNotification != null) {
    currentNotification.close();
    currentNotification=null;
  }
  if (!JsNotification.isSupported()) {
    return;
  }
  if (!JsNotification.isGranted()) {
    return;
  }
  currentNotification=JsNotification.create(peerTitle,contentMessage,peerAvatarUrl);
  playSound();
}

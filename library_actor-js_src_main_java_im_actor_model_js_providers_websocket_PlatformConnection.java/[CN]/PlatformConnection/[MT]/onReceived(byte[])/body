{
  if (isClosed) {
    return;
  }
  if (!isHandshakePerformed) {
    Log.d(TAG,"Reading handshake response");
    try {
      DataInput handshakeResponse=new DataInput(data);
      int protoVersion=handshakeResponse.readByte();
      int apiMajor=handshakeResponse.readByte();
      int apiMinor=handshakeResponse.readByte();
      byte[] sha256=handshakeResponse.readBytes(32);
      byte[] localSha256=CryptoUtils.SHA256(handshakeRandomData);
      if (!Arrays.equals(sha256,localSha256)) {
        throw new IOException("SHA 256 is incorrect");
      }
      if (protoVersion != 1) {
        throw new IOException("Incorrect Proto Version, expected: 1, got " + protoVersion + ";");
      }
      if (apiMajor != 1) {
        throw new IOException("Incorrect Api Major Version, expected: 1, got " + apiMajor + ";");
      }
      if (apiMinor != 0) {
        throw new IOException("Incorrect Api Minor Version, expected: 0, got " + apiMinor + ";");
      }
      Log.d(TAG,"Handshake successful");
      isHandshakePerformed=true;
      factoryCallback.onConnectionCreated(this);
    }
 catch (    Exception e) {
      e.printStackTrace();
      close();
    }
  }
 else {
    Log.d(TAG,"Reading full package");
  }
}

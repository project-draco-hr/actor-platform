{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode == Activity.RESULT_OK) {
    if (requestCode == REQUEST_GALLERY) {
      if (data.getData() != null) {
        getCallback().onUriPicked(data.getData());
      }
    }
 else     if (requestCode == REQUEST_PHOTO) {
      if (pendingFile != null) {
        getCallback().onPhotoPicked(pendingFile);
        Context context=getContext();
        if (context != null) {
          MediaScannerConnection.scanFile(context,new String[]{pendingFile},new String[]{"image/jpeg"},null);
        }
        pendingFile=null;
      }
    }
 else     if (requestCode == REQUEST_VIDEO) {
      if (pendingFile != null) {
        getCallback().onVideoPicked(pendingFile);
        Context context=getContext();
        if (context != null) {
          MediaScannerConnection.scanFile(context,new String[]{pendingFile},new String[]{"video/mp4"},null);
        }
        pendingFile=null;
      }
    }
 else     if (requestCode == REQUEST_DOC) {
      if (data.getData() != null) {
        getCallback().onUriPicked(data.getData());
      }
 else       if (data.hasExtra("picked")) {
        ArrayList<String> files=data.getStringArrayListExtra("picked");
        if (files != null && files.size() > 0) {
          getCallback().onFilesPicked(files);
        }
      }
    }
 else     if (requestCode == REQUEST_CONTACT) {
      Activity activity=getActivity();
      if (activity == null) {
        return;
      }
      ArrayList<String> phones=new ArrayList<>();
      ArrayList<String> emails=new ArrayList<>();
      String name="";
      byte[] photo=null;
      Uri contactData=data.getData();
      Cursor c=activity.managedQuery(contactData,null,null,null,null);
      if (c.moveToFirst()) {
        String id=c.getString(c.getColumnIndexOrThrow(ContactsContract.Contacts._ID));
        String hasPhone=c.getString(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
        if (hasPhone.equalsIgnoreCase("1")) {
          Cursor phonesCursor=activity.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,null,ContactsContract.CommonDataKinds.Phone.CONTACT_ID + " = " + id,null,null);
          if (phonesCursor != null) {
            try {
              if (phonesCursor.moveToFirst()) {
                int phoneColumnIndex=phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DATA);
                do {
                  phones.add(phonesCursor.getString(phoneColumnIndex));
                }
 while (phonesCursor.moveToNext());
              }
            }
  finally {
              phonesCursor.close();
            }
          }
        }
        name=c.getString(c.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
        Cursor emailCursor=activity.getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,null,ContactsContract.CommonDataKinds.Email.CONTACT_ID + " = " + id,null,null);
        if (emailCursor != null && emailCursor.moveToFirst()) {
          int emailColumnIndex=emailCursor.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA);
          do {
            emails.add(emailCursor.getString(emailColumnIndex));
          }
 while (emailCursor.moveToNext());
          emailCursor.close();
        }
        Uri photoUri=Uri.withAppendedPath(contactData,ContactsContract.Contacts.Photo.CONTENT_DIRECTORY);
        Cursor photoCursor=activity.getContentResolver().query(photoUri,new String[]{ContactsContract.Contacts.Photo.PHOTO},null,null,null);
        if (photoCursor != null) {
          try {
            if (photoCursor.moveToFirst()) {
              photo=photoCursor.getBlob(0);
            }
          }
  finally {
            photoCursor.close();
          }
        }
      }
      getCallback().onContactPicked(name,phones,emails,photo);
    }
 else     if (requestCode == REQUEST_LOCATION) {
      getCallback().onLocationPicked(data.getDoubleExtra("longitude",0),data.getDoubleExtra("latitude",0),data.getStringExtra("street"),data.getStringExtra("place"));
    }
  }
}

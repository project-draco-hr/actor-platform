{
  super.onDraw(canvas);
  if (isInEditMode() || tabCount == 0) {
    return;
  }
  final int height=getHeight();
  rectPaint.setColor(indicatorColor);
  View currentTab=tabsContainer.getChildAt(currentPosition);
  float lineLeft=currentTab.getLeft() + indicatorPadding;
  float lineRight=currentTab.getRight() - indicatorPadding;
  int currentTabColor;
  int nextTabColor;
  if (currentPositionOffset > 0f && currentPosition < tabCount - 1) {
    View nextTab=tabsContainer.getChildAt(currentPosition + 1);
    final float nextTabLeft=nextTab.getLeft() + indicatorPadding;
    final float nextTabRight=nextTab.getRight() - indicatorPadding;
    lineLeft=(currentPositionOffset * nextTabLeft + (1f - currentPositionOffset) * lineLeft);
    lineRight=(currentPositionOffset * nextTabRight + (1f - currentPositionOffset) * lineRight);
    currentTabColor=blendColors(tabTextColor,0x00202020,currentPositionOffset,false);
    nextTabColor=blendColors(tabTextColor,0x00202020,currentPositionOffset,true);
    if (currentTab instanceof TextView) {
      ((TextView)currentTab).setTextColor(currentTabColor);
    }
    if (nextTab instanceof TextView) {
      ((TextView)nextTab).setTextColor(nextTabColor);
    }
  }
 else {
    for (int i=0; i < tabCount; i++) {
      if (tabsContainer.getChildAt(i) instanceof TextView) {
        if (i == currentPosition) {
          ((TextView)tabsContainer.getChildAt(i)).setTextColor(blendColors(tabTextColor,0x00202020,currentPositionOffset,false));
        }
 else {
          ((TextView)tabsContainer.getChildAt(i)).setTextColor(blendColors(tabTextColor,0x00202020,currentPositionOffset,true));
        }
      }
    }
  }
  canvas.drawRect(lineLeft,height - indicatorHeight,lineRight,height,rectPaint);
  rectPaint.setColor(underlineColor);
  canvas.drawRect(0,height - underlineHeight,tabsContainer.getWidth(),height,rectPaint);
  dividerPaint.setColor(dividerColor);
  for (int i=0; i < tabCount - 1; i++) {
    View tab=tabsContainer.getChildAt(i);
    canvas.drawLine(tab.getRight(),dividerPadding,tab.getRight(),height - dividerPadding,dividerPaint);
  }
}

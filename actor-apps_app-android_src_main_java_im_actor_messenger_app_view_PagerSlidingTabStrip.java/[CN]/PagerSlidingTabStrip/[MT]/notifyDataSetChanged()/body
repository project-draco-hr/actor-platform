{
  tabsContainer.removeAllViews();
  tabCount=pager.getAdapter().getCount();
  for (int i=0; i < tabCount; i++) {
    if (pager.getAdapter() instanceof IconTabProvider) {
      if (((IconTabProvider)pager.getAdapter()).getPageIconResId(i,getContext()) != -1) {
        addIconTab(i,((IconTabProvider)pager.getAdapter()).getPageIconResId(i,getContext()));
      }
 else {
        addTextTab(i,pager.getAdapter().getPageTitle(i).toString());
      }
    }
 else     if (pager.getAdapter() instanceof TabProvider) {
      addTab(i,((TabProvider)pager.getAdapter()).getTab(i,getContext()));
    }
 else {
      addTextTab(i,pager.getAdapter().getPageTitle(i).toString());
    }
  }
  updateTabStyles();
  getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener(){
    @SuppressWarnings("deprecation") @SuppressLint("NewApi") @Override public void onGlobalLayout(){
      if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
        getViewTreeObserver().removeGlobalOnLayoutListener(this);
      }
 else {
        getViewTreeObserver().removeOnGlobalLayoutListener(this);
      }
      currentPosition=pager.getCurrentItem();
    }
  }
);
}

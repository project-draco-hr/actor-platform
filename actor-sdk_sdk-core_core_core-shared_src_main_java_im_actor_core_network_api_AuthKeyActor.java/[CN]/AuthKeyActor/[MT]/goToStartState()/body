{
  goToState(new ActorState(){
    @Override public ProtoStruct sendStartMessage() throws IOException {
      Log.d(TAG,"Sending RequestStartAuth");
      return new RequestStartAuth(randomId);
    }
    @Override public void onMessage(    ProtoStruct struct) throws IOException {
      if (struct instanceof ResponseStartAuth) {
        Log.d(TAG,"Received ResponseStartAuth");
        ResponseStartAuth startAuth=(ResponseStartAuth)struct;
        if (startAuth.getRandomId() != randomId) {
          throw new IOException("Incorrect RandomId");
        }
        long[] keys=startAuth.getAvailableKeys();
        if (endpoints.getTrustedKeys().length == 0) {
          gotoKeyDownloadState(keys[0],startAuth.getServerNonce());
        }
 else {
          for (          long l : keys) {
            for (            TrustedKey tk : endpoints.getTrustedKeys()) {
              if (tk.getKeyId() == l) {
                if (tk.getKey() != null) {
                  gotoDHState(tk.getKeyId(),tk.getKey(),startAuth.getServerNonce());
                }
 else {
                  gotoKeyDownloadState(tk.getKeyId(),startAuth.getServerNonce());
                }
                return;
              }
            }
          }
          throw new IOException("No trusted keys found!");
        }
      }
 else {
        throw new IOException("Expected: ResponseStartAuth, got: " + struct.getClass().getName());
      }
    }
  }
);
}

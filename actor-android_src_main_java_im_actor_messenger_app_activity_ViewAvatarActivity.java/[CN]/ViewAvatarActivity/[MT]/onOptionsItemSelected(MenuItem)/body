{
  if (item.getItemId() == R.id.editAvatar) {
    CharSequence[] args;
    if (getAvatar().get() != null) {
      args=new CharSequence[]{getString(R.string.pick_photo_camera),getString(R.string.pick_photo_gallery),getString(R.string.pick_photo_remove)};
    }
 else {
      args=new CharSequence[]{getString(R.string.pick_photo_camera),getString(R.string.pick_photo_gallery)};
    }
    new MaterialDialog.Builder(this).items(args).itemsCallback(new MaterialDialog.ListCallback(){
      @Override public void onSelection(      MaterialDialog materialDialog,      View view,      int which,      CharSequence charSequence){
        if (which == 0) {
          externalFile=AppContext.getExternalTempFile("capture","jpg");
          if (externalFile == null) {
            Toast.makeText(ViewAvatarActivity.this,R.string.toast_no_sdcard,Toast.LENGTH_LONG).show();
            return;
          }
          startActivityForResult(new Intent(MediaStore.ACTION_IMAGE_CAPTURE).putExtra(MediaStore.EXTRA_OUTPUT,Uri.fromFile(new File(externalFile))),REQUEST_PHOTO);
        }
 else         if (which == 1) {
          Intent i=new Intent(Intent.ACTION_PICK,MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
          i.setType("image/*");
          startActivityForResult(i,REQUEST_GALLERY);
        }
 else         if (which == 2) {
          if (peer.getPeerType() == PeerType.PRIVATE) {
            if (peer.getPeerId() == myUid()) {
              messenger().removeAvatar();
            }
          }
 else           if (peer.getPeerType() == PeerType.GROUP) {
          }
        }
      }
    }
).show();
    return true;
  }
  return super.onOptionsItemSelected(item);
}

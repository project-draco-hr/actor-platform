{
  super(user);
  id=user.getUid();
  sex=user.getSex();
  isBot=user.isBot();
  name=new StringValueModel("user." + id + ".name",user.getName());
  localName=new StringValueModel("user." + id + ".local_name",user.getLocalName());
  serverName=new StringValueModel("user." + id + ".server_name",user.getServerName());
  nick=new StringValueModel("user." + id + ".nick",user.getNick());
  about=new StringValueModel("user." + id + ".about",user.getAbout());
  avatar=new AvatarValueModel("user." + id + ".avatar",user.getAvatar());
  isContact=new BooleanValueModel("user." + id + ".contact",modules.getContactsModule().isUserContact(id));
  isBlocked=new BooleanValueModel("user." + id + ".blocked",user.isBlocked());
  timeZone=new StringValueModel("user." + id + ".time_zone",user.getTimeZone());
  presence=new ValueModelUserPresence("user." + id + ".presence",new UserPresence(UserPresence.State.UNKNOWN));
  phones=new ValueModelUserPhone("user." + id + ".phones",buildPhones(user.getRecords()));
  emails=new ValueModelUserEmail("user." + id + ".emails",buildEmails(user.getRecords()));
  links=new ValueModelUserLink("user." + id + ".links",buildLinks(user.getRecords()));
  contacts=new ValueModelContactRecord("user." + id + ".contacts",new ArrayListContactRecord(user.getRecords()));
  presenceTimer=new CommonTimer(new Runnable(){
    @Override public void run(){
      presence.forceNotify();
      presenceTimer.schedule(PRESENCE_UPDATE_DELAY);
    }
  }
);
  presenceTimer.schedule(PRESENCE_UPDATE_DELAY);
}

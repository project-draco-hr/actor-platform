{
  return new Command<AuthState>(){
    @Override public void start(    final CommandCallback<AuthState> callback){
      request(new RequestValidateCode(preferences().getString(KEY_TRANSACTION_HASH),code),new RpcCallback<ResponseAuth>(){
        @Override public void onResult(        ResponseAuth response){
          onLoggedIn(callback,response);
        }
        @Override public void onError(        final RpcException e){
          if ("PHONE_CODE_EXPIRED".equals(e.getTag()) || "EMAIL_CODE_EXPIRED".equals(e.getTag())) {
            resetAuth();
          }
 else           if ("PHONE_NUMBER_UNOCCUPIED".equals(e.getTag()) || "EMAIL_UNOCCUPIED".equals(e.getTag())) {
            preferences().putString(KEY_CODE,code);
            state=AuthState.SIGN_UP;
            callback.onResult(AuthState.SIGN_UP);
            return;
          }
          runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onError(e);
            }
          }
);
        }
      }
);
    }
  }
;
}

{
  EncryptedSessionChain pickedChain=null;
  for (  EncryptedSessionChain c : decryptionChains) {
    if (ByteStrings.isEquals(Curve25519.keyGenPublic(c.getOwnPrivateKey()),ephemeralKey)) {
      pickedChain=c;
      break;
    }
  }
  return success(pickedChain).flatMap(new Function<EncryptedSessionChain,Promise<EncryptedSessionChain>>(){
    @Override public Promise<EncryptedSessionChain> apply(    EncryptedSessionChain src){
      if (src != null) {
        return success(src);
      }
      return null;
    }
  }
);
}

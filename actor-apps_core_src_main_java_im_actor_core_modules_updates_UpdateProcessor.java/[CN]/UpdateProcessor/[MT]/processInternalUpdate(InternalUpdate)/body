{
  if (update instanceof DialogHistoryLoaded) {
    ResponseLoadDialogs dialogs=((DialogHistoryLoaded)update).getDialogs();
    applyRelated(dialogs.getUsers(),dialogs.getGroups(),false);
    messagesProcessor.onDialogsLoaded(dialogs);
  }
 else   if (update instanceof MessagesHistoryLoaded) {
    MessagesHistoryLoaded historyLoaded=(MessagesHistoryLoaded)update;
    applyRelated(historyLoaded.getLoadHistory().getUsers(),new ArrayList<Group>(),false);
    messagesProcessor.onMessagesLoaded(historyLoaded.getPeer(),historyLoaded.getLoadHistory());
  }
 else   if (update instanceof LoggedIn) {
    ArrayList<User> users=new ArrayList<User>();
    users.add(((LoggedIn)update).getAuth().getUser());
    applyRelated(users,new ArrayList<Group>(),true);
    runOnUiThread(((LoggedIn)update).getRunnable());
  }
 else   if (update instanceof ContactsLoaded) {
    ContactsLoaded contactsLoaded=(ContactsLoaded)update;
    applyRelated(contactsLoaded.getContacts().getUsers(),new ArrayList<Group>(),false);
    context().getContactsModule().getContactSyncActor().send(new ContactsSyncActor.ContactsLoaded(contactsLoaded.getContacts()));
  }
 else   if (update instanceof UsersFounded) {
    final UsersFounded founded=(UsersFounded)update;
    applyRelated(((UsersFounded)update).getUsers(),new ArrayList<Group>(),false);
    final ArrayList<UserVM> users=new ArrayList<UserVM>();
    for (    User u : founded.getUsers()) {
      users.add(context().getUsersModule().getUsers().get(u.getId()));
    }
    runOnUiThread(new Runnable(){
      @Override public void run(){
        founded.getCommandCallback().onResult(users.toArray(new UserVM[users.size()]));
      }
    }
);
  }
 else   if (update instanceof GroupCreated) {
    final GroupCreated created=(GroupCreated)update;
    ArrayList<Group> groups=new ArrayList<Group>();
    groups.add(created.getGroup());
    applyRelated(created.getUsers(),groups,false);
    runOnUiThread(new Runnable(){
      @Override public void run(){
        created.getCallback().onResult(created.getGroup().getId());
      }
    }
);
  }
}

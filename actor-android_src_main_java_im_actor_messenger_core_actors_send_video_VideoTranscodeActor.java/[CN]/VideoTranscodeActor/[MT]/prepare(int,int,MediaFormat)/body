{
  float scale=Math.min(MAX_SIZE / h,MAX_SIZE / w);
  int destW=(int)(w * scale);
  int destH=(int)(h * scale);
  MediaFormat outputFormat=MediaFormat.createVideoFormat("video/avc",destW,destH);
  outputFormat.setInteger(MediaFormat.KEY_COLOR_FORMAT,MediaCodecInfo.CodecCapabilities.COLOR_FormatSurface);
  outputFormat.setInteger(MediaFormat.KEY_BIT_RATE,1000000);
  outputFormat.setInteger(MediaFormat.KEY_FRAME_RATE,25);
  outputFormat.setInteger(MediaFormat.KEY_I_FRAME_INTERVAL,15);
  try {
    encoder=MediaCodec.createEncoderByType("video/avc");
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  encoder.configure(outputFormat,null,null,MediaCodec.CONFIGURE_FLAG_ENCODE);
  inputSurface=new InputSurface(encoder.createInputSurface());
  inputSurface.makeCurrent();
  encoder.start();
  try {
    decoder=MediaCodec.createDecoderByType("video/avc");
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  outputSurface=new OutputSurface();
  decoder.configure(mediaFormat,outputSurface.getSurface(),null,0);
  decoder.start();
  decoderInputBuffers=decoder.getInputBuffers();
  encoderOutputBuffers=encoder.getOutputBuffers();
  info=new MediaCodec.BufferInfo();
}

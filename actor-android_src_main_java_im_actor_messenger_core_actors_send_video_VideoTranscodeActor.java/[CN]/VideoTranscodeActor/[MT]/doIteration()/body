{
  if (outputDone) {
    return;
  }
  if (!inputDone) {
    int inputBufIndex=decoder.dequeueInputBuffer(TIMEOUT_USEC);
    if (inputBufIndex >= 0) {
      if (isCompleted()) {
        decoder.queueInputBuffer(inputBufIndex,0,0,0L,MediaCodec.BUFFER_FLAG_END_OF_STREAM);
        inputDone=true;
      }
 else {
        ByteBuffer inputBuf=decoderInputBuffers[inputBufIndex];
        inputBuf.clear();
      }
    }
 else {
    }
  }
  boolean decoderOutputAvailable=!decoderDone;
  boolean encoderOutputAvailable=true;
  while (decoderOutputAvailable || encoderOutputAvailable) {
    int encoderStatus=encoder.dequeueOutputBuffer(info,TIMEOUT_USEC);
    if (encoderStatus == MediaCodec.INFO_TRY_AGAIN_LATER) {
      encoderOutputAvailable=false;
    }
 else     if (encoderStatus == MediaCodec.INFO_OUTPUT_BUFFERS_CHANGED) {
      encoderOutputBuffers=encoder.getOutputBuffers();
    }
 else     if (encoderStatus == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {
      MediaFormat newFormat=encoder.getOutputFormat();
    }
 else     if (encoderStatus < 0) {
    }
 else {
      ByteBuffer encodedData=encoderOutputBuffers[encoderStatus];
      if (encodedData == null) {
      }
      if (info.size != 0) {
        encodedData.position(info.offset);
        encodedData.limit(info.offset + info.size);
      }
      outputDone=(info.flags & MediaCodec.BUFFER_FLAG_END_OF_STREAM) != 0;
      encoder.releaseOutputBuffer(encoderStatus,false);
    }
    if (encoderStatus != MediaCodec.INFO_TRY_AGAIN_LATER) {
      continue;
    }
    if (!decoderDone) {
      int decoderStatus=decoder.dequeueOutputBuffer(info,TIMEOUT_USEC);
      if (decoderStatus == MediaCodec.INFO_TRY_AGAIN_LATER) {
        decoderOutputAvailable=false;
      }
 else       if (decoderStatus == MediaCodec.INFO_OUTPUT_BUFFERS_CHANGED) {
      }
 else       if (decoderStatus == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {
      }
 else       if (decoderStatus < 0) {
      }
 else {
        boolean doRender=(info.size != 0);
        decoder.releaseOutputBuffer(decoderStatus,doRender);
        if (doRender) {
          outputSurface.awaitNewImage();
          outputSurface.drawImage();
          inputSurface.setPresentationTime(info.presentationTimeUs * 1000);
          inputSurface.swapBuffers();
        }
        if ((info.flags & MediaCodec.BUFFER_FLAG_END_OF_STREAM) != 0) {
          encoder.signalEndOfInputStream();
        }
      }
    }
  }
}

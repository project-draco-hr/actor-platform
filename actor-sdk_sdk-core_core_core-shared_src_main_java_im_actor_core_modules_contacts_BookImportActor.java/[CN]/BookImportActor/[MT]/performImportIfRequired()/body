{
  if (ENABLE_LOG) {
    Log.d(TAG,"performImportIfRequired called");
  }
  if (isUploadingContacts) {
    if (ENABLE_LOG) {
      Log.d(TAG,"performImportIfRequired:exiting:already importing");
    }
    return;
  }
  if (importQueue.size() == 0) {
    if (ENABLE_LOG) {
      Log.d(TAG,"performImportIfRequired:exiting:nothing to import");
    }
    context().getAppStateModule().onBookImported();
    return;
  }
  isUploadingContacts=true;
  final ArrayList<ApiPhoneToImport> phoneToImports=new ArrayList<>();
  final ArrayList<ApiEmailToImport> emailToImports=new ArrayList<>();
  for (int i=0; i < MAX_IMPORT_SIZE && importQueue.size() > 0; i++) {
    ImportQueueItem importQueueItem=importQueue.remove(0);
    if (importQueueItem instanceof ImportEmailQueueItem) {
      emailToImports.add(new ApiEmailToImport(((ImportEmailQueueItem)importQueueItem).getEmail(),((ImportEmailQueueItem)importQueueItem).getName()));
    }
 else     if (importQueueItem instanceof ImportPhoneQueueItem) {
      phoneToImports.add(new ApiPhoneToImport(((ImportPhoneQueueItem)importQueueItem).getPhoneNumber(),((ImportPhoneQueueItem)importQueueItem).getName()));
    }
 else {
      throw new RuntimeException();
    }
  }
  request(new RequestImportContacts(phoneToImports,emailToImports),new RpcCallback<ResponseImportContacts>(){
    @Override public void onResult(    ResponseImportContacts response){
      for (      ApiPhoneToImport phoneToImport : phoneToImports) {
        storage.markAsImported(phoneToImport.getPhoneNumber());
        importingPhones.remove(phoneToImport.getPhoneNumber());
      }
      for (      ApiEmailToImport emailToImport : emailToImports) {
        storage.markAsImported(emailToImport.getEmail());
        importingEmails.remove(emailToImport.getEmail());
      }
      context().getContactsModule().getBookImportState().put(0,storage.toByteArray());
      if (response.getUsers().size() != 0) {
        if (ENABLE_LOG) {
          Log.d(TAG,"Import success with " + response.getUsers().size() + " new contacts");
        }
        ArrayList<Integer> uids=new ArrayList<>();
        for (        ApiUser u : response.getUsers()) {
          uids.add(u.getId());
        }
        updates().onUpdateReceived(new FatSeqUpdate(response.getSeq(),response.getState(),UpdateContactsAdded.HEADER,new UpdateContactsAdded(uids).toByteArray(),response.getUsers(),new ArrayList<ApiGroup>()));
      }
 else {
        if (ENABLE_LOG) {
          Log.d(TAG,"Import success, but no new contacts found");
        }
      }
      isUploadingContacts=false;
      performImportIfRequired();
    }
    @Override public void onError(    RpcException e){
      if (ENABLE_LOG) {
        Log.d(TAG,"Import failure");
      }
      e.printStackTrace();
      isUploadingContacts=false;
      performImportIfRequired();
    }
  }
);
}

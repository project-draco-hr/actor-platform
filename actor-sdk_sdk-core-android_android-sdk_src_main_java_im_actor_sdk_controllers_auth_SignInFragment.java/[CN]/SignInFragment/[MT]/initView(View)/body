{
  ActorStyle style=ActorSDK.sharedActor().style;
  TextView hint=(TextView)v.findViewById(R.id.sign_in_login_hint);
  hint.setTextColor(style.getTextSecondaryColor());
  signIdEditText=(EditText)v.findViewById(R.id.tv_sign_in);
  signIdEditText.setTextColor(style.getTextPrimaryColor());
  signIdEditText.setHighlightColor(style.getMainColor());
  signIdEditText.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView textView,    int id,    KeyEvent keyEvent){
      if (id == EditorInfo.IME_ACTION_GO) {
        requestCode();
        return true;
      }
      return false;
    }
  }
);
  int availableAuthType=ActorSDK.sharedActor().getAuthType();
  if (((availableAuthType & AuthActivity.AUTH_TYPE_PHONE) == AuthActivity.AUTH_TYPE_PHONE) && ((availableAuthType & AuthActivity.AUTH_TYPE_EMAIL) == AuthActivity.AUTH_TYPE_EMAIL)) {
    setSuggestedEmail(signIdEditText);
  }
 else   if ((availableAuthType & AuthActivity.AUTH_TYPE_PHONE) == AuthActivity.AUTH_TYPE_PHONE) {
    hint.setText(getString(R.string.sign_in_hint_phone_only));
    signIdEditText.setHint(getString(R.string.sign_in_edit_text_hint_phone_only));
    signIdEditText.setInputType(EditorInfo.TYPE_CLASS_PHONE);
  }
 else   if ((availableAuthType & AuthActivity.AUTH_TYPE_EMAIL) == AuthActivity.AUTH_TYPE_EMAIL) {
    hint.setText(getString(R.string.sign_in_hint_email_only));
    signIdEditText.setHint(getString(R.string.sign_in_edit_text_hint_email_only));
    setSuggestedEmail(signIdEditText);
  }
  Button singUp=(Button)v.findViewById(R.id.button_sign_up);
  singUp.setTextColor(style.getTextSecondaryColor());
  onClick(singUp,new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSignUp();
    }
  }
);
  onClick(v,R.id.button_continue,new View.OnClickListener(){
    @Override public void onClick(    View view){
      requestCode();
    }
  }
);
}

{
  pendingColor=context.getResources().getColor(R.color.chats_state_pending);
  sentColor=context.getResources().getColor(R.color.chats_state_sent);
  receivedColor=context.getResources().getColor(R.color.chats_state_delivered);
  readColor=context.getResources().getColor(R.color.chats_state_read);
  errorColor=context.getResources().getColor(R.color.chats_state_error);
  FrameLayout fl=new FrameLayout(context);
  fl.setLayoutParams(new AbsListView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,Screen.dp(72)));
  fl.setBackgroundResource(R.drawable.selector_white);
  avatar=new AvatarView(context);
{
    FrameLayout.LayoutParams avatarLayoutParams=new FrameLayout.LayoutParams(Screen.dp(54),Screen.dp(54));
    avatarLayoutParams.gravity=Gravity.CENTER_VERTICAL | Gravity.LEFT;
    avatarLayoutParams.leftMargin=paddingH;
    avatar.setLayoutParams(avatarLayoutParams);
  }
  fl.addView(avatar);
  LinearLayout linearLayout=new LinearLayout(context);
  linearLayout.setOrientation(LinearLayout.VERTICAL);
  linearLayout.setGravity(Gravity.CENTER_VERTICAL);
{
    FrameLayout.LayoutParams layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT);
    layoutParams.rightMargin=paddingH;
    layoutParams.leftMargin=Screen.dp(76);
    layoutParams.topMargin=paddingV;
    layoutParams.bottomMargin=paddingV;
    linearLayout.setLayoutParams(layoutParams);
  }
  LinearLayout firstRow=new LinearLayout(context);
  firstRow.setOrientation(LinearLayout.HORIZONTAL);
{
    LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
    firstRow.setLayoutParams(params);
  }
  title=new TextView(context);
  title.setTextColor(0xDD000000);
  title.setTypeface(robotoMedium);
  title.setTextSize(17);
  title.setPadding(0,0,0,0);
  title.setSingleLine();
  title.setCompoundDrawablePadding(Screen.dp(4));
  title.setEllipsize(TextUtils.TruncateAt.END);
{
    LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(0,ViewGroup.LayoutParams.WRAP_CONTENT);
    params.weight=1;
    title.setLayoutParams(params);
  }
  firstRow.addView(title);
  time=new TextView(context);
  time.setTextColor(getContext().getResources().getColor(R.color.text_subheader));
  time.setTypeface(robotoRegular);
  time.setTextSize(12);
  time.setPadding(Screen.dp(8),0,0,0);
  time.setSingleLine();
  firstRow.addView(time);
  linearLayout.addView(firstRow);
  text=new TextView(context);
  text.setTypeface(robotoRegular);
  text.setTextSize(14);
  text.setPadding(0,0,Screen.dp(28),0);
  text.setSingleLine();
  text.setEllipsize(TextUtils.TruncateAt.END);
  linearLayout.addView(text);
  fl.addView(linearLayout);
  separator=new View(context);
  separator.setBackgroundColor(getContext().getResources().getColor(R.color.divider));
  FrameLayout.LayoutParams divLayoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,getContext().getResources().getDimensionPixelSize(R.dimen.div_size));
  divLayoutParams.leftMargin=Screen.dp(76);
  divLayoutParams.rightMargin=Screen.dp(10);
  divLayoutParams.gravity=Gravity.BOTTOM;
  fl.addView(separator,divLayoutParams);
  state=new TintImageView(context);
{
    FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(Screen.dp(28),Screen.dp(12),Gravity.BOTTOM | Gravity.RIGHT);
    params.bottomMargin=Screen.dp(16);
    params.rightMargin=Screen.dp(9);
    state.setLayoutParams(params);
    fl.addView(state);
  }
  counter=new TextView(context);
  counter.setTextColor(Color.WHITE);
  counter.setBackgroundColor(0xff46aa36);
  counter.setPadding(Screen.dp(4),0,Screen.dp(4),0);
  counter.setTextSize(10);
  counter.setTypeface(robotoRegular);
  counter.setGravity(Gravity.CENTER);
  counter.setIncludeFontPadding(false);
  counter.setMinWidth(Screen.dp(14));
{
    FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,Screen.dp(14),Gravity.BOTTOM | Gravity.RIGHT);
    params.bottomMargin=Screen.dp(12);
    params.rightMargin=Screen.dp(10);
    counter.setLayoutParams(params);
    fl.addView(counter);
  }
  fl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (bindedItem != null) {
        itemClicked.onClicked(bindedItem);
      }
    }
  }
);
  if (itemLongClicked != null) {
    fl.setOnLongClickListener(new View.OnLongClickListener(){
      @Override public boolean onLongClick(      View v){
        if (bindedItem != null) {
          itemLongClicked.onClicked(bindedItem);
          return true;
        }
 else {
          return false;
        }
      }
    }
);
  }
  return fl;
}

{
  isSyncInProgress=false;
  ArrayList<PhoneToImport> phoneToImports=new ArrayList<PhoneToImport>();
  ArrayList<EmailToImport> emailToImports=new ArrayList<EmailToImport>();
  for (  PhoneBookContact record : phoneBook) {
    for (    PhoneBookPhone phone : record.getPhones()) {
      if (isImported(phone.getNumber())) {
        continue;
      }
      if (importingPhones.contains(phone.getNumber())) {
        continue;
      }
      importingPhones.add(phone.getNumber());
      phoneToImports.add(new PhoneToImport(phone.getNumber(),record.getName()));
    }
    for (    PhoneBookEmail email : record.getEmails()) {
      if (isImported(email.getEmail())) {
        continue;
      }
      if (importingEmails.contains(email.getEmail())) {
        continue;
      }
      importingEmails.add(email.getEmail());
      emailToImports.add(new EmailToImport(email.getEmail(),record.getName()));
    }
  }
  Log.d(TAG,"Importing contacts: " + (phoneToImports.size() + emailToImports.size()));
  ArrayList<PhoneToImport> phoneToImportsPart=new ArrayList<PhoneToImport>();
  ArrayList<EmailToImport> emailToImportsPart=new ArrayList<EmailToImport>();
  int count=0;
  for (  PhoneToImport phoneToImport : phoneToImports) {
    phoneToImportsPart.add(phoneToImport);
    count++;
    if (count >= MAX_IMPORT_SIZE) {
      performImport(phoneToImportsPart,emailToImportsPart);
      phoneToImportsPart.clear();
      emailToImportsPart.clear();
      count=0;
    }
  }
  for (  EmailToImport emailToImport : emailToImports) {
    emailToImportsPart.add(emailToImport);
    count++;
    if (count >= MAX_IMPORT_SIZE) {
      performImport(phoneToImportsPart,emailToImportsPart);
      phoneToImportsPart.clear();
      emailToImportsPart.clear();
      count=0;
    }
  }
  if (count > 0) {
    performImport(phoneToImportsPart,emailToImportsPart);
  }
}

{
  ContactContent contact=(ContactContent)message.getContent();
  if (message.getSenderId() == myUid()) {
    stateIcon.setVisibility(View.VISIBLE);
switch (message.getMessageState()) {
case ERROR:
      stateIcon.setResource(R.drawable.msg_error);
    stateIcon.setTint(errorColor);
  break;
default :
case PENDING:
stateIcon.setResource(R.drawable.msg_clock);
stateIcon.setTint(waitColor);
break;
case READ:
stateIcon.setResource(R.drawable.msg_check_2);
stateIcon.setTint(readColor);
break;
case RECEIVED:
stateIcon.setResource(R.drawable.msg_check_2);
stateIcon.setTint(deliveredColor);
break;
case SENT:
stateIcon.setResource(R.drawable.msg_check_1);
stateIcon.setTint(sentColor);
break;
}
}
 else {
stateIcon.setVisibility(View.GONE);
}
setTimeAndReactions(time);
if (message.getSenderId() == myUid()) {
messageBubble.setBackgroundResource(R.drawable.conv_bubble_media_out);
}
 else {
messageBubble.setBackgroundResource(R.drawable.conv_bubble_media_in);
}
Drawable avatar;
if (contact.getPhoto64() != null) {
byte[] decodedByte=Base64.decode(contact.getPhoto64(),Base64.NO_WRAP);
Bitmap b=BitmapFactory.decodeByteArray(decodedByte,0,decodedByte.length);
avatar=getRoundedBitmapDrawable(itemView.getContext(),b);
}
 else {
avatar=new AvatarPlaceholderDrawable(contact.getName(),message.getSenderId(),18,itemView.getContext());
}
contactAvatar.setBackgroundDrawable(avatar);
text.setText(((PreprocessedTextData)preprocessedData).getSpannableString());
}

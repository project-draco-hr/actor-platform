{
  if (newRowsCount == oldRowsCount) {
    return;
  }
  v.measure(AbsListView.LayoutParams.MATCH_PARENT,AbsListView.LayoutParams.WRAP_CONTENT);
  int newRowsHeight=Screen.dp(29) * newRowsCount + Screen.dp(1) * ((newRowsCount == 0 ? 1 : newRowsCount) - 1);
  int oldRowsHeight=Screen.dp(29) * oldRowsCount + Screen.dp(1) * ((oldRowsCount == 0 ? 1 : oldRowsCount) - 1);
  final int targetHeight=(newRowsHeight) > Screen.dp(87 + 2) ? Screen.dp(100) : newRowsHeight;
  final int initialHeight=(oldRowsHeight) > Screen.dp(87 + 2) ? Screen.dp(100) : oldRowsHeight;
  v.getLayoutParams().height=initialHeight;
  v.setVisibility(View.VISIBLE);
  Animation a=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      if (newRowsCount > oldRowsCount) {
        v.getLayoutParams().height=(int)((targetHeight * interpolatedTime) - initialHeight * interpolatedTime + initialHeight);
        v.requestLayout();
      }
 else {
        v.getLayoutParams().height=(int)(initialHeight - (initialHeight * interpolatedTime) - targetHeight * (1f - interpolatedTime) + targetHeight);
        v.requestLayout();
      }
    }
    @Override public boolean willChangeBounds(){
      return true;
    }
  }
;
  a.setDuration((newRowsCount > oldRowsCount ? targetHeight : initialHeight / Screen.dp(1)) * 2);
  a.setInterpolator(MaterialInterpolator.getInstance());
  v.startAnimation(a);
}

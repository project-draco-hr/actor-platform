{
  SimpleDateFormat dateF;
  String stime=Strings.fromByteArray(time);
  String d=stime;
  if (stime.endsWith("Z")) {
    if (hasFractionalSeconds()) {
      dateF=new SimpleDateFormat("yyyyMMddHHmmss.SSS'Z'");
    }
 else {
      dateF=new SimpleDateFormat("yyyyMMddHHmmss'Z'");
    }
    dateF.setTimeZone(new SimpleTimeZone(0,"Z"));
  }
 else   if (stime.indexOf('-') > 0 || stime.indexOf('+') > 0) {
    d=this.getTime();
    if (hasFractionalSeconds()) {
      dateF=new SimpleDateFormat("yyyyMMddHHmmss.SSSz");
    }
 else {
      dateF=new SimpleDateFormat("yyyyMMddHHmmssz");
    }
    dateF.setTimeZone(new SimpleTimeZone(0,"Z"));
  }
 else {
    if (hasFractionalSeconds()) {
      dateF=new SimpleDateFormat("yyyyMMddHHmmss.SSS");
    }
 else {
      dateF=new SimpleDateFormat("yyyyMMddHHmmss");
    }
    dateF.setTimeZone(new SimpleTimeZone(0,TimeZone.getDefault().getID()));
  }
  if (hasFractionalSeconds()) {
    String frac=d.substring(14);
    int index;
    for (index=1; index < frac.length(); index++) {
      char ch=frac.charAt(index);
      if (!('0' <= ch && ch <= '9')) {
        break;
      }
    }
    if (index - 1 > 3) {
      frac=frac.substring(0,4) + frac.substring(index);
      d=d.substring(0,14) + frac;
    }
 else     if (index - 1 == 1) {
      frac=frac.substring(0,index) + "00" + frac.substring(index);
      d=d.substring(0,14) + frac;
    }
 else     if (index - 1 == 2) {
      frac=frac.substring(0,index) + "0" + frac.substring(index);
      d=d.substring(0,14) + frac;
    }
  }
  return dateF.parse(d);
}

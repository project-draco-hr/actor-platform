{
  if (isAutocompleteVisible) {
    return;
  }
  isAutocompleteVisible=true;
  if (!isMentions) {
    autocompleteAdapter=new CommandsAdapter(peer.getPeerId(),this,new CommandsAdapter.CommandsUpdatedCallback(){
      @Override public void onMentionsUpdated(      int oldRowsCount,      int newRowsCount){
        onMentionsChanged(oldRowsCount,newRowsCount);
      }
    }
);
  }
 else {
    GroupVM groupInfo=groups().get(peer.getPeerId());
    autocompleteAdapter=new MentionsAdapter(groupInfo.getId(),this,new MentionsAdapter.MentionsUpdatedCallback(){
      @Override public void onMentionsUpdated(      int oldRowsCount,      int newRowsCount){
        onMentionsChanged(oldRowsCount,newRowsCount);
      }
    }
,initEmpty);
  }
  autocompleteList.setAdapter(autocompleteAdapter);
  autocompleteList.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      Object item=parent.getItemAtPosition(position);
      if (item != null && item instanceof MentionFilterResult) {
        String origMention=((MentionFilterResult)item).getMentionString();
        if (autocompleteTriggerStart != -1 && autocompleteTriggerStart + autocompleteString.length() + 1 <= messageEditText.getText().length()) {
          String mentionString=origMention + (autocompleteTriggerStart == 0 ? ": " : " ");
          Editable text=messageEditText.getText();
          int cursorPosition=autocompleteTriggerStart + mentionString.length();
          text.replace(autocompleteTriggerStart,autocompleteTriggerStart + autocompleteString.length() + 1,mentionString);
          messageEditText.setSelection(cursorPosition,cursorPosition);
        }
        hideMentions();
      }
 else       if (item != null && item instanceof CommandsAdapter.CommandHolder) {
        messenger().sendMessage(peer,((CommandsAdapter.CommandHolder)item).getCommand().getSlashCommand());
        hideMentions();
      }
    }
  }
);
  hideShare();
  expandMentions(autocompleteList,0,autocompleteList.getCount());
}

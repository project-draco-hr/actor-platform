{
  intent=getIntent();
  peer=Peer.fromUniqueId(intent.getExtras().getLong(EXTRA_CHAT_PEER));
  if (saveInstance == null) {
    isCompose=intent.getExtras().getBoolean(EXTRA_CHAT_COMPOSE,false);
  }
 else {
    pending_fileName=saveInstance.getString(STATE_FILE_NAME,null);
  }
  super.onCreate(saveInstance);
  messageEditText.addTextChangedListener(new TextWatcherImp());
  SLIDE_LIMIT=(int)(Screen.getDensity() * 180);
  audioContainer=findViewById(R.id.audioContainer);
  audioTimer=(TextView)findViewById(R.id.audioTimer);
  audioSlide=findViewById(R.id.audioSlide);
  recordPoint=findViewById(R.id.record_point);
  ActorSystem.system().addDispatcher("voice_capture_dispatcher");
  audioButton=(ImageView)findViewById(R.id.record_btn);
  audioButton.setVisibility(View.VISIBLE);
  audioButton.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      if (event.getAction() == MotionEvent.ACTION_DOWN) {
        if (!isAudioVisible) {
          showAudio();
          slideStart=(int)event.getX();
        }
      }
 else       if (event.getAction() == MotionEvent.ACTION_UP) {
        if (isAudioVisible) {
          hideAudio(false);
        }
      }
 else       if (event.getAction() == MotionEvent.ACTION_MOVE) {
        if (isAudioVisible) {
          int slide=slideStart - (int)event.getX();
          if (slide < 0) {
            slide=0;
          }
          if (slide > SLIDE_LIMIT) {
            hideAudio(true);
          }
 else {
            slideAudio(slide);
          }
        }
      }
      return true;
    }
  }
);
  mentionsList=(ListView)findViewById(R.id.mentionsList);
  quoteContainer=(FrameLayout)findViewById(R.id.quoteContainer);
  quoteText=(TextView)findViewById(R.id.quote_text);
  findViewById(R.id.ib_close_quote).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      goneView(quoteContainer);
      quoteText.setText("");
      currentQuote="";
    }
  }
);
  shareMenu=findViewById(R.id.share_container);
  shareMenu.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  shareContainer=findViewById(R.id.closeMenuLayout);
  shareContainer.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      hideShareMenu();
    }
  }
);
  try {
    ApplicationInfo app=ChatActivity.this.getPackageManager().getApplicationInfo(ChatActivity.this.getPackageName(),PackageManager.GET_META_DATA);
    Bundle bundle=app.metaData;
    if (bundle.containsKey("com.google.android.geo.API_KEY")) {
      findViewById(R.id.share_location).setVisibility(View.VISIBLE);
      findViewById(R.id.share_hide).setVisibility(View.GONE);
      findViewById(R.id.location_hide_text).setVisibility(View.VISIBLE);
    }
 else {
      findViewById(R.id.share_location).setVisibility(View.GONE);
      findViewById(R.id.share_hide).setVisibility(View.VISIBLE);
      findViewById(R.id.location_hide_text).setVisibility(View.INVISIBLE);
      Log.w("Actor-GoogleMaps","please, set up google map api key in AndroidManifest metadata to enable share locations");
    }
  }
 catch (  PackageManager.NameNotFoundException e) {
    e.printStackTrace();
  }
catch (  NullPointerException e) {
    e.printStackTrace();
  }
  View.OnClickListener shareMenuOCL=new View.OnClickListener(){
    @Override public void onClick(    View item){
      if (item.getId() == R.id.share_gallery) {
        Intent intent=new Intent(Intent.ACTION_PICK,MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        intent.setType("image/* video/*");
        startActivityForResult(intent,REQUEST_GALLERY);
      }
 else       if (item.getId() == R.id.share_camera) {
        File externalFile=getExternalFilesDir(null);
        if (externalFile == null) {
          Toast.makeText(ChatActivity.this,R.string.toast_no_sdcard,Toast.LENGTH_LONG).show();
        }
        String externalPath=externalFile.getAbsolutePath();
        new File(externalPath + "/actor/").mkdirs();
        pending_fileName=externalPath + "/actor/capture_" + Randoms.randomId()+ ".jpg";
        if (ContextCompat.checkSelfPermission(ChatActivity.this,Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {
          Log.d("Permissions","camera - no permission :c");
          ActivityCompat.requestPermissions(ChatActivity.this,new String[]{Manifest.permission.CAMERA},PERMISSIONS_REQUEST_CAMERA);
        }
 else {
          startCamera();
        }
      }
 else       if (item.getId() == R.id.share_video) {
        File externalFile=getExternalFilesDir(null);
        if (externalFile == null) {
          Toast.makeText(ChatActivity.this,R.string.toast_no_sdcard,Toast.LENGTH_LONG).show();
        }
        String externalPath=externalFile.getAbsolutePath();
        new File(externalPath + "/actor/").mkdirs();
        pending_fileName=externalPath + "/actor/capture_" + Randoms.randomId()+ ".mp4";
        Intent i=new Intent(MediaStore.ACTION_VIDEO_CAPTURE).putExtra(MediaStore.EXTRA_OUTPUT,Uri.fromFile(new File(pending_fileName)));
        startActivityForResult(i,REQUEST_VIDEO);
      }
 else       if (item.getId() == R.id.share_file) {
        startActivityForResult(Intents.pickFile(ChatActivity.this),REQUEST_DOC);
      }
 else       if (item.getId() == R.id.share_location) {
        startActivityForResult(Intents.pickLocation(ChatActivity.this),REQUEST_LOCATION);
      }
 else       if (item.getId() == R.id.share_contact) {
        Intent intent=new Intent(Intent.ACTION_PICK,ContactsContract.Contacts.CONTENT_URI);
        startActivityForResult(intent,REQUEST_CONTACT);
      }
 else       if (item.getId() == R.id.share_hide) {
      }
      hideShareMenu();
    }
  }
;
  findViewById(R.id.share_gallery).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_video).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_camera).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_location).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_file).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_hide).setOnClickListener(shareMenuOCL);
  findViewById(R.id.share_contact).setOnClickListener(shareMenuOCL);
  handleIntent();
}

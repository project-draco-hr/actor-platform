{
  if (isMentionsVisible) {
    return;
  }
  isMentionsVisible=true;
  GroupVM groupInfo=groups().get(peer.getPeerId());
  mentionsAdapter=new MentionsAdapter(groupInfo.getId(),this,new MentionsAdapter.MentionsUpdatedCallback(){
    @Override public void onMentionsUpdated(    int oldRowsCount,    int newRowsCount){
      onMentionsChanged(oldRowsCount,newRowsCount);
    }
  }
,initEmpty);
  mentionsList.setAdapter(mentionsAdapter);
  mentionsList.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      Object item=parent.getItemAtPosition(position);
      if (item != null && item instanceof MentionFilterResult) {
        String origMention=((MentionFilterResult)item).getMentionString();
        if (mentionStart != -1 && mentionStart + mentionSearchString.length() + 1 <= messageEditText.getText().length()) {
          String mentionString=origMention + (mentionStart == 0 ? "" : ": ");
          Editable text=messageEditText.getText();
          int cursorPosition=mentionStart + mentionString.length();
          text.replace(mentionStart,mentionStart + mentionSearchString.length() + 1,mentionString);
          messageEditText.setSelection(cursorPosition,cursorPosition);
        }
        hideMentions();
      }
    }
  }
);
  hideShare();
  expandMentions(mentionsList,0,mentionsList.getCount());
}

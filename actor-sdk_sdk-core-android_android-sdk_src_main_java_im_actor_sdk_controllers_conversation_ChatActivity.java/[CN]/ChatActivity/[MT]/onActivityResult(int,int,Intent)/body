{
  if (resultCode == RESULT_OK) {
    if (requestCode == REQUEST_GALLERY) {
      if (data.getData() != null) {
        execute(messenger().sendUri(peer,data.getData()),R.string.pick_downloading);
      }
    }
 else     if (requestCode == REQUEST_PHOTO) {
      messenger().sendPhoto(peer,pending_fileName);
    }
 else     if (requestCode == REQUEST_VIDEO) {
      messenger().sendVideo(peer,pending_fileName);
    }
 else     if (requestCode == REQUEST_DOC) {
      if (data.getData() != null) {
        execute(messenger().sendUri(peer,data.getData()),R.string.pick_downloading);
      }
 else       if (data.hasExtra("picked")) {
        ArrayList<String> files=data.getStringArrayListExtra("picked");
        if (files != null) {
          for (          String s : files) {
            messenger().sendDocument(peer,s);
          }
        }
      }
    }
 else     if (requestCode == REQUEST_CONTACT) {
      ArrayList<String> phones=new ArrayList<String>();
      ArrayList<String> emails=new ArrayList<String>();
      String name="";
      byte[] photo=null;
      Uri contactData=data.getData();
      Cursor c=managedQuery(contactData,null,null,null,null);
      if (c.moveToFirst()) {
        String id=c.getString(c.getColumnIndexOrThrow(ContactsContract.Contacts._ID));
        String hasPhone=c.getString(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
        if (hasPhone.equalsIgnoreCase("1")) {
          Cursor phonesCursor=getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,null,ContactsContract.CommonDataKinds.Phone.CONTACT_ID + " = " + id,null,null);
          if (phonesCursor.moveToFirst()) {
            int phoneColumnIndex=phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DATA);
            do {
              phones.add(phonesCursor.getString(phoneColumnIndex));
            }
 while (phonesCursor.moveToNext());
            phonesCursor.close();
          }
        }
        name=c.getString(c.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
        Cursor emailCursor=getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,null,ContactsContract.CommonDataKinds.Email.CONTACT_ID + " = " + id,null,null);
        if (emailCursor != null && emailCursor.moveToFirst()) {
          int emailColumnIndex=emailCursor.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA);
          do {
            emails.add(emailCursor.getString(emailColumnIndex));
          }
 while (emailCursor.moveToNext());
          emailCursor.close();
        }
        Uri photoUri=Uri.withAppendedPath(contactData,ContactsContract.Contacts.Photo.CONTENT_DIRECTORY);
        Cursor photoCursor=getContentResolver().query(photoUri,new String[]{ContactsContract.Contacts.Photo.PHOTO},null,null,null);
        if (photoCursor == null) {
        }
 else {
          try {
            if (photoCursor.moveToFirst()) {
              photo=photoCursor.getBlob(0);
            }
          }
  finally {
            photoCursor.close();
          }
        }
      }
      messenger().sendContact(peer,name,phones,emails,photo != null ? (Base64.encodeToString(photo,Base64.NO_WRAP)) : null);
    }
 else     if (requestCode == REQUEST_LOCATION) {
      messenger().sendLocation(peer,data.getDoubleExtra("longitude",0),data.getDoubleExtra("latitude",0),data.getStringExtra("street"),data.getStringExtra("place"));
    }
  }
  super.onActivityResult(requestCode,resultCode,data);
}

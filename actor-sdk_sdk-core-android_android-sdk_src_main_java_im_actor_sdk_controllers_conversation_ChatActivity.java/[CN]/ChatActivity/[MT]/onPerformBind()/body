{
  super.onPerformBind();
  if (peer.getPeerType() == PeerType.PRIVATE) {
    final UserVM user=users().get(peer.getPeerId());
    if (user == null) {
      finish();
      return;
    }
    bind(barAvatar,user.getId(),user.getAvatar(),user.getName());
    bind(barTitle,user.getName());
    bind(barSubtitle,user);
    bindPrivateTyping(barTyping,barTypingContainer,barSubtitle,messenger().getTyping(user.getId()));
    inputBlockedText.setText(R.string.profile_settings_unblock);
    bind(users().get(peer.getPeerId()).getIsBlocked(),new ValueChangedListener<Boolean>(){
      @Override public void onChanged(      Boolean val,      Value<Boolean> valueModel){
        inputBlockContainer.setVisibility(val ? View.VISIBLE : View.GONE);
      }
    }
);
    inputBlockedText.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        execute(messenger().unblockUser(peer.getPeerId()));
      }
    }
);
  }
 else   if (peer.getPeerType() == PeerType.GROUP) {
    GroupVM group=groups().get(peer.getPeerId());
    if (group == null) {
      finish();
      return;
    }
    bind(barAvatar,group.getId(),group.getAvatar(),group.getName());
    bind(barTitle,group.getName());
    barSubtitleContainer.setVisibility(View.VISIBLE);
    bind(barSubtitle,barSubtitleContainer,group);
    bindGroupTyping(barTyping,barTypingContainer,barSubtitle,messenger().getGroupTyping(group.getId()));
    bind(messenger().getGroups().get(peer.getPeerId()).isMember(),new ValueChangedListener<Boolean>(){
      @Override public void onChanged(      Boolean val,      Value<Boolean> Value){
        inputBlockContainer.setVisibility(val ? View.GONE : View.VISIBLE);
      }
    }
);
  }
  bindGlobalCounter(new ValueChangedListener<Integer>(){
    @Override public void onChanged(    Integer val,    Value<Integer> valueModel){
      if (val > 0) {
        counter.setText(Integer.toString(val));
        showView(counter);
      }
 else {
        hideView(counter);
      }
    }
  }
);
}

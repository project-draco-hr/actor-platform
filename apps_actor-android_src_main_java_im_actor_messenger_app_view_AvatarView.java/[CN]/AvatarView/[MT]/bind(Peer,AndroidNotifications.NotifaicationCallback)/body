{
  Avatar avatar=null;
  String name="";
  int id=0;
switch (peer.getPeerType()) {
case PRIVATE:
    avatar=users().get(peer.getPeerId()).getAvatar().get();
  name=users().get(peer.getPeerId()).getName().get();
id=users().get(peer.getPeerId()).getId();
break;
case GROUP:
avatar=groups().get(peer.getPeerId()).getAvatar().get();
name=groups().get(peer.getPeerId()).getName().get();
id=groups().get(peer.getPeerId()).getId();
break;
}
getHierarchy().setPlaceholderImage(new AvatarPlaceholderDrawable(name,id,placeholderTextSize,getContext()));
if (avatar != null && avatar.getSmallImage() != null && avatar.getSmallImage().getFileReference().getFileId() == id) {
return;
}
if (bindedFile != null) {
bindedFile.detach();
bindedFile=null;
}
if (avatar == null || avatar.getSmallImage() == null) {
callback.onAvatarLoaded();
setImageURI(null);
return;
}
bindedFile=messenger().bindFile(avatar.getSmallImage().getFileReference(),true,new FileVMCallback(){
@Override public void onNotDownloaded(){
}
@Override public void onDownloading(float progress){
}
@Override public void onDownloaded(FileSystemReference reference){
ImageRequest request=ImageRequestBuilder.newBuilderWithSource(Uri.fromFile(new File(reference.getDescriptor()))).setResizeOptions(new ResizeOptions(size,size)).build();
PipelineDraweeController controller=(PipelineDraweeController)Fresco.newDraweeControllerBuilder().setOldController(getController()).setImageRequest(request).build();
setController(controller);
callback.onAvatarLoaded();
}
}
);
}

{
  UserModel userModel=users().get(uid);
  final TypedFuture<Boolean> res=future();
  ask(requests().editUserLocalName(uid,userModel.getAccessHash(),newName,15000),new FutureCallback<ResponseSeq>(){
    @Override public void onResult(    ResponseSeq result){
      system().actorOf(SequenceActor.sequence()).send(new SeqUpdate(result.getSeq(),result.getState(),UpdateUserLocalNameChanged.HEADER,new UpdateUserLocalNameChanged(uid,newName).toByteArray()));
      res.doComplete(true);
    }
    @Override public void onError(    Throwable throwable){
      res.doError(throwable);
    }
  }
);
  return res;
}

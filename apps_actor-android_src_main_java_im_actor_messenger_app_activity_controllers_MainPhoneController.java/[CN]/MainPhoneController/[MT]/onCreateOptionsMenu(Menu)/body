{
  getMenuInflater().inflate(R.menu.main,menu);
  MenuItem menuItem=menu.findItem(R.id.profile);
  final AvatarView avatarView=(AvatarView)menuItem.getActionView().findViewById(R.id.avatarView);
  avatarView.init(Screen.dp(40),18);
  if (messenger().isLoggedIn()) {
    UserVM userModel=users().get(myUid());
    if (userModel != null) {
      getActivity().bind(avatarView,myUid(),userModel.getAvatar(),userModel.getName());
    }
  }
  menuItem.getActionView().setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),MyProfileActivity.class));
    }
  }
);
  searchMenu=menu.findItem(R.id.search);
  if (messenger().getAppState().getIsAppEmpty().get()) {
    searchMenu.setVisible(false);
  }
 else {
    searchMenu.setVisible(true);
  }
  searchView=(SearchView)searchMenu.getActionView();
  searchView.setIconifiedByDefault(true);
  MenuItemCompat.setOnActionExpandListener(searchMenu,new MenuItemCompat.OnActionExpandListener(){
    @Override public boolean onMenuItemActionExpand(    MenuItem item){
      showSearch();
      return true;
    }
    @Override public boolean onMenuItemActionCollapse(    MenuItem item){
      hideSearch();
      return true;
    }
  }
);
  searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener(){
    @Override public boolean onQueryTextSubmit(    String s){
      return false;
    }
    @Override public boolean onQueryTextChange(    String s){
      if (isSearchVisible) {
        if (s.trim().length() > 0) {
          searchDisplay.initSearch(s.trim().toLowerCase(),false);
          searchAdapter.setQuery(s.trim().toLowerCase());
        }
 else {
          searchDisplay.initSearch("search clear crash workaround",false);
        }
      }
      return false;
    }
  }
);
  return true;
}

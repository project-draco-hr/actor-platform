{
  if (state != State.WAITING_HANDSHAKE) {
    return;
  }
  Log.d(TAG,"onOffer");
  isReady=false;
  peerConnection.setRemoteDescription(new WebRTCSessionDescription("offer",sdp)).mapPromise(new Function<WebRTCSessionDescription,Promise<WebRTCSessionDescription>>(){
    @Override public Promise<WebRTCSessionDescription> apply(    WebRTCSessionDescription description){
      return peerConnection.createAnswer();
    }
  }
).mapPromise(new Function<WebRTCSessionDescription,Promise<WebRTCSessionDescription>>(){
    @Override public Promise<WebRTCSessionDescription> apply(    WebRTCSessionDescription description){
      return peerConnection.setLocalDescription(description);
    }
  }
).then(new Consumer<WebRTCSessionDescription>(){
    @Override public void apply(    WebRTCSessionDescription description){
      Log.d(TAG,"onOffer:then");
      root.send(new DoAnswer(uid,deviceId,description.getSdp()));
      Log.d(TAG,"onOffer:then:end");
      onHandShakeCompleted();
    }
  }
).failure(new Consumer<Exception>(){
    @Override public void apply(    Exception e){
      Log.d(TAG,"onOffer:failure");
      e.printStackTrace();
    }
  }
).done(self());
}

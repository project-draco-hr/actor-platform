{
  this.messenger=messenger;
  JSplitPane splitPane=new JSplitPane();
  splitPane.setBorder(new EmptyBorder(0,0,0,0));
  splitPane.setDividerLocation(240);
  splitPane.setDividerSize(0);
  splitPane.setContinuousLayout(true);
  final JList<Dialog> jList=new JList<Dialog>();
  jList.setModel(((SwingListEngine<Dialog>)messenger.getDialogs()).getListModel());
  jList.setCellRenderer(new DialogRenderer());
  jList.setFixedCellHeight(76);
  jList.setFixedCellWidth(240);
  jList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  jList.setSelectionModel(new DefaultListSelectionModel());
  splitPane.setLeftComponent(fill(scroller(jList)));
  JPanel right=verticalLayout();
  JPanel root=new JPanel();
  root.setLayout(new OverlayLayout(root));
  JLabel emptyLabel=new JLabel("Select dialog");
  emptyLabel.setHorizontalAlignment(SwingConstants.CENTER);
  emptyLabel.setVerticalAlignment(SwingConstants.CENTER);
  emptyLabel.setBackground(Color.WHITE);
  emptyLabel.setOpaque(true);
  JPanel emptyLabelFill=fill(emptyLabel);
  emptyLabelFill.setVisible(false);
  root.add(emptyLabelFill);
  final JList<Message> jListMessages=new JList<Message>();
  jListMessages.setCellRenderer(new MessagesRenderer());
  jList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      Dialog dialog=((SwingListEngine<Dialog>)messenger.getDialogs()).getListModel().getElementAt(e.getFirstIndex());
      SwingListEngine<Message> chatMessages=((SwingListEngine<Message>)messenger.getMessages(dialog.getPeer()));
      jListMessages.setModel(chatMessages.getListModel());
    }
  }
);
  root.add(fill(scroller(jListMessages)));
  root.setBackground(Color.WHITE);
  right.add(fill(root));
  right.add(fixSize(new JTextField(),300,64));
  right.setBackground(Color.WHITE);
  splitPane.setRightComponent(fill(right));
  replace(container,splitPane);
}

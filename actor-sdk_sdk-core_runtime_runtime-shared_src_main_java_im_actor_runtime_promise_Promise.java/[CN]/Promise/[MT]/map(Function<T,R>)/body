{
  final Promise<T> self=this;
  return new Promise<>(new PromiseFunc<R>(){
    @Override public void exec(    @NotNull PromiseResolver<R> resolver){
      self.then(new Consumer<T>(){
        @Override public void apply(        T t){
          R r;
          try {
            r=res.apply(t);
          }
 catch (          Exception e) {
            e.printStackTrace();
            resolver.tryError(e);
            return;
          }
          resolver.tryResult(r);
        }
      }
);
      self.failure(new Consumer<Exception>(){
        @Override public void apply(        Exception e){
          resolver.error(e);
        }
      }
);
    }
  }
);
}

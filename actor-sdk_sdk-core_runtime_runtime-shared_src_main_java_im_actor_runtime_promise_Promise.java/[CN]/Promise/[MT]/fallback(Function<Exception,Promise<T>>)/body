{
  final Promise<T> self=this;
  return new Promise<T>(new PromiseFunc<T>(){
    @Override public void exec(    final PromiseResolver<T> resolver){
      self.then(new Consumer<T>(){
        @Override public void apply(        T t){
          resolver.result(t);
        }
      }
);
      self.failure(new Consumer<Exception>(){
        @Override public void apply(        Exception e){
          Promise<T> res=catchThen.apply(e);
          res.then(new Consumer<T>(){
            @Override public void apply(            T t){
              resolver.result(t);
            }
          }
);
          res.failure(new Consumer<Exception>(){
            @Override public void apply(            Exception e){
              resolver.error(e);
            }
          }
);
        }
      }
);
    }
  }
);
}

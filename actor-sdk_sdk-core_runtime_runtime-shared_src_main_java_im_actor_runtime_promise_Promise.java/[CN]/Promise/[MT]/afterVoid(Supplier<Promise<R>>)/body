{
  final Promise<T> self=this;
  return new Promise<R>(new PromiseFunc<R>(){
    @Override public void exec(    final PromiseResolver<R> resolver){
      self.then(new Consumer<T>(){
        @Override public void apply(        T t){
          Promise<R> promise=promiseSupplier.get();
          promise.then(new Consumer<R>(){
            @Override public void apply(            R r){
              resolver.result(r);
            }
          }
);
          promise.failure(new Consumer<Exception>(){
            @Override public void apply(            Exception e){
              resolver.error(e);
            }
          }
);
        }
      }
);
      self.failure(new Consumer<Exception>(){
        @Override public void apply(        Exception e){
          resolver.error(e);
        }
      }
);
    }
  }
);
}

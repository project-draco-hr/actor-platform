{
  AppContext.setContext(application);
  system().setClassLoader(AppContext.getContext().getClassLoader());
  system().addDispatcher("db",1);
  ActivityManager activityManager=(ActivityManager)AppContext.getContext().getSystemService(Context.ACTIVITY_SERVICE);
  int memoryInMB=Math.min(activityManager.getMemoryClass(),32);
  long totalAppHeap=memoryInMB * 1024 * 1024;
  int cacheLimit=(int)totalAppHeap / 4;
  int freeCacheLimit=cacheLimit / 2;
  BitmapClasificator clasificator=new BitmapClasificator.Builder().startExactSize(100,100).setFreeSize(2).setLruSize(15).endFilter().startLessOrEqSize(90,90).setFreeSize(10).useSizeInAmount().endFilter().startAny().useSizeInBytes().setLruSize(cacheLimit).setFreeSize(freeCacheLimit).endFilter().build();
  this.imageLoader=new ImageLoader(clasificator,application);
  this.imageLoader.getTaskResolver().register(ImagePreviewTask.class,ImagePreviewActor.class);
  this.imageLoader.getTaskResolver().register(VideoPreviewTask.class,VideoPreviewActor.class);
  this.imageLoader.getTaskResolver().register(VideoTask.class,VideoActor.class);
  this.imageLoader.getTaskResolver().register(AvatarTask.class,AvatarActor.class);
  this.imageLoader.getTaskResolver().register(FullAvatarTask.class,FullAvatarActor.class);
  ConfigurationBuilder builder=new ConfigurationBuilder();
  BouncyCastleProvider bouncyCastleProvider=new BouncyCastleProvider();
  builder.setThreadingProvider(new JavaThreadingProvider());
  builder.setNetworkProvider(new JavaNetworkProvider());
  builder.setMainThreadProvider(new AndroidMainThreadProvider());
  builder.setLog(new AndroidLog());
  builder.setStorage(new AndroidStorageProvider());
  builder.setLocale(new JavaLocale("En"));
  builder.setPhoneBookProvider(new AndroidPhoneBook());
  builder.setFileSystemProvider(new AndroidFileProvider(application));
  builder.setNotificationProvider(new AndroidNotifications());
  builder.setDispatcherProvider(new AndroidCallbackDispatcher());
  if (BuildConfig.API_SSL) {
    builder.addEndpoint("tls://" + BuildConfig.API_HOST + ":"+ BuildConfig.API_PORT);
  }
 else {
    builder.addEndpoint("tcp://" + BuildConfig.API_HOST + ":"+ BuildConfig.API_PORT);
  }
  builder.setEnableContactsLogging(true);
  builder.setEnableNetworkLogging(true);
  byte[] deviceHash=bouncyCastleProvider.SHA256(Base64.encode((AppContext.getContext().getPackageName() + ":" + Build.SERIAL).getBytes(),Base64.DEFAULT));
  builder.setApiConfiguration(new ApiConfiguration("Actor Android v0.1",1,"??","Android Device",deviceHash));
  builder.setCryptoProvider(bouncyCastleProvider);
  this.messenger=new im.actor.model.android.AndroidMessenger(builder.build());
  AppContext.getContext().getContentResolver().registerContentObserver(ContactsContract.Contacts.CONTENT_URI,true,new ContentObserver(null){
    @Override public void onChange(    boolean selfChange){
      messenger.onPhoneBookChanged();
    }
  }
);
}

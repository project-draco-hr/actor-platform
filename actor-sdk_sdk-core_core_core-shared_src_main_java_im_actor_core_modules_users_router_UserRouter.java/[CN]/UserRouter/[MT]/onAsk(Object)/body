{
  if (message instanceof RouterNameChanged) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterNameChanged nameChanged=(RouterNameChanged)message;
    return onUserNameChanged(nameChanged.getUid(),nameChanged.getName());
  }
 else   if (message instanceof RouterLocalNameChanged) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterLocalNameChanged localNameChanged=(RouterLocalNameChanged)message;
    return onUserLocalNameChanged(localNameChanged.getUid(),localNameChanged.getLocalName());
  }
 else   if (message instanceof RouterAvatarChanged) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterAvatarChanged avatarChanged=(RouterAvatarChanged)message;
    return onUserAvatarChanged(avatarChanged.getUid(),avatarChanged.getAvatar());
  }
 else   if (message instanceof RouterNicknameChanged) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterNicknameChanged nicknameChanged=(RouterNicknameChanged)message;
    return onUserNickChanged(nicknameChanged.getUid(),nicknameChanged.getNickname());
  }
 else   if (message instanceof RouterAboutChanged) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterAboutChanged aboutChanged=(RouterAboutChanged)message;
    return onUserAboutChanged(aboutChanged.getUid(),aboutChanged.getAbout());
  }
 else   if (message instanceof RouterUserRegistered) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterUserRegistered userRegistered=(RouterUserRegistered)message;
    return onUserRegistered(userRegistered.getRid(),userRegistered.getUid(),userRegistered.getDate());
  }
 else   if (message instanceof RouterFetchMissingUsers) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterFetchMissingUsers fetchMissingUsers=(RouterFetchMissingUsers)message;
    return fetchMissingUsers(fetchMissingUsers.getSourcePeers());
  }
 else   if (message instanceof RouterApplyUsers) {
    if (isFreezed) {
      stash();
      return null;
    }
    RouterApplyUsers applyUsers=(RouterApplyUsers)message;
    return applyUsers(applyUsers.getUsers());
  }
 else {
    return super.onAsk(message);
  }
}

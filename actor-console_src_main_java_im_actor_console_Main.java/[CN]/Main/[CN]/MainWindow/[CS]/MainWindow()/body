{
  super("Actor Messenger");
  setBorder(new Border.Invisible());
  Panel horisontalPanel=new Panel(new Border.Invisible(),Panel.Orientation.HORISONTAL);
  Panel leftPanel=new Panel(new Border.Invisible(),Panel.Orientation.VERTICAL);
  final Panel rightPanel=new Panel(new Border.Invisible(),Panel.Orientation.VERTICAL);
  leftPanel.addComponent(new Label("Recent",30));
  final MemoryListEngine<Dialog> dialogEngine=((MemoryListEngine<Dialog>)messenger.getDialogs());
  ArrayList<Dialog> d=new ArrayList<Dialog>();
  final ConsoleList<Dialog> dialogConsoleList=new ConsoleList<Dialog>(leftPanel,d,new ConsoleList.Adapter<Dialog>(){
    @Override public Component createComponent(    Dialog item){
      return new DialogElement(item);
    }
  }
);
  final ConsoleList<Message> messagesList=new ConsoleList<Message>(rightPanel,new ArrayList<Message>(),new ConsoleList.Adapter<Message>(){
    @Override public Component createComponent(    Message item){
      return new MessageElement(item);
    }
  }
);
  dialogEngine.addListener(new MemoryListEngine.EngineListener(){
    @Override public void onItemsChanged(){
      final List<Dialog> itms=dialogEngine.getList();
      messenger.getConfiguration().getMainThread().runOnUiThread(new Runnable(){
        @Override public void run(){
          if (itms.size() > 0) {
            Dialog dialog=itms.get(0);
            messagesList.update(((MemoryListEngine<Message>)messenger.getMessages(dialog.getPeer())).getList());
            messenger.getMessages(dialog.getPeer());
          }
          dialogConsoleList.update(itms);
        }
      }
);
    }
  }
);
  horisontalPanel.addComponent(leftPanel,LinearLayout.MAXIMIZES_VERTICALLY);
  horisontalPanel.addComponent(rightPanel,LinearLayout.MAXIMIZES_VERTICALLY,LinearLayout.MAXIMIZES_HORIZONTALLY);
  addComponent(horisontalPanel);
}

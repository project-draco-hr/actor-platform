{
  if (seq.size() > 3) {
    throw new IllegalArgumentException("Bad sequence size: " + seq.size());
  }
  Enumeration e=seq.getObjects();
  while (e.hasMoreElements()) {
    DERTaggedObject o=(DERTaggedObject)e.nextElement();
switch (o.getTagNo()) {
case 0:
      ASN1Sequence crlValsSeq=(ASN1Sequence)o.getObject();
    Enumeration crlValsEnum=crlValsSeq.getObjects();
  while (crlValsEnum.hasMoreElements()) {
    CertificateList.getInstance(crlValsEnum.nextElement());
  }
this.crlVals=crlValsSeq;
break;
case 1:
ASN1Sequence ocspValsSeq=(ASN1Sequence)o.getObject();
Enumeration ocspValsEnum=ocspValsSeq.getObjects();
while (ocspValsEnum.hasMoreElements()) {
BasicOCSPResponse.getInstance(ocspValsEnum.nextElement());
}
this.ocspVals=ocspValsSeq;
break;
case 2:
this.otherRevVals=OtherRevVals.getInstance(o.getObject());
break;
default :
throw new IllegalArgumentException("invalid tag: " + o.getTagNo());
}
}
}

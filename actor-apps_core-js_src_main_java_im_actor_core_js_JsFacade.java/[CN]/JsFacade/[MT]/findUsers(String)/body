{
  return JsPromise.create(new JsPromiseExecutor(){
    @Override public void execute(){
      messenger.findUsers(query).start(new CommandCallback<UserVM[]>(){
        @Override public void onResult(        UserVM[] users){
          JsArray<JsUser> jsUsers=JsArray.createArray().cast();
          for (          UserVM user : users) {
            jsUsers.push(messenger.getJsUser(user.getId()).get());
          }
          resolve(jsUsers);
        }
        @Override public void onError(        Exception e){
          reject(e.getMessage());
        }
      }
);
    }
  }
);
}

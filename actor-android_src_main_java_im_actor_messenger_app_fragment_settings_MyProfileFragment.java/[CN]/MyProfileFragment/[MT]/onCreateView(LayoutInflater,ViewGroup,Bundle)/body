{
  View view=inflater.inflate(R.layout.fragment_settings,container,false);
  baseColor=getResources().getColor(R.color.primary);
  final UserVM userModel=users().get(myUid());
  final TextView nameView=(TextView)view.findViewById(R.id.name);
  bind(nameView,userModel.getName());
  view.findViewById(R.id.notifications).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),NotificationsActivity.class));
    }
  }
);
  view.findViewById(R.id.helpSettings).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),HelpActivity.class));
    }
  }
);
  final LinearLayout contactsContainer=(LinearLayout)view.findViewById(R.id.phoneContainer);
  bind(userModel.getPhones(),new ValueChangedListener<ArrayList<UserPhone>>(){
    @Override public void onChanged(    ArrayList<UserPhone> val,    ValueModel<ArrayList<UserPhone>> valueModel){
      if (val.size() == 0) {
        contactsContainer.setVisibility(View.GONE);
      }
 else {
        contactsContainer.setVisibility(View.VISIBLE);
        for (int i=0; i < val.size(); i++) {
          final UserPhone record=val.get(i);
          View recordView=inflater.inflate(R.layout.contact_record,contactsContainer,false);
          TintImageView tintImageView=(TintImageView)recordView.findViewById(R.id.recordIcon);
          if (i == 0) {
            tintImageView.setResource(R.drawable.ic_call_white_36dp);
            tintImageView.setVisibility(View.VISIBLE);
          }
 else {
            tintImageView.setVisibility(View.INVISIBLE);
          }
          if (i != val.size()) {
            recordView.findViewById(R.id.divider).setVisibility(View.VISIBLE);
          }
 else {
            recordView.findViewById(R.id.divider).setVisibility(View.GONE);
          }
          String _phoneNumber;
          try {
            Phonenumber.PhoneNumber number=PhoneNumberUtil.getInstance().parse("+" + record.getPhone(),"us");
            _phoneNumber=PhoneNumberUtil.getInstance().format(number,PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
          }
 catch (          NumberParseException e) {
            e.printStackTrace();
            _phoneNumber="+" + record.getPhone();
          }
          final String phoneNumber=_phoneNumber;
          ((TextView)recordView.findViewById(R.id.value)).setText(phoneNumber);
          ((TextView)recordView.findViewById(R.id.title)).setText(record.getTitle());
          contactsContainer.addView(recordView,new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,Screen.dp(72)));
          recordView.setOnClickListener(new View.OnClickListener(){
            @Override public void onClick(            View v){
              new AlertDialog.Builder(getActivity()).setItems(new CharSequence[]{getString(R.string.phone_menu_call).replace("{0}",phoneNumber),getString(R.string.phone_menu_sms).replace("{0}",phoneNumber),getString(R.string.phone_menu_share).replace("{0}",phoneNumber),getString(R.string.phone_menu_copy)},new DialogInterface.OnClickListener(){
                @Override public void onClick(                DialogInterface dialog,                int which){
                  if (which == 0) {
                    startActivity(new Intent(Intent.ACTION_DIAL).setData(Uri.parse("tel:+" + record.getPhone())));
                  }
 else                   if (which == 1) {
                    startActivity(new Intent(Intent.ACTION_VIEW).setData(Uri.parse("sms:+" + record.getPhone())));
                  }
 else                   if (which == 2) {
                    startActivity(new Intent(Intent.ACTION_SEND).setType("text/plain").putExtra(Intent.EXTRA_TEXT,getString(R.string.settings_share_text).replace("{0}",phoneNumber).replace("{1}",userModel.getName().get())));
                  }
 else                   if (which == 3) {
                    android.content.ClipboardManager clipboard=(android.content.ClipboardManager)getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                    android.content.ClipData clip=android.content.ClipData.newPlainText("Phone number",phoneNumber);
                    clipboard.setPrimaryClip(clip);
                    Toast.makeText(getActivity(),R.string.toast_phone_copied,Toast.LENGTH_SHORT).show();
                  }
                }
              }
).show().setCanceledOnTouchOutside(true);
            }
          }
);
          recordView.setOnLongClickListener(new View.OnLongClickListener(){
            @Override public boolean onLongClick(            View v){
              android.content.ClipboardManager clipboard=(android.content.ClipboardManager)getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
              android.content.ClipData clip=android.content.ClipData.newPlainText("Phone number","+" + record.getPhone());
              clipboard.setPrimaryClip(clip);
              Toast.makeText(getActivity(),R.string.toast_phone_copied,Toast.LENGTH_SHORT).show();
              return true;
            }
          }
);
        }
      }
    }
  }
);
  view.findViewById(R.id.chatSettings).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),ChatSettingsActivity.class));
    }
  }
);
  view.findViewById(R.id.encryption).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(getActivity(),SecuritySettingsActivity.class));
    }
  }
);
  avatar=(CoverAvatarView)view.findViewById(R.id.avatar);
  view.findViewById(R.id.avatar).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  final ScrollView scrollView=((ScrollView)view.findViewById(R.id.scrollContainer));
  scrollView.getViewTreeObserver().addOnScrollChangedListener(new ViewTreeObserver.OnScrollChangedListener(){
    @Override public void onScrollChanged(){
      updateActionBar(scrollView.getScrollY());
    }
  }
);
  updateActionBar(scrollView.getScrollY());
  return view;
}

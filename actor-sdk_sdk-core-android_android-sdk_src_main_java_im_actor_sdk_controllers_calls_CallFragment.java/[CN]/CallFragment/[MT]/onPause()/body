{
  super.onPause();
  if (peer.getPeerType() == PeerType.PRIVATE && ActorSDK.sharedActor().isVideoCallsEnabled()) {
    if (source != null) {
      source.stop();
      sourceIsStopped=true;
    }
    if (call != null) {
      ArrayList<WebRTCPeerConnection> webRTCPeerConnections=(ArrayList<WebRTCPeerConnection>)call.getPeerConnection().get();
      for (      WebRTCPeerConnection webRTCPeerConnection : webRTCPeerConnections) {
        webRTCPeerConnection.removeCallback(webRTCPeerConnectionCallback);
        HashMap<MediaStream,AndroidMediaStream> mediaStreams=((AndroidPeerConnection)webRTCPeerConnection).getStreams();
        for (        MediaStream mediaStream : mediaStreams.keySet()) {
          mediaStreams.get(mediaStream).removeRenderer(remoteRender);
        }
        remoteRendererBinded=false;
        AndroidMediaStream stream=((AndroidPeerConnection)webRTCPeerConnection).getLocalStream();
        if (stream != null) {
          stream.removeRenderer(localRender);
        }
      }
    }
  }
  if (call != null && call.getState().get() != CallState.ENDED) {
    final NotificationCompat.Builder builder=new NotificationCompat.Builder(getActivity());
    builder.setAutoCancel(true);
    builder.setSmallIcon(R.drawable.ic_app_notify);
    builder.setPriority(NotificationCompat.PRIORITY_MAX);
    builder.setContentTitle(getActivity().getString(R.string.call_notification));
    Intent intent=new Intent(getActivity(),CallActivity.class);
    intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
    intent.putExtra("callId",callId);
    builder.setContentIntent(PendingIntent.getActivity(getActivity(),0,intent,PendingIntent.FLAG_UPDATE_CURRENT));
    Notification n=builder.build();
    n.flags+=Notification.FLAG_ONGOING_EVENT;
    manager.notify(NOTIFICATION_ID,n);
  }
  disableWakeLock();
}

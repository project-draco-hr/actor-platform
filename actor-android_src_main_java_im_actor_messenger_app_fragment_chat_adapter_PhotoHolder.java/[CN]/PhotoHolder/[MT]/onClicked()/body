{
  if (fileMessage.getUploadPath() != null) {
switch (UploadModel.uploadState(message.getRid()).getValue().getState()) {
default :
case NONE:
      MessageDeliveryActor.messageSender().mediaTryAgain(type,id,message.getRid());
    break;
case UPLOADING:
  MessageDeliveryActor.messageSender().mediaPause(type,id,message.getRid());
break;
case UPLOADED:
break;
}
}
 else {
if (fileMessage.isDownloaded()) {
if (message.getContent() instanceof PhotoMessage) {
Downloaded d=KeyValueEngines.downloaded().get(((PhotoMessage)message.getContent()).getLocation().getFileId());
if (d == null) {
return;
}
context.startActivity(Intents.openPhoto(d));
}
 else if (message.getContent() instanceof VideoMessage) {
Downloaded d=KeyValueEngines.downloaded().get(((VideoMessage)message.getContent()).getLocation().getFileId());
if (d == null) {
return;
}
context.startActivity(Intents.openVideo(d));
}
}
 else {
switch (DownloadModel.downloadState(fileMessage.getLocation().getFileId()).getValue().getState()) {
case NONE:
DownloadManager.downloader().request(type,id,message.getRid(),fileMessage,false);
break;
case DOWNLOADING:
DownloadManager.downloader().pause(fileMessage);
break;
case DOWNLOADED:
break;
}
}
}
}

{
  View currentFocused=findFocus();
  if (currentFocused == this) {
    currentFocused=null;
  }
 else   if (currentFocused != null) {
    boolean isChild=false;
    for (ViewParent parent=currentFocused.getParent(); parent instanceof ViewGroup; parent=parent.getParent()) {
      if (parent == this) {
        isChild=true;
        break;
      }
    }
    if (!isChild) {
      final StringBuilder sb=new StringBuilder();
      sb.append(currentFocused.getClass().getSimpleName());
      for (ViewParent parent=currentFocused.getParent(); parent instanceof ViewGroup; parent=parent.getParent()) {
        sb.append(" => ").append(parent.getClass().getSimpleName());
      }
      Log.e(TAG,"arrowScroll tried to find focus based on non-child " + "current focused view " + sb.toString());
      currentFocused=null;
    }
  }
  boolean handled=false;
  View nextFocused=FocusFinder.getInstance().findNextFocus(this,currentFocused,direction);
  if (nextFocused != null && nextFocused != currentFocused) {
    if (direction == View.FOCUS_UP) {
      final int nextTop=getChildRectInPagerCoordinates(mTempRect,nextFocused).top;
      final int currTop=getChildRectInPagerCoordinates(mTempRect,currentFocused).top;
      if (currentFocused != null && nextTop >= currTop) {
        handled=pageUp();
      }
 else {
        handled=nextFocused.requestFocus();
      }
    }
 else     if (direction == View.FOCUS_DOWN) {
      final int nextDown=getChildRectInPagerCoordinates(mTempRect,nextFocused).bottom;
      final int currDown=getChildRectInPagerCoordinates(mTempRect,currentFocused).bottom;
      if (currentFocused != null && nextDown <= currDown) {
        handled=pageDown();
      }
 else {
        handled=nextFocused.requestFocus();
      }
    }
  }
 else   if (direction == FOCUS_UP || direction == FOCUS_BACKWARD) {
    handled=pageUp();
  }
 else   if (direction == FOCUS_DOWN || direction == FOCUS_FORWARD) {
    handled=pageDown();
  }
  if (handled) {
    playSoundEffect(SoundEffectConstants.getContantForFocusDirection(direction));
  }
  return handled;
}

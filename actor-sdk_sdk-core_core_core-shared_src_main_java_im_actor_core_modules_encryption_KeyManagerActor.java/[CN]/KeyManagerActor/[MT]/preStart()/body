{
  Log.d(TAG,"Starting KeyManager...");
  encryptionKeysStorage=Storage.createKeyValue("encryption_keys");
  ownKeys=null;
  byte[] ownKeysStorage=encryptionKeysStorage.loadItem(0);
  if (ownKeysStorage != null) {
    try {
      ownKeys=new PrivateKeyStorage(ownKeysStorage);
      if (ownKeys.isWasRegenerated()) {
        encryptionKeysStorage.addOrUpdateItem(0,ownKeys.toByteArray());
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
  if (ownKeys == null) {
    Curve25519KeyPair identityPrivate=Curve25519.keyGen(Crypto.randomBytes(64));
    Curve25519KeyPair key0=Curve25519.keyGen(Crypto.randomBytes(64));
    ownKeys=new PrivateKeyStorage(0,new PrivateKey(RandomUtils.nextRid(),"curve25519",identityPrivate.getPrivateKey(),identityPrivate.getPublicKey()),new PrivateKey[]{new PrivateKey(RandomUtils.nextRid(),"curve25519",key0.getPrivateKey(),key0.getPublicKey())},new PrivateKey[0]);
    encryptionKeysStorage.addOrUpdateItem(0,ownKeys.toByteArray());
  }
  if (ownKeys.getKeyGroupId() == 0) {
    ApiEncryptionKey identityKey=ownKeys.getIdentityKey().toApiKey();
    ArrayList<ApiEncryptionKey> keys=ManagedList.of(ownKeys.getKeys()).map(PrivateKey.TO_API);
    ArrayList<ApiEncryptionKeySignature> signatures=ManagedList.of(ownKeys.getKeys()).map(PrivateKey.SIGN(ownKeys.getIdentityKey()));
    Log.d(TAG,"Creation of new key group");
    api(new RequestCreateNewKeyGroup(identityKey,Configuration.SUPPORTED,keys,signatures)).then(new Consumer<ResponseCreateNewKeyGroup>(){
      @Override public void apply(      ResponseCreateNewKeyGroup response){
        ownKeys=ownKeys.setGroupId(response.getKeyGroupId());
        encryptionKeysStorage.addOrUpdateItem(0,ownKeys.toByteArray());
        onMainKeysReady();
      }
    }
).failure(new Consumer<Exception>(){
      @Override public void apply(      Exception e){
        Log.w(TAG,"Keys upload error");
        Log.e(TAG,e);
      }
    }
);
  }
 else {
    onMainKeysReady();
  }
}

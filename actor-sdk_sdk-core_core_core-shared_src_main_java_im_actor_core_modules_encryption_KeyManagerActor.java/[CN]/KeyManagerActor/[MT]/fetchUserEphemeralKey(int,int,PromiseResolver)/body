{
  request(new RequestLoadEphermalPublicKeys(new ApiUserOutPeer(uid,getUser(uid).getAccessHash()),keyGroupId),new RpcCallback<ResponsePublicKeys>(){
    @Override public void onResult(    ResponsePublicKeys response){
      if (response.getPublicKey().size() == 0) {
        Log.w(TAG,"Public key error");
        future.error(new RuntimeException());
        return;
      }
      ApiEncryptionKey key=response.getPublicKey().get(0);
      PublicKey pkey=new PublicKey(key.getKeyId(),key.getKeyAlg(),key.getKeyMaterial());
      Log.d(TAG,"(uid: " + uid + ") Fetched ephemeral "+ Crypto.keyHash(key.getKeyMaterial()));
      future.result(new FetchUserEphemeralKeyResponse(pkey));
    }
    @Override public void onError(    RpcException e){
      Log.w(TAG,"Public key error");
      Log.e(TAG,e);
      future.error(e);
    }
  }
);
}

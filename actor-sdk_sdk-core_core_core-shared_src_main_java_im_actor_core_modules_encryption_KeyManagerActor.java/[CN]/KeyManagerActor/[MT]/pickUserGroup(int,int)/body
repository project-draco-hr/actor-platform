{
  return ask(self(),new FetchUserKeys(uid)).map(new Function<UserKeys,Tuple2<UserKeysGroup,UserKeys>>(){
    @Override public Tuple2<UserKeysGroup,UserKeys> apply(    UserKeys userKeys){
      UserKeysGroup keysGroup=null;
      for (      UserKeysGroup g : userKeys.getUserKeysGroups()) {
        if (g.getKeyGroupId() == keyGroupId) {
          keysGroup=g;
        }
      }
      if (keysGroup == null) {
        throw new RuntimeException("Key Group #" + keyGroupId + " not found");
      }
      return new Tuple2<>(keysGroup,userKeys);
    }
  }
);
}

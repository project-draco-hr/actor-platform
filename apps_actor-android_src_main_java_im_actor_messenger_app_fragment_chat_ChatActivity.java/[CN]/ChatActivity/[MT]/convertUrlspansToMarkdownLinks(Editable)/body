{
  int start;
  int end;
  boolean urlTitleEndsSpace;
  String url;
  String urlTitle;
  String mdUrl;
  URLSpan[] spans=messageBody.getText().getSpans(0,text.length(),URLSpan.class);
  ArrayList<Integer> mentions=new ArrayList<Integer>();
  for (  URLSpan span : spans) {
    start=text.getSpanStart(span);
    end=text.getSpanEnd(span);
    if (start != -1 && end <= text.length()) {
      url=span.getURL();
      urlTitle=text.toString().substring(start,end);
      urlTitleEndsSpace=urlTitle.endsWith(" ");
      urlTitle=urlTitle.trim();
      mdUrl="[".concat(urlTitle).concat("](").concat(url).concat(")");
      if (urlTitleEndsSpace)       mdUrl=mdUrl.concat(" ");
      boolean addMention=true;
      if (urlTitle.equals("@".concat(MENTION_BOUNDS_STR).concat(MENTION_BOUNDS_STR)) || urlTitle.equals("@")) {
        mdUrl="@";
        addMention=false;
      }
      if (!urlTitle.contains("@")) {
        mdUrl=urlTitle;
        addMention=false;
      }
      if (addMention) {
        mentions.add(Integer.parseInt(url.split("://")[1]));
      }
      text.replace(start,end,mdUrl);
    }
  }
  return mentions;
}

{
  super(configuration);
  fileSystemProvider=(JsFileSystemProvider)Storage.getFileSystemRuntime();
  filesModule=new JsFilesModule(modules);
  jsBindingModule=new JsBindingModule(this,filesModule,modules);
  isElectron=JsElectronApp.isElectron();
  if (JsChromePush.isSupported()) {
    Log.d("JsMessenger","ChromePush Supported");
    JsChromePush.subscribe(new PushSubscribeResult(){
      @Override public void onSubscribedChrome(      String token){
        Log.d("JsMessenger","Subscribed: " + token);
        registerGooglePush(209133700967L,token);
      }
      @Override public void onSubscriptionFailure(){
        Log.d("JsMessenger","Subscribe failure");
      }
    }
);
  }
 else {
    Log.d("JsMessenger","ChromePush NOT Supported");
  }
  if (JsSafariPush.isSupported()) {
    Log.d("JsMessenger","SafariPush Supported");
  }
 else {
    Log.d("JsMessenger","SafariPush NOT Supported");
  }
  JsMessenger.instance=this;
  if (isElectron) {
    getAppState().getGlobalTempCounter().subscribe(new ValueChangedListener<Integer>(){
      @Override public void onChanged(      Integer val,      Value<Integer> valueModel){
        if (val == null || val == 0) {
          JsElectronApp.hideNewMessages();
        }
 else {
          JsElectronApp.updateBadge(val);
        }
      }
    }
);
  }
}

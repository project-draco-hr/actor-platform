{
  if (isCompleted) {
    return;
  }
  if (nextBlock == blocksCount && uploadCount == 0) {
    if (LOG) {
      Log.d(TAG,"Completing...");
    }
    long crc=crc32.getValue();
    if (LOG) {
      Log.d(TAG,"Src #" + crc);
      Log.d(TAG,"Closing files...");
    }
    inputFile.close();
    outputFile.close();
    request(new RequestCommitFileUpload(uploadConfig),new RpcCallback<ResponseCommitFileUpload>(){
      @Override public void onResult(      ResponseCommitFileUpload response){
        if (LOG) {
          Log.d(TAG,"Upload completed...");
        }
        FileReference location=EntityConverter.convert(response.getUploadedFileLocation(),fileName,srcReference.getSize());
        FileSystemReference reference=config().getFileSystemProvider().commitTempFile(destReference,location);
        reportComplete(location,reference);
      }
      @Override public void onError(      RpcException e){
        if (LOG) {
          Log.d(TAG,"Upload complete error");
        }
        reportError();
      }
    }
);
    return;
  }
  if (nextBlock < blocksCount && uploadCount < SIM_BLOCKS_COUNT) {
    final int blockIndex=nextBlock++;
    int size=blockSize;
    int fileOffset=blockIndex * blockSize;
    if ((blockIndex + 1) * blockSize > srcReference.getSize()) {
      size=srcReference.getSize() - blockIndex * blockSize;
    }
    byte[] data=new byte[size];
    if (!inputFile.read(fileOffset,data,0,size)) {
      if (LOG) {
        Log.d(TAG,"read #" + blockIndex + " error");
      }
      reportError();
      return;
    }
    if (!outputFile.write(fileOffset,data,0,size)) {
      if (LOG) {
        Log.d(TAG,"write #" + blockIndex + " error");
      }
      reportError();
      return;
    }
    crc32.update(data,0,size);
    if (LOG) {
      Log.d(TAG,"Starting block upload #" + blockIndex);
    }
    uploadCount++;
    uploadPart(blockIndex,fileOffset,data);
    checkQueue();
  }
 else {
    if (LOG) {
      Log.d(TAG,"Nothing to do");
    }
  }
}

{
  View itemView;
  if (position <= 4) {
    itemView=LayoutInflater.from(container.getContext()).inflate(R.layout.emoji_smiles_page,null);
    ViewGroup emojicontainer=(ViewGroup)itemView.findViewById(R.id.emojiPackContainer);
    View noEmojiTV=itemView.findViewById(R.id.text);
    ArrayList<Long> emojiPack=new ArrayList<Long>();
switch (position) {
case 0:
      emojiPack=SmilesPack.getRecent();
    break;
case 1:
  emojiPack=new ArrayList<Long>(Arrays.asList(SmilesPack.STANDART));
break;
case 2:
emojiPack=new ArrayList<Long>(Arrays.asList(SmilesPack.NATURE));
break;
case 3:
emojiPack=new ArrayList<Long>(Arrays.asList(SmilesPack.TRANSPORT));
break;
case 4:
emojiPack=new ArrayList<Long>(Arrays.asList(SmilesPack.UNSORTED));
break;
}
int emojisMaxRowCount=8;
int emojiSize=Screen.dp(45);
int emojiPadding=emojiSize / 5;
if (Screen.getWidth() / emojiSize < emojisMaxRowCount) {
emojisMaxRowCount=Screen.getWidth() / emojiSize;
}
final SmilesPackView smilesPackView=new SmilesPackView(container.getContext(),SmileProcessor.emoji(),emojiPack,emojisMaxRowCount,emojiSize,emojiPadding);
FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);
params.gravity=Gravity.CENTER;
emojicontainer.addView(smilesPackView,params);
if (!SmileProcessor.emoji().isLoaded()) {
SmileProcessor.emoji().registerListener(new SmilesListener(){
@Override public void onSmilesUpdated(boolean completed){
smilesPackView.update();
SmileProcessor.emoji().unregisterListener(this);
}
}
);
}
if (emojiPack.size() == 0) {
noEmojiTV.setVisibility(View.VISIBLE);
}
 else {
noEmojiTV.setVisibility(View.GONE);
}
smilesPackView.setOnSmileClickListener(new OnSmileClickListener(){
@Override public void onEmojiClicked(String smile){
emojiKeyboard.onEmojiClicked(smile);
}
}
);
SmilesPack.setOnRecentChangeListener(new OnRecentChangeListener(){
@Override public void onRecentChange(){
smilesPackView.update();
}
}
);
}
 else {
itemView=new StickersView(container.getContext(),emojiKeyboard);
}
container.addView(itemView,0);
return itemView;
}

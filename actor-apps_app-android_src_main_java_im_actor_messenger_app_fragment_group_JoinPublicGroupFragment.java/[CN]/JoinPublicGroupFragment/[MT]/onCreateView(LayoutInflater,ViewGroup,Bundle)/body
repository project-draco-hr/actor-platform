{
  Command<ResponseGetPublicGroups> cmd=messenger().executeExternalCommand(new RequestGetPublicGroups());
  if (cmd != null)   cmd.start(new CommandCallback<ResponseGetPublicGroups>(){
    @Override public void onResult(    ResponseGetPublicGroups res){
      final ArrayList<PublicGroup> groups=new ArrayList<PublicGroup>();
      for (      im.actor.model.api.PublicGroup g : res.getGroups()) {
        groups.add(new PublicGroup(g));
      }
      getActivity().runOnUiThread(new Runnable(){
        @Override public void run(){
          adapter.updateGroups(groups);
          hideView(emptyView);
          showView(listView);
        }
      }
);
    }
    @Override public void onError(    Exception e){
    }
  }
);
  final View res=inflater.inflate(R.layout.fragment_list,container,false);
  listView=(ListView)res.findViewById(R.id.listView);
  emptyView=(TextView)res.findViewById(R.id.emptyView);
  emptyView.setText(getString(R.string.picker_loading));
  adapter=new JoinPublicGroupAdapter(new ArrayList<PublicGroup>(),getActivity());
  listView.setAdapter(adapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      final PublicGroup item=(PublicGroup)parent.getItemAtPosition(position);
      execute(messenger().joinPublicGroup(item.getId(),item.getAccessHash()),R.string.main_fab_join_public_group,new CommandCallback<Integer>(){
        @Override public void onResult(        Integer res){
          startActivity(Intents.openDialog(Peer.group(res),false,getActivity()));
        }
        @Override public void onError(        Exception e){
          if (e instanceof RpcException) {
            RpcException re=(RpcException)e;
            if ("USER_ALREADY_INVITED".equals(re.getTag())) {
              startActivity(Intents.openDialog(Peer.group(item.getId()),false,getActivity()));
            }
          }
        }
      }
);
    }
  }
);
  return res;
}

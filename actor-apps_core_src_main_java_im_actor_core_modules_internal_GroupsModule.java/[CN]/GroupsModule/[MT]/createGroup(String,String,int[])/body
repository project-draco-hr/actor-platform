{
  return new Command<Integer>(){
    @Override public void start(    final CommandCallback<Integer> callback){
      ArrayList<ApiUserOutPeer> peers=new ArrayList<ApiUserOutPeer>();
      for (      int u : uids) {
        User user=users().getValue(u);
        if (user != null) {
          peers.add(new ApiUserOutPeer(u,user.getAccessHash()));
        }
      }
      final long rid=RandomUtils.nextRid();
      request(new RequestCreateGroup(rid,title,peers),new RpcCallback<ResponseCreateGroup>(){
        @Override public void onResult(        ResponseCreateGroup response){
          List<ApiMember> members=new ArrayList<ApiMember>();
          for (          int u : uids) {
            members.add(new ApiMember(u,myUid(),response.getDate(),u == myUid()));
          }
          final ApiGroup group=new ApiGroup(response.getGroupPeer().getGroupId(),response.getGroupPeer().getAccessHash(),title,null,true,myUid(),members,response.getDate(),null,null,null,null,null,true,null,null,null,null);
          ArrayList<ApiGroup> groups=new ArrayList<ApiGroup>();
          groups.add(group);
          updates().onFatSeqUpdateReceived(response.getSeq(),response.getState(),new UpdateGroupInvite(group.getId(),rid,myUid(),response.getDate()),new ArrayList<ApiUser>(),groups);
          updates().executeAfter(response.getSeq(),new Runnable(){
            @Override public void run(){
              if (avatarDescriptor != null) {
                changeAvatar(group.getId(),avatarDescriptor);
              }
              runOnUiThread(new Runnable(){
                @Override public void run(){
                  callback.onResult(group.getId());
                }
              }
);
            }
          }
);
        }
        @Override public void onError(        final RpcException e){
          runOnUiThread(new Runnable(){
            @Override public void run(){
              callback.onError(e);
            }
          }
);
        }
      }
);
    }
  }
;
}
